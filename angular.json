{
  "version": 1,
  "cli": {
    "defaultCollection": "@nrwl/angular"
  },
  "defaultProject": "helloworld-azure",
  "schematics": {
    "@nrwl/angular:application": {
      "style": "scss",
      "linter": "eslint",
      "unitTestRunner": "jest",
      "e2eTestRunner": "cypress"
    },
    "@nrwl/angular:library": {
      "style": "scss",
      "linter": "eslint",
      "unitTestRunner": "jest",
      "strict": true
    },
    "@ngneat/spectator:spectator-component": {
      "jest": true,
      "style": "scss"
    },
    "@nrwl/angular:component": {
      "style": "scss"
    }
  },
  "projects": {
    "cdba": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/cdba",
      "sourceRoot": "apps/cdba/src",
      "prefix": "cdba",
      "architect": {
        "build": {
          "builder": "@angular-builders/custom-webpack:browser",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/cdba",
            "index": "apps/cdba/src/index.html",
            "main": "apps/cdba/src/main.ts",
            "polyfills": "apps/cdba/src/polyfills.ts",
            "tsConfig": "apps/cdba/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": ["apps/cdba/src/favicon.ico", "apps/cdba/src/assets"],
            "styles": [
              "apps/cdba/src/styles.scss",
              "node_modules/@fontsource/roboto/300.css",
              "node_modules/@fontsource/roboto/400.css",
              "node_modules/@fontsource/roboto/500.css"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": ["libs/shared/ui/styles/src"]
            },
            "budgets": [
              {
                "type": "initial",
                "maximumWarning": "2mb",
                "maximumError": "5mb"
              },
              {
                "type": "anyComponentStyle",
                "maximumWarning": "6kb",
                "maximumError": "25kb"
              }
            ],
            "customWebpackConfig": {
              "path": "apps/cdba/webpack.config.js"
            }
          },
          "configurations": {
            "local": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            },
            "dev": {
              "statsJson": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true,
              "fileReplacements": [
                {
                  "replace": "apps/cdba/src/environments/environment.ts",
                  "with": "apps/cdba/src/environments/environment.dev.ts"
                }
              ]
            },
            "qa": {
              "outputHashing": "bundles",
              "statsJson": true,
              "fileReplacements": [
                {
                  "replace": "apps/cdba/src/environments/environment.ts",
                  "with": "apps/cdba/src/environments/environment.qa.ts"
                }
              ]
            },
            "production": {
              "outputHashing": "bundles",
              "fileReplacements": [
                {
                  "replace": "apps/cdba/src/environments/environment.ts",
                  "with": "apps/cdba/src/environments/environment.prod.ts"
                }
              ]
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-builders/custom-webpack:dev-server",
          "options": {
            "browserTarget": "cdba:build"
          },
          "configurations": {
            "local": {
              "browserTarget": "cdba:build:local"
            },
            "dev": {
              "browserTarget": "cdba:build:dev"
            },
            "qa": {
              "browserTarget": "cdba:build:qa"
            },
            "production": {
              "browserTarget": "cdba:build:production"
            }
          },
          "defaultConfiguration": "local"
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/cdba/src/**/*.ts",
              "apps/cdba/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/apps/cdba/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/cdba/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/cdba"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "apps/cdba"
          }
        }
      }
    },
    "cdba-e2e": {
      "root": "apps/cdba-e2e",
      "sourceRoot": "apps/cdba-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/cdba-e2e/cypress.json",
            "tsConfig": "apps/cdba-e2e/tsconfig.e2e.json",
            "devServerTarget": "cdba:serve"
          },
          "configurations": {
            "local": {
              "devServerTarget": "cdba:serve:local"
            },
            "production": {
              "devServerTarget": "cdba:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/cdba-e2e/**/*.{js,ts}"]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/apps/cdba-e2e/checkstyle.xml"
            }
          }
        }
      }
    },
    "ga": {
      "projectType": "application",
      "root": "apps/ga",
      "sourceRoot": "apps/ga/src",
      "prefix": "ga",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/ga",
            "index": "apps/ga/src/index.html",
            "main": "apps/ga/src/main.ts",
            "polyfills": "apps/ga/src/polyfills.ts",
            "tsConfig": "apps/ga/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": ["apps/ga/src/favicon.ico", "apps/ga/src/assets"],
            "styles": [
              "apps/ga/src/styles.scss",
              "node_modules/schaeffler-icons/style.css",
              "node_modules/@fontsource/roboto/300.css",
              "node_modules/@fontsource/roboto/400.css",
              "node_modules/@fontsource/roboto/500.css"
            ],
            "scripts": [],
            "budgets": [
              {
                "type": "initial",
                "maximumWarning": "2mb",
                "maximumError": "5mb"
              },
              {
                "type": "anyComponentStyle",
                "maximumWarning": "6kb",
                "maximumError": "25kb"
              }
            ]
          },
          "configurations": {
            "local": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            },
            "dev": {
              "statsJson": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true,
              "fileReplacements": [
                {
                  "replace": "apps/ga/src/environments/environment.ts",
                  "with": "apps/ga/src/environments/environment.dev.ts"
                }
              ]
            },
            "qa": {
              "outputHashing": "bundles",
              "statsJson": true,
              "fileReplacements": [
                {
                  "replace": "apps/ga/src/environments/environment.ts",
                  "with": "apps/ga/src/environments/environment.qa.ts"
                }
              ]
            },
            "production": {
              "outputHashing": "bundles",
              "fileReplacements": [
                {
                  "replace": "apps/ga/src/environments/environment.ts",
                  "with": "apps/ga/src/environments/environment.prod.ts"
                }
              ]
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "local": {
              "browserTarget": "ga:build:local"
            },
            "dev": {
              "browserTarget": "ga:build:dev"
            },
            "qa": {
              "browserTarget": "ga:build:qa"
            },
            "production": {
              "browserTarget": "ga:build:production"
            }
          },
          "defaultConfiguration": "local"
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/ga/src/**/*.ts", "apps/ga/src/**/*.html"]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/apps/ga/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/ga"],
          "options": {
            "jestConfig": "apps/ga/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "ga-e2e": {
      "root": "apps/ga-e2e",
      "sourceRoot": "apps/ga-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/ga-e2e/cypress.json",
            "tsConfig": "apps/ga-e2e/tsconfig.e2e.json",
            "devServerTarget": "ga:serve:development"
          },
          "configurations": {
            "local": {
              "devServerTarget": "ga:serve:local"
            },
            "production": {
              "devServerTarget": "ga:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/ga-e2e/**/*.{js,ts}"]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/apps/ga-e2e/checkstyle.xml"
            }
          }
        }
      }
    },
    "goldwind": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/goldwind",
      "sourceRoot": "apps/goldwind/src",
      "prefix": "goldwind",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/goldwind",
            "index": "apps/goldwind/src/index.html",
            "main": "apps/goldwind/src/main.ts",
            "polyfills": "apps/goldwind/src/polyfills.ts",
            "tsConfig": "apps/goldwind/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              "apps/goldwind/src/favicon.ico",
              "apps/goldwind/src/assets"
            ],
            "styles": [
              "apps/goldwind/src/styles.scss",
              "node_modules/schaeffler-icons/style.css",
              "node_modules/@fontsource/roboto/300.css",
              "node_modules/@fontsource/roboto/400.css",
              "node_modules/@fontsource/roboto/500.css"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": ["libs/shared/ui/styles/src"]
            },
            "budgets": [
              {
                "type": "initial",
                "maximumWarning": "2mb",
                "maximumError": "5mb"
              },
              {
                "type": "anyComponentStyle",
                "maximumWarning": "6kb",
                "maximumError": "25kb"
              }
            ]
          },
          "configurations": {
            "local": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            },
            "dev": {
              "statsJson": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true,
              "fileReplacements": [
                {
                  "replace": "apps/goldwind/src/environments/environment.ts",
                  "with": "apps/goldwind/src/environments/environment.dev.ts"
                }
              ]
            },
            "qa": {
              "outputHashing": "bundles",
              "statsJson": true,
              "fileReplacements": [
                {
                  "replace": "apps/goldwind/src/environments/environment.ts",
                  "with": "apps/goldwind/src/environments/environment.dev.ts"
                }
              ]
            },
            "production": {
              "outputHashing": "bundles",
              "fileReplacements": [
                {
                  "replace": "apps/goldwind/src/environments/environment.ts",
                  "with": "apps/goldwind/src/environments/environment.prod.ts"
                }
              ]
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "goldwind:build"
          },
          "configurations": {
            "local": {
              "browserTarget": "goldwind:build:local"
            },
            "dev": {
              "browserTarget": "goldwind:build:dev"
            },
            "´qa": {
              "browserTarget": "goldwind:build:qa"
            },
            "production": {
              "browserTarget": "goldwind:build:production"
            }
          },
          "defaultConfiguration": "local"
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/goldwind/src/**/*.ts",
              "apps/goldwind/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/apps/goldwind/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/goldwind/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/goldwind"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "apps/goldwind"
          }
        }
      }
    },
    "goldwind-e2e": {
      "root": "apps/goldwind-e2e",
      "sourceRoot": "apps/goldwind-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/goldwind-e2e/cypress.json",
            "tsConfig": "apps/goldwind-e2e/tsconfig.e2e.json",
            "devServerTarget": "goldwind:serve"
          },
          "configurations": {
            "local": {
              "devServerTarget": "goldwind:serve:local"
            },
            "production": {
              "devServerTarget": "goldwind:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/goldwind-e2e/**/*.{js,ts}"]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/apps/goldwind-e2e/checkstyle.xml"
            }
          }
        }
      }
    },
    "gq": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/gq",
      "sourceRoot": "apps/gq/src",
      "prefix": "gq",
      "architect": {
        "build": {
          "builder": "@angular-builders/custom-webpack:browser",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/gq",
            "index": "apps/gq/src/index.html",
            "main": "apps/gq/src/main.ts",
            "polyfills": "apps/gq/src/polyfills.ts",
            "tsConfig": "apps/gq/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": ["apps/gq/src/favicon.ico", "apps/gq/src/assets"],
            "styles": [
              "apps/gq/src/styles.scss",
              "node_modules/schaeffler-icons/style.css",
              "node_modules/@fontsource/roboto/300.css",
              "node_modules/@fontsource/roboto/400.css",
              "node_modules/@fontsource/roboto/500.css"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": ["libs/shared/ui/styles/src"]
            },
            "budgets": [
              {
                "type": "initial",
                "maximumWarning": "2mb",
                "maximumError": "5mb"
              },
              {
                "type": "anyComponentStyle",
                "maximumWarning": "6kb",
                "maximumError": "25kb"
              }
            ],
            "customWebpackConfig": {
              "path": "apps/gq/webpack.config.js"
            }
          },
          "configurations": {
            "local": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            },
            "dev": {
              "outputHashing": "bundles",
              "statsJson": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true,
              "fileReplacements": [
                {
                  "replace": "apps/gq/src/environments/environment.ts",
                  "with": "apps/gq/src/environments/environment.dev.ts"
                }
              ]
            },
            "qa": {
              "outputHashing": "bundles",
              "statsJson": true,
              "fileReplacements": [
                {
                  "replace": "apps/gq/src/environments/environment.ts",
                  "with": "apps/gq/src/environments/environment.qa.ts"
                }
              ]
            },
            "production": {
              "outputHashing": "bundles",
              "fileReplacements": [
                {
                  "replace": "apps/gq/src/environments/environment.ts",
                  "with": "apps/gq/src/environments/environment.prod.ts"
                }
              ]
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-builders/custom-webpack:dev-server",
          "options": {
            "browserTarget": "gq:build"
          },
          "configurations": {
            "local": {
              "browserTarget": "gq:build:local"
            },
            "dev": {
              "browserTarget": "gq:build:dev"
            },
            "qa": {
              "browserTarget": "gq:build:qa"
            },
            "production": {
              "browserTarget": "gq:build:production"
            }
          },
          "defaultConfiguration": "local"
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/gq/src/**/*.ts", "apps/gq/src/**/*.html"]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/apps/gq/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/gq/jest.config.js",
            "passWithNoTests": true,
            "setupFile": "apps/gq/src/test-setup.ts"
          },
          "outputs": ["coverage/apps/gq"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "apps/gq"
          }
        }
      }
    },
    "gq-e2e": {
      "root": "apps/gq-e2e",
      "sourceRoot": "apps/gq-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/gq-e2e/cypress.json",
            "tsConfig": "apps/gq-e2e/tsconfig.e2e.json",
            "devServerTarget": "gq:serve"
          },
          "configurations": {
            "local": {
              "devServerTarget": "gq:serve:local"
            },
            "production": {
              "devServerTarget": "gq:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/gq-e2e/**/*.{js,ts}"]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/apps/gq-e2e/checkstyle.xml"
            }
          }
        }
      }
    },
    "helloworld-azure": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/helloworld-azure",
      "sourceRoot": "apps/helloworld-azure/src",
      "prefix": "helloworld-azure",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/helloworld-azure",
            "index": "apps/helloworld-azure/src/index.html",
            "main": "apps/helloworld-azure/src/main.ts",
            "polyfills": "apps/helloworld-azure/src/polyfills.ts",
            "tsConfig": "apps/helloworld-azure/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              "apps/helloworld-azure/src/favicon.ico",
              "apps/helloworld-azure/src/assets"
            ],
            "styles": [
              "apps/helloworld-azure/src/styles.scss",
              "node_modules/schaeffler-icons/style.css",
              "node_modules/@fontsource/roboto/300.css",
              "node_modules/@fontsource/roboto/400.css",
              "node_modules/@fontsource/roboto/500.css"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": ["libs/shared/ui/styles/src"]
            },
            "budgets": [
              {
                "type": "initial",
                "maximumWarning": "2mb",
                "maximumError": "5mb"
              },
              {
                "type": "anyComponentStyle",
                "maximumWarning": "6kb",
                "maximumError": "25kb"
              }
            ]
          },
          "configurations": {
            "local": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            },
            "dev": {
              "statsJson": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true,
              "fileReplacements": [
                {
                  "replace": "apps/helloworld-azure/src/environments/environment.ts",
                  "with": "apps/helloworld-azure/src/environments/environment.dev.ts"
                }
              ]
            },
            "qa": {
              "statsJson": true,
              "fileReplacements": [
                {
                  "replace": "apps/helloworld-azure/src/environments/environment.ts",
                  "with": "apps/helloworld-azure/src/environments/environment.dev.ts"
                }
              ]
            },
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/helloworld-azure/src/environments/environment.ts",
                  "with": "apps/helloworld-azure/src/environments/environment.prod.ts"
                }
              ]
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "helloworld-azure:build"
          },
          "configurations": {
            "local": {
              "browserTarget": "helloworld-azure:build:local"
            },
            "dev": {
              "browserTarget": "helloworld-azure:build:dev"
            },
            "qa": {
              "browserTarget": "helloworld-azure:build:qa"
            },
            "production": {
              "browserTarget": "helloworld-azure:build:production"
            }
          },
          "defaultConfiguration": "local"
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/helloworld-azure/src/**/*.ts",
              "apps/helloworld-azure/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/apps/helloworld-azure/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/helloworld-azure/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/helloworld-azure"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "apps/helloworld-azure"
          }
        }
      }
    },
    "helloworld-azure-e2e": {
      "root": "apps/helloworld-azure-e2e",
      "sourceRoot": "apps/helloworld-azure-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/helloworld-azure-e2e/cypress.json",
            "tsConfig": "apps/helloworld-azure-e2e/tsconfig.e2e.json",
            "devServerTarget": "helloworld-azure:serve"
          },
          "configurations": {
            "local": {
              "devServerTarget": "helloworld-azure:serve:local"
            },
            "production": {
              "devServerTarget": "helloworld-azure:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/helloworld-azure-e2e/**/*.{js,ts}"]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/apps/helloworld-azure-e2e/checkstyle.xml"
            }
          }
        }
      }
    },
    "ia": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/ia",
      "sourceRoot": "apps/ia/src",
      "prefix": "ia",
      "architect": {
        "build": {
          "builder": "@angular-builders/custom-webpack:browser",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/ia",
            "index": "apps/ia/src/index.html",
            "main": "apps/ia/src/main.ts",
            "polyfills": "apps/ia/src/polyfills.ts",
            "tsConfig": "apps/ia/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": ["apps/ia/src/favicon.ico", "apps/ia/src/assets"],
            "styles": [
              "apps/ia/src/styles.scss",
              "node_modules/schaeffler-icons/style.css"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": ["libs/shared/ui/styles/src"]
            },
            "budgets": [
              {
                "type": "initial",
                "maximumWarning": "2mb",
                "maximumError": "5mb"
              },
              {
                "type": "anyComponentStyle",
                "maximumWarning": "6kb",
                "maximumError": "25kb"
              }
            ],
            "customWebpackConfig": {
              "path": "apps/ia/webpack.config.js"
            }
          },
          "configurations": {
            "local": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            },
            "dev": {
              "statsJson": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true,
              "fileReplacements": [
                {
                  "replace": "apps/ia/src/environments/environment.ts",
                  "with": "apps/ia/src/environments/environment.dev.ts"
                }
              ]
            },
            "qa": {
              "outputHashing": "bundles",
              "statsJson": true,
              "fileReplacements": [
                {
                  "replace": "apps/ia/src/environments/environment.ts",
                  "with": "apps/ia/src/environments/environment.qa.ts"
                }
              ]
            },
            "production": {
              "outputHashing": "bundles",
              "fileReplacements": [
                {
                  "replace": "apps/ia/src/environments/environment.ts",
                  "with": "apps/ia/src/environments/environment.prod.ts"
                }
              ]
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-builders/custom-webpack:dev-server",
          "options": {
            "browserTarget": "ia:build"
          },
          "configurations": {
            "local": {
              "browserTarget": "ia:build:local"
            },
            "dev": {
              "browserTarget": "ia:build:dev"
            },
            "qa": {
              "browserTarget": "ia:build:qa"
            },
            "production": {
              "browserTarget": "ia:build:production"
            }
          },
          "defaultConfiguration": "local"
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/ia/src/**/*.ts", "apps/ia/src/**/*.html"]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/apps/ia/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/ia/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/ia"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "apps/ia"
          }
        }
      }
    },
    "ia-e2e": {
      "root": "apps/ia-e2e",
      "sourceRoot": "apps/ia-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/ia-e2e/cypress.json",
            "tsConfig": "apps/ia-e2e/tsconfig.e2e.json",
            "devServerTarget": "ia:serve"
          },
          "configurations": {
            "local": {
              "devServerTarget": "ia:serve:local"
            },
            "production": {
              "devServerTarget": "ia:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/ia-e2e/**/*.{js,ts}"]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/apps/ia-e2e/checkstyle.xml"
            }
          }
        }
      }
    },
    "mac": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/mac",
      "sourceRoot": "apps/mac/src",
      "prefix": "mac",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/mac",
            "index": "apps/mac/src/index.html",
            "main": "apps/mac/src/main.ts",
            "polyfills": "apps/mac/src/polyfills.ts",
            "tsConfig": "apps/mac/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": ["apps/mac/src/favicon.ico", "apps/mac/src/assets"],
            "styles": [
              "apps/mac/src/styles.scss",
              "node_modules/schaeffler-icons/style.css",
              "node_modules/@fontsource/roboto/300.css",
              "node_modules/@fontsource/roboto/400.css",
              "node_modules/@fontsource/roboto/500.css"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": ["libs/shared/ui/styles/src"]
            },
            "budgets": [
              {
                "type": "initial",
                "maximumWarning": "2mb",
                "maximumError": "5mb"
              },
              {
                "type": "anyComponentStyle",
                "maximumWarning": "6kb",
                "maximumError": "25kb"
              }
            ]
          },
          "configurations": {
            "local": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            },
            "dev": {
              "statsJson": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true,
              "fileReplacements": [
                {
                  "replace": "apps/mac/src/environments/environment.ts",
                  "with": "apps/mac/src/environments/environment.dev.ts"
                }
              ]
            },
            "qa": {
              "outputHashing": "bundles",
              "statsJson": true,
              "fileReplacements": [
                {
                  "replace": "apps/mac/src/environments/environment.ts",
                  "with": "apps/mac/src/environments/environment.qa.ts"
                }
              ]
            },
            "production": {
              "outputHashing": "bundles",
              "fileReplacements": [
                {
                  "replace": "apps/mac/src/environments/environment.ts",
                  "with": "apps/mac/src/environments/environment.prod.ts"
                }
              ]
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "mac:build"
          },
          "configurations": {
            "local": {
              "browserTarget": "mac:build:local"
            },
            "dev": {
              "browserTarget": "mac:build:dev"
            },
            "qa": {
              "browserTarget": "mac:build:qa"
            },
            "production": {
              "browserTarget": "mac:build:production"
            }
          },
          "defaultConfiguration": "local"
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/mac/src/**/*.ts",
              "apps/mac/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/apps/mac/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/mac/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/mac"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "apps/mac"
          }
        }
      }
    },
    "mac-e2e": {
      "root": "apps/mac-e2e",
      "sourceRoot": "apps/mac-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/mac-e2e/cypress.json",
            "tsConfig": "apps/mac-e2e/tsconfig.e2e.json",
            "devServerTarget": "mac:serve"
          },
          "configurations": {
            "local": {
              "devServerTarget": "mac:serve:local"
            },
            "production": {
              "devServerTarget": "mac:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/mac-e2e/**/*.{js,ts}"]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/apps/mac-e2e/checkstyle.xml"
            }
          }
        }
      }
    },
    "mm": {
      "projectType": "application",
      "root": "apps/mm",
      "sourceRoot": "apps/mm/src",
      "prefix": "mm",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/mm",
            "index": "apps/mm/src/index.html",
            "main": "apps/mm/src/main.ts",
            "polyfills": "apps/mm/src/polyfills.ts",
            "tsConfig": "apps/mm/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              "apps/mm/src/favicon.ico",
              "apps/mm/src/assets",
              "apps/mm/src/browserconfig.xml",
              "apps/mm/src/robots.txt"
            ],
            "styles": [
              "apps/mm/src/styles.scss",
              "node_modules/schaeffler-icons/style.css",
              "node_modules/@fontsource/roboto/300.css",
              "node_modules/@fontsource/roboto/400.css",
              "node_modules/@fontsource/roboto/500.css"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": []
            },
            "budgets": [
              {
                "type": "initial",
                "maximumWarning": "2mb",
                "maximumError": "5mb"
              },
              {
                "type": "anyComponentStyle",
                "maximumWarning": "6kb",
                "maximumError": "25kb"
              }
            ]
          },
          "configurations": {
            "local": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true,
              "assets": [
                "apps/mm/src/favicon.ico",
                "apps/mm/src/assets",
                "apps/mm/src/browserconfig.xml",
                {
                  "input": "apps/mm/robots/dev",
                  "output": "/",
                  "glob": "robots.txt"
                }
              ]
            },
            "dev": {
              "statsJson": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true,
              "fileReplacements": [
                {
                  "replace": "apps/mm/src/environments/environment.ts",
                  "with": "apps/mm/src/environments/environment.dev.ts"
                }
              ],
              "assets": [
                "apps/mm/src/favicon.ico",
                "apps/mm/src/assets",
                "apps/mm/src/browserconfig.xml",
                {
                  "input": "apps/mm/robots/dev",
                  "output": "/",
                  "glob": "robots.txt"
                }
              ]
            },
            "qa": {
              "outputHashing": "bundles",
              "statsJson": true,
              "fileReplacements": [
                {
                  "replace": "apps/mm/src/environments/environment.ts",
                  "with": "apps/mm/src/environments/environment.qa.ts"
                }
              ],
              "assets": [
                "apps/mm/src/favicon.ico",
                "apps/mm/src/assets",
                "apps/mm/src/browserconfig.xml",
                {
                  "input": "apps/mm/robots/dev",
                  "output": "/",
                  "glob": "robots.txt"
                }
              ]
            },
            "production": {
              "outputHashing": "bundles",
              "fileReplacements": [
                {
                  "replace": "apps/mm/src/environments/environment.ts",
                  "with": "apps/mm/src/environments/environment.prod.ts"
                }
              ],
              "assets": [
                "apps/mm/src/favicon.ico",
                "apps/mm/src/assets",
                "apps/mm/src/browserconfig.xml",
                {
                  "input": "apps/mm/robots/prod",
                  "output": "/",
                  "glob": "robots.txt"
                }
              ]
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "mm:build"
          },
          "configurations": {
            "local": {
              "browserTarget": "mm:build:local"
            },
            "dev": {
              "browserTarget": "mm:build:dev"
            },
            "qa": {
              "browserTarget": "mm:build:qa"
            },
            "production": {
              "browserTarget": "mm:build:production"
            }
          },
          "defaultConfiguration": "local"
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/mm/src/**/*.ts", "apps/mm/src/**/*.html"]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/apps/mm/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/mm"],
          "options": {
            "jestConfig": "apps/mm/jest.config.js",
            "passWithNoTests": true
          }
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "apps/mm"
          }
        }
      }
    },
    "mm-e2e": {
      "root": "apps/mm-e2e",
      "sourceRoot": "apps/mm-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/mm-e2e/cypress.json",
            "tsConfig": "apps/mm-e2e/tsconfig.e2e.json",
            "devServerTarget": "mm:serve"
          },
          "configurations": {
            "local": {
              "devServerTarget": "mm:serve:local"
            },
            "production": {
              "devServerTarget": "mm:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/mm-e2e/**/*.{js,ts}"]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/apps/mm-e2e/checkstyle.xml"
            }
          }
        }
      }
    },
    "sedo": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/sedo",
      "sourceRoot": "apps/sedo/src",
      "prefix": "sedo",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/sedo",
            "index": "apps/sedo/src/index.html",
            "main": "apps/sedo/src/main.ts",
            "polyfills": "apps/sedo/src/polyfills.ts",
            "tsConfig": "apps/sedo/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": ["apps/sedo/src/favicon.ico", "apps/sedo/src/assets"],
            "styles": [
              "apps/sedo/src/styles.scss",
              "node_modules/schaeffler-icons/style.css",
              "node_modules/@fontsource/roboto/300.css",
              "node_modules/@fontsource/roboto/400.css",
              "node_modules/@fontsource/roboto/500.css"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": ["libs/shared/ui/styles/src"]
            },
            "budgets": [
              {
                "type": "initial",
                "maximumWarning": "2mb",
                "maximumError": "5mb"
              },
              {
                "type": "anyComponentStyle",
                "maximumWarning": "6kb",
                "maximumError": "25kb"
              }
            ]
          },
          "configurations": {
            "local": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            },
            "dev": {
              "statsJson": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true,
              "fileReplacements": [
                {
                  "replace": "apps/sedo/src/environments/environment.ts",
                  "with": "apps/sedo/src/environments/environment.dev.ts"
                }
              ]
            },
            "qa": {
              "outputHashing": "bundles",
              "statsJson": true,
              "fileReplacements": [
                {
                  "replace": "apps/sedo/src/environments/environment.ts",
                  "with": "apps/sedo/src/environments/environment.qa.ts"
                }
              ]
            },
            "production": {
              "outputHashing": "bundles",
              "fileReplacements": [
                {
                  "replace": "apps/sedo/src/environments/environment.ts",
                  "with": "apps/sedo/src/environments/environment.prod.ts"
                }
              ]
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "sedo:build"
          },
          "configurations": {
            "local": {
              "browserTarget": "sedo:build:local"
            },
            "dev": {
              "browserTarget": "sedo:build:dev"
            },
            "qa": {
              "browserTarget": "sedo:build:qa"
            },
            "production": {
              "browserTarget": "sedo:build:production"
            }
          },
          "defaultConfiguration": "local"
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/sedo/src/**/*.ts",
              "apps/sedo/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/apps/sedo/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/sedo/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/sedo"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "apps/sedo"
          }
        }
      }
    },
    "sedo-e2e": {
      "root": "apps/sedo-e2e",
      "sourceRoot": "apps/sedo-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/sedo-e2e/cypress.json",
            "tsConfig": "apps/sedo-e2e/tsconfig.e2e.json",
            "devServerTarget": "sedo:serve"
          },
          "configurations": {
            "local": {
              "devServerTarget": "sedo:serve:local"
            },
            "production": {
              "devServerTarget": "sedo:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/sedo-e2e/**/*.{js,ts}"]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/apps/sedo-e2e/checkstyle.xml"
            }
          }
        }
      }
    },
    "shared-assets": {
      "projectType": "library",
      "root": "libs/shared/assets",
      "sourceRoot": "libs/shared/assets/src",
      "prefix": "schaeffler",
      "architect": {
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/assets"
          }
        }
      },
      "schematics": {}
    },
    "shared-cypress-utils": {
      "projectType": "library",
      "root": "libs/shared/cypress-utils",
      "sourceRoot": "libs/shared/cypress-utils/src",
      "prefix": "schaeffler",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/cypress-utils/src/**/*.ts",
              "libs/shared/cypress-utils/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/cypress-utils/checkstyle.xml"
            }
          }
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/cypress-utils"
          }
        }
      },
      "schematics": {}
    },
    "shared-ui-app-shell": {
      "projectType": "library",
      "root": "libs/shared/ui/app-shell",
      "sourceRoot": "libs/shared/ui/app-shell/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/ui/app-shell/tsconfig.lib.json",
            "project": "libs/shared/ui/app-shell/ng-package.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/ui/app-shell/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/ui/app-shell/src/**/*.ts",
              "libs/shared/ui/app-shell/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/ui/app-shell/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/ui/app-shell/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/shared/ui/sidebar"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/ui/app-shell"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/ui/app-shell --tag latest"
              }
            ]
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "shared-ui-banner": {
      "projectType": "library",
      "root": "libs/shared/ui/banner",
      "sourceRoot": "libs/shared/ui/banner/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/ui/banner/tsconfig.lib.json",
            "project": "libs/shared/ui/banner/ng-package.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/ui/banner/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/ui/banner/src/**/*.ts",
              "libs/shared/ui/banner/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/ui/banner/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/ui/banner/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/shared/ui/banner"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/ui/banner"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/ui/banner --tag latest"
              }
            ]
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "shared-ui-breadcrumbs": {
      "projectType": "library",
      "root": "libs/shared/ui/breadcrumbs",
      "sourceRoot": "libs/shared/ui/breadcrumbs/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "outputs": ["dist/libs/shared/ui/breadcrumbs"],
          "options": {
            "project": "libs/shared/ui/breadcrumbs/ng-package.json"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/ui/breadcrumbs/tsconfig.lib.prod.json"
            },
            "development": {
              "tsConfig": "libs/shared/ui/breadcrumbs/tsconfig.lib.json"
            }
          },
          "defaultConfiguration": "production"
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/shared/ui/breadcrumbs"],
          "options": {
            "jestConfig": "libs/shared/ui/breadcrumbs/jest.config.js",
            "passWithNoTests": true
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/ui/breadcrumbs/src/**/*.ts",
              "libs/shared/ui/breadcrumbs/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/ui/breadcrumbs/checkstyle.xml"
            }
          }
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/ui/breadcrumbs"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/ui/breadcrumbs --tag latest"
              }
            ]
          }
        }
      }
    },
    "shared-ui-dropdown-input": {
      "projectType": "library",
      "root": "libs/shared/ui/dropdown-input",
      "sourceRoot": "libs/shared/ui/dropdown-input/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/ui/dropdown-input/tsconfig.lib.json",
            "project": "libs/shared/ui/dropdown-input/ng-package.json"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/ui/dropdown-input/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/ui/dropdown-input/src/**/*.ts",
              "libs/shared/ui/dropdown-input/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/ui/dropdown-input/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/shared/ui/dropdown-input"],
          "options": {
            "jestConfig": "libs/shared/ui/dropdown-input/jest.config.js",
            "passWithNoTests": true
          }
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/ui/dropdown-input"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/ui/dropdown-input --tag latest"
              }
            ]
          }
        }
      }
    },
    "shared-ui-empty-states": {
      "projectType": "library",
      "root": "libs/shared/ui/empty-states",
      "sourceRoot": "libs/shared/ui/empty-states/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/ui/empty-states/tsconfig.lib.json",
            "project": "libs/shared/ui/empty-states/ng-package.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/ui/empty-states/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/ui/empty-states/src/**/*.ts",
              "libs/shared/ui/empty-states/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/ui/empty-states/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/ui/empty-states/jest.config.js",
            "passWithNoTests": true,
            "setupFile": "libs/shared/ui/empty-states/src/test-setup.ts"
          },
          "outputs": ["coverage/libs/shared/ui/empty-states"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/ui/empty-states"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/ui/empty-states --tag latest"
              }
            ]
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "shared-ui-file-drop": {
      "projectType": "library",
      "root": "libs/shared/ui/file-drop",
      "sourceRoot": "libs/shared/ui/file-drop/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/ui/file-drop/tsconfig.lib.json",
            "project": "libs/shared/ui/file-drop/ng-package.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/ui/file-drop/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/ui/file-drop/src/**/*.ts",
              "libs/shared/ui/file-drop/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/ui/file-drop/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/ui/file-drop/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/shared/ui/file-drop"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/ui/file-drop"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/ui/file-drop --tag latest"
              }
            ]
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "shared-ui-footer": {
      "projectType": "library",
      "root": "libs/shared/ui/footer",
      "sourceRoot": "libs/shared/ui/footer/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/ui/footer/tsconfig.lib.json",
            "project": "libs/shared/ui/footer/ng-package.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/ui/footer/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/ui/footer/src/**/*.ts",
              "libs/shared/ui/footer/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/ui/footer/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/ui/footer/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/shared/ui/footer"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/ui/footer"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/ui/footer --tag latest"
              }
            ]
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "shared-ui-header": {
      "projectType": "library",
      "root": "libs/shared/ui/header",
      "sourceRoot": "libs/shared/ui/header/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/ui/header/tsconfig.lib.json",
            "project": "libs/shared/ui/header/ng-package.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/ui/header/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/ui/header/src/**/*.ts",
              "libs/shared/ui/header/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/ui/header/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/ui/header/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/shared/ui/header"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/ui/header"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/ui/header --tag latest"
              }
            ]
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "shared-ui-horizontal-separator": {
      "projectType": "library",
      "root": "libs/shared/ui/horizontal-separator",
      "sourceRoot": "libs/shared/ui/horizontal-separator/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:ng-packagr-lite",
          "options": {
            "tsConfig": "libs/shared/ui/horizontal-separator/tsconfig.lib.json",
            "project": "libs/shared/ui/horizontal-separator/ng-package.json"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/ui/horizontal-separator/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/ui/horizontal-separator/src/**/*.ts",
              "libs/shared/ui/horizontal-separator/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/ui/horizontal-separator/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/shared/ui/horizontal-separator"],
          "options": {
            "jestConfig": "libs/shared/ui/horizontal-separator/jest.config.js",
            "passWithNoTests": true
          }
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/ui/horizontal-separator"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/ui/horizontal-separator --tag latest"
              }
            ]
          }
        }
      }
    },
    "shared-ui-icons": {
      "projectType": "library",
      "root": "libs/shared/ui/icons",
      "sourceRoot": "libs/shared/ui/icons/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/ui/icons/tsconfig.lib.json",
            "project": "libs/shared/ui/icons/ng-package.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/ui/icons/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/ui/icons/src/**/*.ts",
              "libs/shared/ui/icons/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/ui/icons/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/ui/icons/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/shared/ui/icons"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/ui/icons"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/ui/icons --tag latest"
              }
            ]
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "shared-ui-legal-pages": {
      "projectType": "library",
      "root": "libs/shared/ui/legal-pages",
      "sourceRoot": "libs/shared/ui/legal-pages/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "outputs": ["dist/libs/shared/ui/legal-pages"],
          "options": {
            "project": "libs/shared/ui/legal-pages/ng-package.json"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/ui/legal-pages/tsconfig.lib.prod.json"
            },
            "development": {
              "tsConfig": "libs/shared/ui/legal-pages/tsconfig.lib.json"
            }
          },
          "defaultConfiguration": "production"
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/shared/ui/legal-pages"],
          "options": {
            "jestConfig": "libs/shared/ui/legal-pages/jest.config.js",
            "passWithNoTests": true
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/ui/legal-pages/src/**/*.ts",
              "libs/shared/ui/legal-pages/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/ui/horizontal-separator/checkstyle.xml",
              "force": true
            }
          }
        }
      }
    },
    "shared-ui-loading-spinner": {
      "projectType": "library",
      "root": "libs/shared/ui/loading-spinner",
      "sourceRoot": "libs/shared/ui/loading-spinner/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/ui/loading-spinner/tsconfig.lib.json",
            "project": "libs/shared/ui/loading-spinner/ng-package.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/ui/loading-spinner/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/ui/loading-spinner/src/**/*.ts",
              "libs/shared/ui/loading-spinner/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/ui/loading-spinner/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/shared/ui/loading-spinner"],
          "options": {
            "jestConfig": "libs/shared/ui/loading-spinner/jest.config.js",
            "passWithNoTests": true
          }
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/ui/loading-spinner"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/ui/loading-spinner --tag latest"
              }
            ]
          }
        }
      }
    },
    "shared-ui-picture-card": {
      "projectType": "library",
      "root": "libs/shared/ui/picture-card",
      "sourceRoot": "libs/shared/ui/picture-card/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/ui/picture-card/tsconfig.lib.json",
            "project": "libs/shared/ui/picture-card/ng-package.json"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/ui/picture-card/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/ui/picture-card/src/**/*.ts",
              "libs/shared/ui/picture-card/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/ui/picture-card/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/shared/ui/picture-card"],
          "options": {
            "jestConfig": "libs/shared/ui/picture-card/jest.config.js",
            "passWithNoTests": true
          }
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/ui/picture-card"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/ui/picture-card --tag latest"
              }
            ]
          }
        }
      }
    },
    "shared-ui-report": {
      "projectType": "library",
      "root": "libs/shared/ui/report",
      "sourceRoot": "libs/shared/ui/report/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/ui/report/tsconfig.lib.json",
            "project": "libs/shared/ui/report/ng-package.json"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/ui/report/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/ui/report/src/**/*.ts",
              "libs/shared/ui/report/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/ui/report/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/shared/ui/report"],
          "options": {
            "jestConfig": "libs/shared/ui/report/jest.config.js",
            "passWithNoTests": true
          }
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/ui/report"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/ui/report --tag latest"
              }
            ]
          }
        }
      }
    },
    "shared-ui-scroll-to-top": {
      "projectType": "library",
      "root": "libs/shared/ui/scroll-to-top",
      "sourceRoot": "libs/shared/ui/scroll-to-top/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/ui/scroll-to-top/tsconfig.lib.json",
            "project": "libs/shared/ui/scroll-to-top/ng-package.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/ui/scroll-to-top/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/ui/scroll-to-top/src/**/*.ts",
              "libs/shared/ui/scroll-to-top/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/ui/scroll-to-top/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/ui/scroll-to-top/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/shared/ui/scroll-to-top"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/ui/scroll-to-top"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/ui/scroll-to-top --tag latest"
              }
            ]
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "shared-ui-search-autocomplete": {
      "projectType": "library",
      "root": "libs/shared/ui/search-autocomplete",
      "sourceRoot": "libs/shared/ui/search-autocomplete/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/ui/search-autocomplete/tsconfig.lib.json",
            "project": "libs/shared/ui/search-autocomplete/ng-package.json"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/ui/search-autocomplete/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/ui/search-autocomplete/src/**/*.ts",
              "libs/shared/ui/search-autocomplete/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/ui/search-autocomplete/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/shared/ui/search-autocomplete"],
          "options": {
            "jestConfig": "libs/shared/ui/search-autocomplete/jest.config.js",
            "passWithNoTests": true
          }
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/ui/search-autocomplete"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/ui/search-autocomplete --tag latest"
              }
            ]
          }
        }
      }
    },
    "shared-ui-settings-sidebar": {
      "projectType": "library",
      "root": "libs/shared/ui/settings-sidebar",
      "sourceRoot": "libs/shared/ui/settings-sidebar/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/ui/settings-sidebar/tsconfig.lib.json",
            "project": "libs/shared/ui/settings-sidebar/ng-package.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/ui/settings-sidebar/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/ui/settings-sidebar/src/**/*.ts",
              "libs/shared/ui/settings-sidebar/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/ui/settings-sidebar/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/ui/settings-sidebar/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/shared/ui/settings-sidebar"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/ui/settings-sidebar"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/ui/settings-sidebar --tag latest"
              }
            ]
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "shared-ui-sidebar": {
      "projectType": "library",
      "root": "libs/shared/ui/sidebar",
      "sourceRoot": "libs/shared/ui/sidebar/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/ui/sidebar/tsconfig.lib.json",
            "project": "libs/shared/ui/sidebar/ng-package.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/ui/sidebar/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/ui/sidebar/src/**/*.ts",
              "libs/shared/ui/sidebar/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/ui/sidebar/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/ui/sidebar/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/shared/ui/sidebar"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/ui/sidebar"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/ui/sidebar --tag latest"
              }
            ]
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "shared-ui-snackbar": {
      "projectType": "library",
      "root": "libs/shared/ui/snackbar",
      "sourceRoot": "libs/shared/ui/snackbar/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/ui/snackbar/tsconfig.lib.json",
            "project": "libs/shared/ui/snackbar/ng-package.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/ui/snackbar/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/ui/snackbar/src/**/*.ts",
              "libs/shared/ui/snackbar/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/ui/snackbar/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/ui/snackbar/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/shared/ui/snackbar"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/ui/snackbar"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/ui/snackbar --tag latest"
              }
            ]
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "shared-ui-speed-dial-fab": {
      "projectType": "library",
      "root": "libs/shared/ui/speed-dial-fab",
      "sourceRoot": "libs/shared/ui/speed-dial-fab/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/ui/speed-dial-fab/tsconfig.lib.json",
            "project": "libs/shared/ui/speed-dial-fab/ng-package.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/ui/speed-dial-fab/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/ui/speed-dial-fab/src/**/*.ts",
              "libs/shared/ui/speed-dial-fab/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/ui/speed-dial-fab/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/ui/speed-dial-fab/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/shared/ui/speed-dial-fab"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/ui/speed-dial-fab"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/ui/speed-dial-fab --tag latest"
              }
            ]
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "shared-ui-stepper": {
      "projectType": "library",
      "root": "libs/shared/ui/stepper",
      "sourceRoot": "libs/shared/ui/stepper/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/ui/stepper/tsconfig.lib.json",
            "project": "libs/shared/ui/stepper/ng-package.json"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/ui/stepper/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/ui/stepper/src/**/*.ts",
              "libs/shared/ui/stepper/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/ui/stepper/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/shared/ui/stepper"],
          "options": {
            "jestConfig": "libs/shared/ui/stepper/jest.config.js",
            "passWithNoTests": true
          }
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/ui/stepper"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/ui/stepper --tag latest"
              }
            ]
          }
        }
      }
    },
    "shared-ui-storybook": {
      "root": "libs/shared/ui/storybook",
      "sourceRoot": "libs/shared/ui/storybook/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "storybook": {
          "builder": "@nrwl/storybook:storybook",
          "options": {
            "uiFramework": "@storybook/angular",
            "port": 4400,
            "staticDir": ["libs/shared/ui/storybook/src/assets"],
            "config": {
              "configFolder": "libs/shared/ui/storybook/.storybook"
            },
            "projectBuildConfig": "mm"
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        },
        "build-storybook": {
          "builder": "@nrwl/storybook:build",
          "options": {
            "uiFramework": "@storybook/angular",
            "staticDir": ["libs/shared/ui/storybook/src/assets"],
            "outputPath": "dist/storybook/shared-ui-storybook",
            "config": {
              "configFolder": "libs/shared/ui/storybook/.storybook"
            }
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/ui/storybook"
          }
        }
      }
    },
    "shared-ui-storybook-e2e": {
      "root": "apps/shared-ui-storybook-e2e",
      "sourceRoot": "apps/shared-ui-storybook-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/shared-ui-storybook-e2e/cypress.json",
            "tsConfig": "apps/shared-ui-storybook-e2e/tsconfig.e2e.json",
            "devServerTarget": "shared-ui-storybook:storybook"
          },
          "configurations": {
            "ci": {
              "devServerTarget": "shared-ui-storybook:storybook:ci"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/shared-ui-storybook-e2e/src/**/*.ts",
              "apps/shared-ui-storybook-e2e/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/apps/shared-ui-storybook-e2e/checkstyle.xml"
            }
          }
        }
      }
    },
    "shared-ui-styles": {
      "projectType": "library",
      "root": "libs/shared/ui/styles",
      "sourceRoot": "libs/shared/ui/styles/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/ui/styles/tsconfig.lib.json",
            "project": "libs/shared/ui/styles/ng-package.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/ui/styles/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/shared/ui/styles/src/**/*.ts"]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/ui/styles/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/ui/styles/jest.config.js",
            "passWithNoTests": true,
            "setupFile": "libs/shared/ui/styles/src/test-setup.ts"
          },
          "outputs": ["coverage/libs/shared/ui/styles"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/ui/styles"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/ui/styles --tag latest"
              }
            ]
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "shared-ui-subheader": {
      "projectType": "library",
      "root": "libs/shared/ui/subheader",
      "sourceRoot": "libs/shared/ui/subheader/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:ng-packagr-lite",
          "options": {
            "tsConfig": "libs/shared/ui/subheader/tsconfig.lib.json",
            "project": "libs/shared/ui/subheader/ng-package.json"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/ui/subheader/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/ui/subheader/src/**/*.ts",
              "libs/shared/ui/subheader/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/ui/subheader/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/shared/ui/subheader"],
          "options": {
            "jestConfig": "libs/shared/ui/subheader/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "shared-utils-application-insights": {
      "projectType": "library",
      "root": "libs/shared/utils/application-insights",
      "sourceRoot": "libs/shared/utils/application-insights/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/utils/application-insights/tsconfig.lib.json",
            "project": "libs/shared/utils/application-insights/ng-package.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/utils/application-insights/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/utils/application-insights/src/**/*.ts",
              "libs/shared/utils/application-insights/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/utils/application-insights/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/utils/application-insights/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/shared/utils/application-insights"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/utils/application-insights"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/utils/application-insights --tag latest"
              }
            ]
          }
        }
      },
      "schematics": {}
    },
    "shared-utils-azure-auth": {
      "projectType": "library",
      "root": "libs/shared/utils/azure-auth",
      "sourceRoot": "libs/shared/utils/azure-auth/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/utils/azure-auth/tsconfig.lib.json",
            "project": "libs/shared/utils/azure-auth/ng-package.json"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/utils/azure-auth/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/utils/azure-auth/src/**/*.ts",
              "libs/shared/utils/azure-auth/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/utils/azure-auth/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/utils/azure-auth/jest.config.js",
            "passWithNoTests": true,
            "setupFile": "libs/shared/utils/azure-auth/src/test-setup.ts"
          },
          "outputs": ["coverage/libs/shared/utils/azure-auth"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/utils/azure-auth"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/utils/azure-auth --tag latest"
              }
            ]
          }
        }
      },
      "schematics": {}
    },
    "shared-utils-http": {
      "projectType": "library",
      "root": "libs/shared/utils/http",
      "sourceRoot": "libs/shared/utils/http/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/utils/http/tsconfig.lib.json",
            "project": "libs/shared/utils/http/ng-package.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/utils/http/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/utils/http/src/**/*.ts",
              "libs/shared/utils/http/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/utils/http/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/utils/http/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/shared/utils/http"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/utils/http"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/utils/http --tag latest"
              }
            ]
          }
        }
      },
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss"
        }
      }
    },
    "shared-utils-responsive": {
      "projectType": "library",
      "root": "libs/shared/utils/responsive",
      "sourceRoot": "libs/shared/utils/responsive/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/utils/responsive/tsconfig.lib.json",
            "project": "libs/shared/utils/responsive/ng-package.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/utils/responsive/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/utils/responsive/src/**/*.ts",
              "libs/shared/utils/responsive/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/utils/responsive/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/utils/responsive/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/shared/utils/responsive"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/utils/responsive"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/utils/responsive --tag latest"
              }
            ]
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "shared-utils-transloco": {
      "projectType": "library",
      "root": "libs/shared/utils/transloco",
      "sourceRoot": "libs/shared/utils/transloco/src",
      "prefix": "schaeffler",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/shared/utils/transloco/tsconfig.lib.json",
            "project": "libs/shared/utils/transloco/ng-package.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/shared/utils/transloco/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared/utils/transloco/src/**/*.ts",
              "libs/shared/utils/transloco/src/**/*.html"
            ]
          },
          "configurations": {
            "ci": {
              "format": "checkstyle",
              "outputFile": "checkstyle/libs/shared/utils/transloco/checkstyle.xml"
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/utils/transloco/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/shared/utils/transloco"]
        },
        "standard-version": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "npx standard-version --no-verify {args.params}",
            "cwd": "libs/shared/utils/transloco"
          }
        },
        "publish": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npm publish dist/libs/shared/utils/transloco --tag latest"
              }
            ]
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    }
  }
}
