
//The global script scope
def ctx = context(scope: scriptScope())
contributor(ctx) {
method(name: 'parallel', type: 'Object', params: ['closures':'java.util.Map'], doc: 'Execute in parallel')
method(name: 'parallel', type: 'Object', namedParams: [parameter(name: 'closures', type: 'java.util.Map'), parameter(name: 'failFast', type: 'boolean'), ], doc: 'Execute in parallel')
method(name: 'acceptGitLabMR', type: 'Object', params: [:], doc: 'Accept GitLab Merge Request')
method(name: 'acceptGitLabMR', type: 'Object', namedParams: [parameter(name: 'mergeCommitMessage', type: 'java.lang.String'), parameter(name: 'useMRDescription', type: 'boolean'), parameter(name: 'removeSourceBranch', type: 'boolean'), ], doc: 'Accept GitLab Merge Request')
method(name: 'addGitLabMRComment', type: 'Object', params: [:], doc: 'Add comment on GitLab Merge Request')
method(name: 'addGitLabMRComment', type: 'Object', namedParams: [parameter(name: 'comment', type: 'java.lang.String'), ], doc: 'Add comment on GitLab Merge Request')
method(name: 'ansiColor', type: 'Object', params: [colorMapName:java.lang.String, body:'Closure'], doc: 'Color ANSI Console Output')
method(name: 'build', type: 'Object', params: [job:'java.lang.String'], doc: 'Build a job')
method(name: 'build', type: 'Object', namedParams: [parameter(name: 'job', type: 'java.lang.String'), parameter(name: 'parameters', type: 'java.util.List'), parameter(name: 'propagate', type: 'boolean'), parameter(name: 'quietPeriod', type: 'java.lang.Integer'), parameter(name: 'wait', type: 'boolean'), ], doc: 'Build a job')
method(name: 'catchError', type: 'Object', params: [body:'Closure'], doc: 'Catch error and set build result to failure')
method(name: 'catchError', type: 'Object', params: [body:Closure], namedParams: [parameter(name: 'buildResult', type: 'java.lang.String'), parameter(name: 'catchInterruptions', type: 'boolean'), parameter(name: 'message', type: 'java.lang.String'), parameter(name: 'stageResult', type: 'java.lang.String'), ], doc: 'Catch error and set build result to failure')
method(name: 'compareVersions', type: 'Object', namedParams: [parameter(name: 'v1', type: 'java.lang.String'), parameter(name: 'v2', type: 'java.lang.String'), parameter(name: 'failIfEmpty', type: 'boolean'), ], doc: 'Compare two version number strings')
method(name: 'dockerNode', type: 'Object', params: [image:java.lang.String, body:'Closure'], doc: 'Docker Node (\u26A0\uFE0F Experimental)')
method(name: 'dockerNode', type: 'Object', params: [body:Closure], namedParams: [parameter(name: 'image', type: 'java.lang.String'), parameter(name: 'connector', type: 'Map'), parameter(name: 'credentialsId', type: 'java.lang.String'), parameter(name: 'dockerHost', type: 'java.lang.String'), parameter(name: 'remoteFs', type: 'java.lang.String'), ], doc: 'Docker Node (\u26A0\uFE0F Experimental)')
method(name: 'echo', type: 'Object', params: [message:'java.lang.String'], doc: 'Print Message')
method(name: 'emailext', type: 'Object', namedParams: [parameter(name: 'subject', type: 'java.lang.String'), parameter(name: 'body', type: 'java.lang.String'), parameter(name: 'attachLog', type: 'boolean'), parameter(name: 'attachmentsPattern', type: 'java.lang.String'), parameter(name: 'compressLog', type: 'boolean'), parameter(name: 'from', type: 'java.lang.String'), parameter(name: 'mimeType', type: 'java.lang.String'), parameter(name: 'postsendScript', type: 'java.lang.String'), parameter(name: 'presendScript', type: 'java.lang.String'), parameter(name: 'recipientProviders', type: 'java.util.List'), parameter(name: 'replyTo', type: 'java.lang.String'), parameter(name: 'saveOutput', type: 'boolean'), parameter(name: 'to', type: 'java.lang.String'), ], doc: 'Extended Email')
method(name: 'emailextrecipients', type: 'Object', params: [recipientProviders:'java.util.List'], doc: 'Extended Email Recipients')
method(name: 'error', type: 'Object', params: [message:'java.lang.String'], doc: 'Error signal')
method(name: 'findBuildScans', type: 'Object', params: [:], doc: 'Find published build scans')
method(name: 'gitlabBuilds', type: 'Object', params: [body:'Closure'], doc: 'Notify gitlab about pending builds')
method(name: 'gitlabBuilds', type: 'Object', params: [body:Closure], namedParams: [parameter(name: 'builds', type: 'java.util.List'), ], doc: 'Notify gitlab about pending builds')
method(name: 'gitlabCommitStatus', type: 'Object', params: [name:java.lang.String, body:'Closure'], doc: 'Update the commit status in GitLab depending on the build status')
method(name: 'gitlabCommitStatus', type: 'Object', params: [body:Closure], namedParams: [parameter(name: 'name', type: 'java.lang.String'), parameter(name: 'builds', type: 'java.util.List'), parameter(name: 'connection', type: 'Map'), ], doc: 'Update the commit status in GitLab depending on the build status')
method(name: 'httpRequest', type: 'Object', params: [url:'java.lang.String'], doc: 'Perform an HTTP Request and return a response object')
method(name: 'httpRequest', type: 'Object', namedParams: [parameter(name: 'url', type: 'java.lang.String'), parameter(name: 'acceptType', type: 'Map'), parameter(name: 'authentication', type: 'java.lang.String'), parameter(name: 'consoleLogResponseBody', type: 'java.lang.Boolean'), parameter(name: 'contentType', type: 'Map'), parameter(name: 'customHeaders', type: 'java.util.List'), parameter(name: 'httpMode', type: 'Map'), parameter(name: 'httpProxy', type: 'java.lang.String'), parameter(name: 'ignoreSslErrors', type: 'boolean'), parameter(name: 'multipartName', type: 'java.lang.String'), parameter(name: 'outputFile', type: 'java.lang.String'), parameter(name: 'proxyAuthentication', type: 'java.lang.String'), parameter(name: 'quiet', type: 'java.lang.Boolean'), parameter(name: 'requestBody', type: 'java.lang.String'), parameter(name: 'responseHandle', type: 'Map'), parameter(name: 'timeout', type: 'java.lang.Integer'), parameter(name: 'uploadFile', type: 'java.lang.String'), parameter(name: 'useNtlm', type: 'boolean'), parameter(name: 'useSystemProperties', type: 'java.lang.Boolean'), parameter(name: 'validResponseCodes', type: 'java.lang.String'), parameter(name: 'validResponseContent', type: 'java.lang.String'), parameter(name: 'wrapAsMultipart', type: 'boolean'), ], doc: 'Perform an HTTP Request and return a response object')
method(name: 'input', type: 'Object', params: [message:'java.lang.String'], doc: 'Wait for interactive input')
method(name: 'input', type: 'Object', namedParams: [parameter(name: 'message', type: 'java.lang.String'), parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'ok', type: 'java.lang.String'), parameter(name: 'parameters', type: 'java.util.List'), parameter(name: 'submitter', type: 'java.lang.String'), parameter(name: 'submitterParameter', type: 'java.lang.String'), ], doc: 'Wait for interactive input')
method(name: 'isUnix', type: 'Object', params: [:], doc: 'Checks if running on a Unix-like node')
method(name: 'jiraComment', type: 'Object', namedParams: [parameter(name: 'issueKey', type: 'java.lang.String'), parameter(name: 'body', type: 'java.lang.String'), ], doc: 'Jira: Add a comment to issue(s)')
method(name: 'jiraIssueSelector', type: 'Object', params: [:], doc: 'Jira: Issue selector')
method(name: 'jiraIssueSelector', type: 'Object', namedParams: [parameter(name: 'issueSelector', type: 'Map'), ], doc: 'Jira: Issue selector')
method(name: 'jiraSearch', type: 'Object', params: [jql:'java.lang.String'], doc: 'Jira: Search issues')
method(name: 'library', type: 'Object', params: [identifier:'java.lang.String'], doc: 'Load a shared library on the fly')
method(name: 'library', type: 'Object', namedParams: [parameter(name: 'identifier', type: 'java.lang.String'), parameter(name: 'changelog', type: 'java.lang.Boolean'), parameter(name: 'retriever', type: 'Map'), ], doc: 'Load a shared library on the fly')
method(name: 'libraryResource', type: 'Object', params: [resource:'java.lang.String'], doc: 'Load a resource file from a shared library')
method(name: 'libraryResource', type: 'Object', namedParams: [parameter(name: 'resource', type: 'java.lang.String'), parameter(name: 'encoding', type: 'java.lang.String'), ], doc: 'Load a resource file from a shared library')
method(name: 'lock', type: 'Object', params: [resource:java.lang.String, body:'Closure'], doc: 'Lock shared resource')
method(name: 'lock', type: 'Object', params: [body:Closure], namedParams: [parameter(name: 'resource', type: 'java.lang.String'), parameter(name: 'extra', type: 'java.util.List'), parameter(name: 'inversePrecedence', type: 'boolean'), parameter(name: 'label', type: 'java.lang.String'), parameter(name: 'quantity', type: 'int'), parameter(name: 'skipIfLocked', type: 'boolean'), parameter(name: 'variable', type: 'java.lang.String'), ], doc: 'Lock shared resource')
method(name: 'mail', type: 'Object', namedParams: [parameter(name: 'subject', type: 'java.lang.String'), parameter(name: 'body', type: 'java.lang.String'), parameter(name: 'bcc', type: 'java.lang.String'), parameter(name: 'cc', type: 'java.lang.String'), parameter(name: 'charset', type: 'java.lang.String'), parameter(name: 'from', type: 'java.lang.String'), parameter(name: 'mimeType', type: 'java.lang.String'), parameter(name: 'replyTo', type: 'java.lang.String'), parameter(name: 'to', type: 'java.lang.String'), ], doc: 'Mail')
method(name: 'milestone', type: 'Object', params: [ordinal:'java.lang.Integer'], doc: 'The milestone step forces all builds to go through in order')
method(name: 'milestone', type: 'Object', namedParams: [parameter(name: 'ordinal', type: 'java.lang.Integer'), parameter(name: 'label', type: 'java.lang.String'), parameter(name: 'unsafe', type: 'boolean'), ], doc: 'The milestone step forces all builds to go through in order')
method(name: 'node', type: 'Object', params: [label:java.lang.String, body:'Closure'], doc: 'Allocate node')
method(name: 'nodesByLabel', type: 'Object', params: [label:'java.lang.String'], doc: 'List of nodes by Label, by default excludes offline nodes.')
method(name: 'nodesByLabel', type: 'Object', namedParams: [parameter(name: 'label', type: 'java.lang.String'), parameter(name: 'offline', type: 'boolean'), ], doc: 'List of nodes by Label, by default excludes offline nodes.')
method(name: 'office365ConnectorSend', type: 'Object', params: [webhookUrl:'java.lang.String'], doc: 'Send job status notifications to Office 365 (e.g. Microsoft Teams or Outlook)')
method(name: 'office365ConnectorSend', type: 'Object', namedParams: [parameter(name: 'webhookUrl', type: 'java.lang.String'), parameter(name: 'color', type: 'java.lang.String'), parameter(name: 'factDefinitions', type: 'java.util.List'), parameter(name: 'message', type: 'java.lang.String'), parameter(name: 'status', type: 'java.lang.String'), ], doc: 'Send job status notifications to Office 365 (e.g. Microsoft Teams or Outlook)')
method(name: 'properties', type: 'Object', params: [properties:'java.util.List'], doc: 'Set job properties')
method(name: 'publishChecks', type: 'Object', params: [:], doc: 'Publish customized checks to SCM platforms')
method(name: 'publishChecks', type: 'Object', namedParams: [parameter(name: 'actions', type: 'java.util.List'), parameter(name: 'annotations', type: 'java.util.List'), parameter(name: 'conclusion', type: 'Map'), parameter(name: 'detailsURL', type: 'java.lang.String'), parameter(name: 'name', type: 'java.lang.String'), parameter(name: 'status', type: 'Map'), parameter(name: 'summary', type: 'java.lang.String'), parameter(name: 'text', type: 'java.lang.String'), parameter(name: 'title', type: 'java.lang.String'), ], doc: 'Publish customized checks to SCM platforms')
method(name: 'publishIssues', type: 'Object', params: [issues:'java.util.List'], doc: 'Publish issues created by a static analysis scan')
method(name: 'publishIssues', type: 'Object', namedParams: [parameter(name: 'issues', type: 'java.util.List'), parameter(name: 'failOnError', type: 'boolean'), parameter(name: 'failedNewAll', type: 'int'), parameter(name: 'failedNewHigh', type: 'int'), parameter(name: 'failedNewLow', type: 'int'), parameter(name: 'failedNewNormal', type: 'int'), parameter(name: 'failedTotalAll', type: 'int'), parameter(name: 'failedTotalHigh', type: 'int'), parameter(name: 'failedTotalLow', type: 'int'), parameter(name: 'failedTotalNormal', type: 'int'), parameter(name: 'healthy', type: 'int'), parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'ignoreFailedBuilds', type: 'boolean'), parameter(name: 'ignoreQualityGate', type: 'boolean'), parameter(name: 'minimumSeverity', type: 'java.lang.String'), parameter(name: 'name', type: 'java.lang.String'), parameter(name: 'publishAllIssues', type: 'boolean'), parameter(name: 'qualityGates', type: 'java.util.List'), parameter(name: 'referenceBuildId', type: 'java.lang.String'), parameter(name: 'referenceJobName', type: 'java.lang.String'), parameter(name: 'skipPublishingChecks', type: 'boolean'), parameter(name: 'sourceCodeEncoding', type: 'java.lang.String'), parameter(name: 'trendChartType', type: 'Map'), parameter(name: 'unhealthy', type: 'int'), parameter(name: 'unstableNewAll', type: 'int'), parameter(name: 'unstableNewHigh', type: 'int'), parameter(name: 'unstableNewLow', type: 'int'), parameter(name: 'unstableNewNormal', type: 'int'), parameter(name: 'unstableTotalAll', type: 'int'), parameter(name: 'unstableTotalHigh', type: 'int'), parameter(name: 'unstableTotalLow', type: 'int'), parameter(name: 'unstableTotalNormal', type: 'int'), ], doc: 'Publish issues created by a static analysis scan')
method(name: 'readCSV', type: 'Object', params: [:], doc: 'Read content from a CSV file in the workspace.')
method(name: 'readCSV', type: 'Object', namedParams: [parameter(name: 'file', type: 'java.lang.String'), parameter(name: 'format', type: 'Map'), parameter(name: 'text', type: 'java.lang.String'), ], doc: 'Read content from a CSV file in the workspace.')
method(name: 'readJSON', type: 'Object', params: [:], doc: 'Read JSON from files in the workspace.')
method(name: 'readJSON', type: 'Object', namedParams: [parameter(name: 'file', type: 'java.lang.String'), parameter(name: 'returnPojo', type: 'boolean'), parameter(name: 'text', type: 'java.lang.String'), ], doc: 'Read JSON from files in the workspace.')
method(name: 'readManifest', type: 'Object', params: [:], doc: 'Read a Jar Manifest')
method(name: 'readManifest', type: 'Object', namedParams: [parameter(name: 'file', type: 'java.lang.String'), parameter(name: 'text', type: 'java.lang.String'), ], doc: 'Read a Jar Manifest')
method(name: 'readProperties', type: 'Object', params: [:], doc: 'Read properties from files in the workspace or text.')
method(name: 'readProperties', type: 'Object', namedParams: [parameter(name: 'defaults', type: 'java.util.Map'), parameter(name: 'file', type: 'java.lang.String'), parameter(name: 'interpolate', type: 'java.lang.Boolean'), parameter(name: 'text', type: 'java.lang.String'), ], doc: 'Read properties from files in the workspace or text.')
method(name: 'readTrusted', type: 'Object', params: [path:'java.lang.String'], doc: 'Read trusted file from SCM')
method(name: 'readYaml', type: 'Object', params: [:], doc: 'Read yaml from files in the workspace or text.')
method(name: 'readYaml', type: 'Object', namedParams: [parameter(name: 'file', type: 'java.lang.String'), parameter(name: 'text', type: 'java.lang.String'), ], doc: 'Read yaml from files in the workspace or text.')
method(name: 'resolveScm', type: 'Object', namedParams: [parameter(name: 'source', type: 'Map'), parameter(name: 'targets', type: 'java.util.List'), parameter(name: 'ignoreErrors', type: 'boolean'), ], doc: 'Resolves an SCM from an SCM Source and a list of candidate target branch names')
method(name: 'retry', type: 'Object', params: [count:int, body:'Closure'], doc: 'Retry the body up to N times')
method(name: 'script', type: 'Object', params: [body:'Closure'], doc: 'Run arbitrary Pipeline script')
method(name: 'sleep', type: 'Object', params: [time:'int'], doc: 'Sleep')
method(name: 'sleep', type: 'Object', namedParams: [parameter(name: 'time', type: 'int'), parameter(name: 'unit', type: 'java.util.concurrent.TimeUnit'), ], doc: 'Sleep')
method(name: 'stage', type: 'Object', params: [name:java.lang.String, body:'Closure'], doc: 'Stage')
method(name: 'stage', type: 'Object', params: [body:Closure], namedParams: [parameter(name: 'name', type: 'java.lang.String'), parameter(name: 'concurrency', type: 'java.lang.Integer'), ], doc: 'Stage')
method(name: 'step', type: 'Object', params: [delegate:'Map'], doc: 'General Build Step')
method(name: 'timeout', type: 'Object', params: [time:int, body:'Closure'], doc: 'Enforce time limit')
method(name: 'timeout', type: 'Object', params: [body:Closure], namedParams: [parameter(name: 'time', type: 'int'), parameter(name: 'activity', type: 'boolean'), parameter(name: 'unit', type: 'java.util.concurrent.TimeUnit'), ], doc: 'Enforce time limit')
method(name: 'timestamps', type: 'Object', params: [body:'Closure'], doc: 'Timestamps')
method(name: 'tool', type: 'Object', params: [name:'java.lang.String'], doc: 'Use a tool from a predefined Tool Installation')
method(name: 'tool', type: 'Object', namedParams: [parameter(name: 'name', type: 'java.lang.String'), parameter(name: 'type', type: 'java.lang.String'), ], doc: 'Use a tool from a predefined Tool Installation')
method(name: 'unstable', type: 'Object', params: [message:'java.lang.String'], doc: 'Set stage result to unstable')
method(name: 'updateGitlabCommitStatus', type: 'Object', params: [:], doc: 'Update the commit status in GitLab')
method(name: 'updateGitlabCommitStatus', type: 'Object', namedParams: [parameter(name: 'name', type: 'java.lang.String'), parameter(name: 'state', type: 'Map'), ], doc: 'Update the commit status in GitLab')
method(name: 'waitForQualityGate', type: 'Object', params: [abortPipeline:'boolean'], doc: 'Wait for SonarQube analysis to be completed and return quality gate status')
method(name: 'waitForQualityGate', type: 'Object', namedParams: [parameter(name: 'abortPipeline', type: 'boolean'), parameter(name: 'credentialsId', type: 'java.lang.String'), parameter(name: 'webhookSecretId', type: 'java.lang.String'), ], doc: 'Wait for SonarQube analysis to be completed and return quality gate status')
method(name: 'waitUntil', type: 'Object', params: [body:'Closure'], doc: 'Wait for condition')
method(name: 'waitUntil', type: 'Object', params: [body:Closure], namedParams: [parameter(name: 'initialRecurrencePeriod', type: 'long'), parameter(name: 'quiet', type: 'boolean'), ], doc: 'Wait for condition')
method(name: 'warnError', type: 'Object', params: [message:java.lang.String, body:'Closure'], doc: 'Catch error and set build and stage result to unstable')
method(name: 'warnError', type: 'Object', params: [body:Closure], namedParams: [parameter(name: 'message', type: 'java.lang.String'), parameter(name: 'catchInterruptions', type: 'boolean'), ], doc: 'Catch error and set build and stage result to unstable')
method(name: 'withChecks', type: 'Object', params: [name:java.lang.String, body:'Closure'], doc: 'Inject checks properties into its closure')
method(name: 'withCredentials', type: 'Object', params: [bindings:java.util.List, body:'Closure'], doc: 'Bind credentials to variables')
method(name: 'withEnv', type: 'Object', params: [overrides:java.util.List, body:'Closure'], doc: 'Set environment variables')
method(name: 'wrap', type: 'Object', params: [delegate:Map, body:'Closure'], doc: 'General Build Wrapper')
method(name: 'writeJSON', type: 'Object', params: [json:'java.lang.Object'], doc: 'Write JSON to a file in the workspace.')
method(name: 'writeJSON', type: 'Object', namedParams: [parameter(name: 'json', type: 'java.lang.Object'), parameter(name: 'file', type: 'java.lang.String'), parameter(name: 'pretty', type: 'int'), parameter(name: 'returnText', type: 'boolean'), ], doc: 'Write JSON to a file in the workspace.')
method(name: 'writeYaml', type: 'Object', params: [:], doc: 'Write a yaml from an object or objects.')
method(name: 'writeYaml', type: 'Object', namedParams: [parameter(name: 'charset', type: 'java.lang.String'), parameter(name: 'data', type: 'java.lang.Object'), parameter(name: 'datas', type: 'java.util.Collection'), parameter(name: 'file', type: 'java.lang.String'), parameter(name: 'overwrite', type: 'boolean'), parameter(name: 'returnText', type: 'boolean'), ], doc: 'Write a yaml from an object or objects.')
method(name: 'ws', type: 'Object', params: [dir:java.lang.String, body:'Closure'], doc: 'Allocate workspace')
method(name: 'ArtifactoryGradleBuild', type: 'Object', namedParams: [parameter(name: 'gradleBuild', type: 'Map'), parameter(name: 'rootDir', type: 'java.lang.String'), parameter(name: 'buildFile', type: 'java.lang.String'), parameter(name: 'tasks', type: 'java.lang.String'), parameter(name: 'switches', type: 'java.lang.String'), parameter(name: 'buildInfo', type: 'Map'), ], doc: 'run Artifactory gradle')
method(name: 'MavenDescriptorStep', type: 'Object', namedParams: [parameter(name: 'pomFile', type: 'java.lang.String'), parameter(name: 'version', type: 'java.lang.String'), parameter(name: 'versionPerModule', type: 'java.util.Map'), parameter(name: 'failOnSnapshot', type: 'boolean'), parameter(name: 'dryRun', type: 'boolean'), ], doc: 'Get Artifactory Maven descriptor')
method(name: 'addInteractivePromotion', type: 'Object', namedParams: [parameter(name: 'promotionConfig', type: 'Map'), parameter(name: 'server', type: 'Map'), parameter(name: 'displayName', type: 'java.lang.String'), ], doc: 'Add interactive promotion')
method(name: 'artifactoryBuildTrigger', type: 'Object', namedParams: [parameter(name: 'server', type: 'Map'), parameter(name: 'paths', type: 'java.lang.String'), parameter(name: 'spec', type: 'java.lang.String'), ], doc: 'Trigger Artifactory build')
method(name: 'artifactoryDistributeBuild', type: 'Object', namedParams: [parameter(name: 'distributionConfig', type: 'Map'), parameter(name: 'server', type: 'Map'), ], doc: 'Distribute build')
method(name: 'artifactoryDownload', type: 'Object', namedParams: [parameter(name: 'spec', type: 'java.lang.String'), parameter(name: 'buildInfo', type: 'Map'), parameter(name: 'failNoOp', type: 'boolean'), parameter(name: 'module', type: 'java.lang.String'), parameter(name: 'server', type: 'Map'), ], doc: 'Download artifacts')
method(name: 'artifactoryEditProps', type: 'Object', namedParams: [parameter(name: 'spec', type: 'java.lang.String'), parameter(name: 'props', type: 'java.lang.String'), parameter(name: 'failNoOp', type: 'boolean'), parameter(name: 'server', type: 'Map'), parameter(name: 'editType', type: 'Map'), ], doc: 'Edit properties')
method(name: 'artifactoryGoPublish', type: 'Object', namedParams: [parameter(name: 'buildInfo', type: 'Map'), parameter(name: 'goBuild', type: 'Map'), parameter(name: 'path', type: 'java.lang.String'), parameter(name: 'version', type: 'java.lang.String'), parameter(name: 'args', type: 'java.lang.String'), parameter(name: 'module', type: 'java.lang.String'), ], doc: 'Run Artifactory Go Publish command')
method(name: 'artifactoryGoRun', type: 'Object', namedParams: [parameter(name: 'buildInfo', type: 'Map'), parameter(name: 'goBuild', type: 'Map'), parameter(name: 'path', type: 'java.lang.String'), parameter(name: 'goCmdArgs', type: 'java.lang.String'), parameter(name: 'args', type: 'java.lang.String'), parameter(name: 'module', type: 'java.lang.String'), ], doc: 'Run Artifactory Go command')
method(name: 'artifactoryMavenBuild', type: 'Object', namedParams: [parameter(name: 'mavenBuild', type: 'Map'), parameter(name: 'pom', type: 'java.lang.String'), parameter(name: 'goals', type: 'java.lang.String'), parameter(name: 'buildInfo', type: 'Map'), ], doc: 'run Artifactory maven')
method(name: 'artifactoryNpmCi', type: 'Object', namedParams: [parameter(name: 'buildInfo', type: 'Map'), parameter(name: 'npmBuild', type: 'Map'), parameter(name: 'javaArgs', type: 'java.lang.String'), parameter(name: 'path', type: 'java.lang.String'), parameter(name: 'args', type: 'java.lang.String'), parameter(name: 'module', type: 'java.lang.String'), ], doc: 'Run Artifactory npm ci')
method(name: 'artifactoryNpmInstall', type: 'Object', namedParams: [parameter(name: 'buildInfo', type: 'Map'), parameter(name: 'npmBuild', type: 'Map'), parameter(name: 'javaArgs', type: 'java.lang.String'), parameter(name: 'path', type: 'java.lang.String'), parameter(name: 'args', type: 'java.lang.String'), parameter(name: 'module', type: 'java.lang.String'), ], doc: 'Run Artifactory npm install')
method(name: 'artifactoryNpmPublish', type: 'Object', namedParams: [parameter(name: 'buildInfo', type: 'Map'), parameter(name: 'npmBuild', type: 'Map'), parameter(name: 'path', type: 'java.lang.String'), parameter(name: 'javaArgs', type: 'java.lang.String'), parameter(name: 'args', type: 'java.lang.String'), parameter(name: 'module', type: 'java.lang.String'), ], doc: 'Run Artifactory npm publish')
method(name: 'artifactoryNugetRun', type: 'Object', namedParams: [parameter(name: 'buildInfo', type: 'Map'), parameter(name: 'nugetBuild', type: 'Map'), parameter(name: 'javaArgs', type: 'java.lang.String'), parameter(name: 'args', type: 'java.lang.String'), parameter(name: 'module', type: 'java.lang.String'), ], doc: 'Run Artifactory NuGet')
method(name: 'artifactoryPipRun', type: 'Object', namedParams: [parameter(name: 'buildInfo', type: 'Map'), parameter(name: 'pipBuild', type: 'Map'), parameter(name: 'javaArgs', type: 'java.lang.String'), parameter(name: 'args', type: 'java.lang.String'), parameter(name: 'envActivation', type: 'java.lang.String'), parameter(name: 'module', type: 'java.lang.String'), ], doc: 'Run Artifactory pip install')
method(name: 'artifactoryPromoteBuild', type: 'Object', namedParams: [parameter(name: 'promotionConfig', type: 'Map'), parameter(name: 'server', type: 'Map'), ], doc: 'Promote build')
method(name: 'artifactoryUpload', type: 'Object', namedParams: [parameter(name: 'spec', type: 'java.lang.String'), parameter(name: 'buildInfo', type: 'Map'), parameter(name: 'failNoOp', type: 'boolean'), parameter(name: 'module', type: 'java.lang.String'), parameter(name: 'server', type: 'Map'), ], doc: 'Upload artifacts')
method(name: 'buildAppend', type: 'Object', namedParams: [parameter(name: 'buildInfo', type: 'Map'), parameter(name: 'buildName', type: 'java.lang.String'), parameter(name: 'buildNumber', type: 'java.lang.String'), parameter(name: 'server', type: 'Map'), ], doc: 'Build append')
method(name: 'collectEnv', type: 'Object', params: [env:'Map'], doc: 'Advanced/Deprecated Collect environment variables and system properties')
method(name: 'collectIssues', type: 'Object', namedParams: [parameter(name: 'issues', type: 'Map'), parameter(name: 'server', type: 'Map'), parameter(name: 'config', type: 'java.lang.String'), ], doc: 'Collect issues from git and add them to a build')
method(name: 'conanAddRemote', type: 'Object', namedParams: [parameter(name: 'serverUrl', type: 'java.lang.String'), parameter(name: 'serverName', type: 'java.lang.String'), parameter(name: 'conanHome', type: 'java.lang.String'), parameter(name: 'force', type: 'boolean'), parameter(name: 'verifySSL', type: 'boolean'), ], doc: 'Add new repo to Conan config')
method(name: 'conanAddUser', type: 'Object', namedParams: [parameter(name: 'server', type: 'Map'), parameter(name: 'serverName', type: 'java.lang.String'), parameter(name: 'conanHome', type: 'java.lang.String'), ], doc: 'Add new user to Conan config')
method(name: 'deployArtifacts', type: 'Object', namedParams: [parameter(name: 'deployer', type: 'Map'), parameter(name: 'buildInfo', type: 'Map'), ], doc: 'Deploy artifacts')
method(name: 'dockerFingerprintRun', type: 'Object', params: [containerId:'java.lang.String'], doc: 'Advanced/Deprecated Record trace of a Docker image run in a container')
method(name: 'dockerFingerprintRun', type: 'Object', namedParams: [parameter(name: 'containerId', type: 'java.lang.String'), parameter(name: 'toolName', type: 'java.lang.String'), ], doc: 'Record trace of a Docker image run in a container')
method(name: 'dockerPullStep', type: 'Object', namedParams: [parameter(name: 'image', type: 'java.lang.String'), parameter(name: 'host', type: 'java.lang.String'), parameter(name: 'sourceRepo', type: 'java.lang.String'), parameter(name: 'javaArgs', type: 'java.lang.String'), parameter(name: 'buildInfo', type: 'Map'), parameter(name: 'server', type: 'Map'), ], doc: 'Artifactory docker pull')
method(name: 'dockerPushStep', type: 'Object', namedParams: [parameter(name: 'image', type: 'java.lang.String'), parameter(name: 'host', type: 'java.lang.String'), parameter(name: 'targetRepo', type: 'java.lang.String'), parameter(name: 'buildInfo', type: 'Map'), parameter(name: 'properties', type: 'Map'), parameter(name: 'server', type: 'Map'), parameter(name: 'javaArgs', type: 'java.lang.String'), ], doc: 'Artifactory docker push')
method(name: 'envVarsForTool', type: 'Object', namedParams: [parameter(name: 'toolId', type: 'java.lang.String'), parameter(name: 'toolVersion', type: 'java.lang.String'), ], doc: 'Fetches the environment variables for a given tool in a list of \'FOO=bar\' strings suitable for the withEnv step.')
method(name: 'getArtifactoryServer', type: 'Object', params: [artifactoryServerID:'java.lang.String'], doc: 'Advanced/Deprecated Get Artifactory server from Jenkins config')
method(name: 'getContext', type: 'Object', params: [type:'Map'], doc: 'Advanced/Deprecated Get contextual object from internal APIs')
method(name: 'initConanClient', type: 'Object', params: [client:'Map'], doc: 'Advanced/Deprecated Create Conan Client')
method(name: 'jfPipelines', type: 'Object', params: [:], doc: 'Advanced/Deprecated Set output resources and report results for JFrog Pipelines')
method(name: 'jfPipelines', type: 'Object', namedParams: [parameter(name: 'outputResources', type: 'java.lang.String'), parameter(name: 'reportStatus', type: 'java.lang.String'), ], doc: 'Set output resources and report results for JFrog Pipelines')
method(name: 'newArtifactoryServer', type: 'Object', namedParams: [parameter(name: 'url', type: 'java.lang.String'), parameter(name: 'username', type: 'java.lang.String'), parameter(name: 'password', type: 'java.lang.String'), parameter(name: 'credentialsId', type: 'java.lang.String'), ], doc: 'Returns new Artifactory server')
method(name: 'newBuildInfo', type: 'Object', params: [:], doc: 'Advanced/Deprecated New buildInfo')
method(name: 'newGoBuild', type: 'Object', params: [:], doc: 'Advanced/Deprecated New Artifactory Go')
method(name: 'newGradleBuild', type: 'Object', params: [:], doc: 'Advanced/Deprecated New Artifactory gradle executor')
method(name: 'newMavenBuild', type: 'Object', params: [:], doc: 'Advanced/Deprecated New Artifactory maven')
method(name: 'newNpmBuild', type: 'Object', params: [:], doc: 'Advanced/Deprecated New Artifactory npm executor')
method(name: 'newNugetBuild', type: 'Object', params: [:], doc: 'Advanced/Deprecated New Artifactory NuGet executor')
method(name: 'newPipBuild', type: 'Object', params: [:], doc: 'Advanced/Deprecated New Artifactory pip executor')
method(name: 'publishBuildInfo', type: 'Object', namedParams: [parameter(name: 'buildInfo', type: 'Map'), parameter(name: 'server', type: 'Map'), ], doc: 'Publish build Info to Artifactory')
method(name: 'rtAddInteractivePromotion', type: 'Object', params: [serverId:'java.lang.String'], doc: 'Advanced/Deprecated Add interactive promotion')
method(name: 'rtAddInteractivePromotion', type: 'Object', namedParams: [parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'buildName', type: 'java.lang.String'), parameter(name: 'buildNumber', type: 'java.lang.String'), parameter(name: 'comment', type: 'java.lang.String'), parameter(name: 'copy', type: 'boolean'), parameter(name: 'displayName', type: 'java.lang.String'), parameter(name: 'failFast', type: 'boolean'), parameter(name: 'includeDependencies', type: 'boolean'), parameter(name: 'sourceRepo', type: 'java.lang.String'), parameter(name: 'status', type: 'java.lang.String'), parameter(name: 'targetRepo', type: 'java.lang.String'), ], doc: 'Add interactive promotion')
method(name: 'rtBuildAppend', type: 'Object', namedParams: [parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'appendBuildName', type: 'java.lang.String'), parameter(name: 'appendBuildNumber', type: 'java.lang.String'), parameter(name: 'buildName', type: 'java.lang.String'), parameter(name: 'buildNumber', type: 'java.lang.String'), ], doc: 'Build append')
method(name: 'rtBuildInfo', type: 'Object', params: [:], doc: 'Advanced/Deprecated Create build info')
method(name: 'rtBuildInfo', type: 'Object', namedParams: [parameter(name: 'asyncBuildRetention', type: 'boolean'), parameter(name: 'buildName', type: 'java.lang.String'), parameter(name: 'buildNumber', type: 'java.lang.String'), parameter(name: 'captureEnv', type: 'boolean'), parameter(name: 'deleteBuildArtifacts', type: 'boolean'), parameter(name: 'doNotDiscardBuilds', type: 'java.util.List'), parameter(name: 'excludeEnvPatterns', type: 'java.util.List'), parameter(name: 'includeEnvPatterns', type: 'java.util.List'), parameter(name: 'maxBuilds', type: 'int'), parameter(name: 'maxDays', type: 'int'), parameter(name: 'startDate', type: 'java.util.Date'), ], doc: 'Create build info')
method(name: 'rtBuildTrigger', type: 'Object', namedParams: [parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'paths', type: 'java.lang.String'), parameter(name: 'spec', type: 'java.lang.String'), ], doc: 'Trigger Artifactory build')
method(name: 'rtCollectIssues', type: 'Object', params: [serverId:'java.lang.String'], doc: 'Advanced/Deprecated Collect issues')
method(name: 'rtCollectIssues', type: 'Object', namedParams: [parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'buildName', type: 'java.lang.String'), parameter(name: 'buildNumber', type: 'java.lang.String'), parameter(name: 'config', type: 'java.lang.String'), parameter(name: 'configPath', type: 'java.lang.String'), ], doc: 'Collect issues')
method(name: 'rtConanClient', type: 'Object', params: [id:'java.lang.String'], doc: 'Advanced/Deprecated Creates new Conan client')
method(name: 'rtConanClient', type: 'Object', namedParams: [parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'userHome', type: 'java.lang.String'), ], doc: 'Creates new Conan client')
method(name: 'rtConanRemote', type: 'Object', namedParams: [parameter(name: 'clientId', type: 'java.lang.String'), parameter(name: 'name', type: 'java.lang.String'), parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'repo', type: 'java.lang.String'), parameter(name: 'force', type: 'boolean'), parameter(name: 'verifySSL', type: 'boolean'), ], doc: 'Add new repo to Conan config')
method(name: 'rtConanRun', type: 'Object', namedParams: [parameter(name: 'clientId', type: 'java.lang.String'), parameter(name: 'command', type: 'java.lang.String'), parameter(name: 'buildName', type: 'java.lang.String'), parameter(name: 'buildNumber', type: 'java.lang.String'), ], doc: 'Run a Conan command')
method(name: 'rtDeleteProps', type: 'Object', params: [serverId:'java.lang.String'], doc: 'Advanced/Deprecated Delete properties')
method(name: 'rtDeleteProps', type: 'Object', namedParams: [parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'failNoOp', type: 'boolean'), parameter(name: 'props', type: 'java.lang.String'), parameter(name: 'spec', type: 'java.lang.String'), parameter(name: 'specPath', type: 'java.lang.String'), ], doc: 'Delete properties')
method(name: 'rtDockerPull', type: 'Object', namedParams: [parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'image', type: 'java.lang.String'), parameter(name: 'sourceRepo', type: 'java.lang.String'), parameter(name: 'buildName', type: 'java.lang.String'), parameter(name: 'buildNumber', type: 'java.lang.String'), parameter(name: 'host', type: 'java.lang.String'), parameter(name: 'javaArgs', type: 'java.lang.String'), ], doc: 'run Artifactory docker pull')
method(name: 'rtDockerPush', type: 'Object', namedParams: [parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'image', type: 'java.lang.String'), parameter(name: 'targetRepo', type: 'java.lang.String'), parameter(name: 'javaArgs', type: 'java.lang.String'), parameter(name: 'buildName', type: 'java.lang.String'), parameter(name: 'buildNumber', type: 'java.lang.String'), parameter(name: 'host', type: 'java.lang.String'), parameter(name: 'properties', type: 'java.lang.String'), ], doc: 'run Artifactory docker push')
method(name: 'rtDotnetResolver', type: 'Object', namedParams: [parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'repo', type: 'java.lang.String'), ], doc: 'set .NET resolver')
method(name: 'rtDotnetRun', type: 'Object', params: [:], doc: 'Advanced/Deprecated run Artifactory .NET')
method(name: 'rtDotnetRun', type: 'Object', namedParams: [parameter(name: 'args', type: 'java.lang.String'), parameter(name: 'buildName', type: 'java.lang.String'), parameter(name: 'buildNumber', type: 'java.lang.String'), parameter(name: 'javaArgs', type: 'java.lang.String'), parameter(name: 'module', type: 'java.lang.String'), parameter(name: 'resolverId', type: 'java.lang.String'), ], doc: 'run Artifactory .NET')
method(name: 'rtDownload', type: 'Object', params: [serverId:'java.lang.String'], doc: 'Advanced/Deprecated Download artifacts')
method(name: 'rtDownload', type: 'Object', namedParams: [parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'buildName', type: 'java.lang.String'), parameter(name: 'buildNumber', type: 'java.lang.String'), parameter(name: 'failNoOp', type: 'boolean'), parameter(name: 'module', type: 'java.lang.String'), parameter(name: 'spec', type: 'java.lang.String'), parameter(name: 'specPath', type: 'java.lang.String'), ], doc: 'Download artifacts')
method(name: 'rtGoDeployer', type: 'Object', namedParams: [parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'repo', type: 'java.lang.String'), parameter(name: 'customBuildName', type: 'java.lang.String'), parameter(name: 'properties', type: 'java.util.List'), ], doc: 'set go deployer')
method(name: 'rtGoPublish', type: 'Object', params: [:], doc: 'Advanced/Deprecated run Artifactory Go publish')
method(name: 'rtGoPublish', type: 'Object', namedParams: [parameter(name: 'buildName', type: 'java.lang.String'), parameter(name: 'buildNumber', type: 'java.lang.String'), parameter(name: 'deployerId', type: 'java.lang.String'), parameter(name: 'module', type: 'java.lang.String'), parameter(name: 'path', type: 'java.lang.String'), parameter(name: 'version', type: 'java.lang.String'), ], doc: 'run Artifactory Go publish')
method(name: 'rtGoResolver', type: 'Object', namedParams: [parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'repo', type: 'java.lang.String'), ], doc: 'set Go resolver')
method(name: 'rtGoRun', type: 'Object', params: [:], doc: 'Advanced/Deprecated run Artifactory Go publish')
method(name: 'rtGoRun', type: 'Object', namedParams: [parameter(name: 'args', type: 'java.lang.String'), parameter(name: 'buildName', type: 'java.lang.String'), parameter(name: 'buildNumber', type: 'java.lang.String'), parameter(name: 'module', type: 'java.lang.String'), parameter(name: 'path', type: 'java.lang.String'), parameter(name: 'resolverId', type: 'java.lang.String'), ], doc: 'run Artifactory Go publish')
method(name: 'rtGradleDeployer', type: 'Object', namedParams: [parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'artifactPattern', type: 'java.lang.String'), parameter(name: 'customBuildName', type: 'java.lang.String'), parameter(name: 'deployIvyDescriptors', type: 'boolean'), parameter(name: 'deployMavenDescriptors', type: 'boolean'), parameter(name: 'excludePatterns', type: 'java.util.List'), parameter(name: 'includeEnvVars', type: 'boolean'), parameter(name: 'includePatterns', type: 'java.util.List'), parameter(name: 'ivyPattern', type: 'java.lang.String'), parameter(name: 'mavenCompatible', type: 'boolean'), parameter(name: 'properties', type: 'java.util.List'), parameter(name: 'publications', type: 'java.util.List'), parameter(name: 'releaseRepo', type: 'java.lang.String'), parameter(name: 'repo', type: 'java.lang.String'), parameter(name: 'snapshotRepo', type: 'java.lang.String'), parameter(name: 'threads', type: 'int'), ], doc: 'set gradle deployer')
method(name: 'rtGradleResolver', type: 'Object', namedParams: [parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'repo', type: 'java.lang.String'), ], doc: 'set gradle resolver')
method(name: 'rtGradleRun', type: 'Object', params: [:], doc: 'Advanced/Deprecated run Artifactory gradle')
method(name: 'rtGradleRun', type: 'Object', namedParams: [parameter(name: 'buildFile', type: 'java.lang.String'), parameter(name: 'buildName', type: 'java.lang.String'), parameter(name: 'buildNumber', type: 'java.lang.String'), parameter(name: 'deployerId', type: 'java.lang.String'), parameter(name: 'resolverId', type: 'java.lang.String'), parameter(name: 'rootDir', type: 'java.lang.String'), parameter(name: 'switches', type: 'java.lang.String'), parameter(name: 'tasks', type: 'java.lang.String'), parameter(name: 'tool', type: 'java.lang.String'), parameter(name: 'useWrapper', type: 'boolean'), parameter(name: 'usesPlugin', type: 'boolean'), ], doc: 'run Artifactory gradle')
method(name: 'rtMavenDeployer', type: 'Object', namedParams: [parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'releaseRepo', type: 'java.lang.String'), parameter(name: 'snapshotRepo', type: 'java.lang.String'), parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'customBuildName', type: 'java.lang.String'), parameter(name: 'deployArtifacts', type: 'boolean'), parameter(name: 'deployEvenIfUnstable', type: 'boolean'), parameter(name: 'excludePatterns', type: 'java.util.List'), parameter(name: 'includeEnvVars', type: 'boolean'), parameter(name: 'includePatterns', type: 'java.util.List'), parameter(name: 'properties', type: 'java.util.List'), parameter(name: 'threads', type: 'int'), ], doc: 'set maven deployer')
method(name: 'rtMavenResolver', type: 'Object', namedParams: [parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'releaseRepo', type: 'java.lang.String'), parameter(name: 'snapshotRepo', type: 'java.lang.String'), parameter(name: 'serverId', type: 'java.lang.String'), ], doc: 'set maven resolver')
method(name: 'rtMavenRun', type: 'Object', namedParams: [parameter(name: 'pom', type: 'java.lang.String'), parameter(name: 'goals', type: 'java.lang.String'), parameter(name: 'buildName', type: 'java.lang.String'), parameter(name: 'buildNumber', type: 'java.lang.String'), parameter(name: 'deployerId', type: 'java.lang.String'), parameter(name: 'opts', type: 'java.lang.String'), parameter(name: 'resolverId', type: 'java.lang.String'), parameter(name: 'tool', type: 'java.lang.String'), ], doc: 'run Artifactory maven')
method(name: 'rtNpmCi', type: 'Object', params: [:], doc: 'Advanced/Deprecated run Artifactory npm ci')
method(name: 'rtNpmCi', type: 'Object', namedParams: [parameter(name: 'args', type: 'java.lang.String'), parameter(name: 'buildName', type: 'java.lang.String'), parameter(name: 'buildNumber', type: 'java.lang.String'), parameter(name: 'javaArgs', type: 'java.lang.String'), parameter(name: 'module', type: 'java.lang.String'), parameter(name: 'path', type: 'java.lang.String'), parameter(name: 'resolverId', type: 'java.lang.String'), parameter(name: 'tool', type: 'java.lang.String'), ], doc: 'run Artifactory npm ci')
method(name: 'rtNpmDeployer', type: 'Object', namedParams: [parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'repo', type: 'java.lang.String'), parameter(name: 'customBuildName', type: 'java.lang.String'), parameter(name: 'properties', type: 'java.util.List'), ], doc: 'set npm deployer')
method(name: 'rtNpmInstall', type: 'Object', params: [:], doc: 'Advanced/Deprecated run Artifactory npm install')
method(name: 'rtNpmInstall', type: 'Object', namedParams: [parameter(name: 'args', type: 'java.lang.String'), parameter(name: 'buildName', type: 'java.lang.String'), parameter(name: 'buildNumber', type: 'java.lang.String'), parameter(name: 'javaArgs', type: 'java.lang.String'), parameter(name: 'module', type: 'java.lang.String'), parameter(name: 'path', type: 'java.lang.String'), parameter(name: 'resolverId', type: 'java.lang.String'), parameter(name: 'tool', type: 'java.lang.String'), ], doc: 'run Artifactory npm install')
method(name: 'rtNpmPublish', type: 'Object', params: [:], doc: 'Advanced/Deprecated run Artifactory npm publish')
method(name: 'rtNpmPublish', type: 'Object', namedParams: [parameter(name: 'buildName', type: 'java.lang.String'), parameter(name: 'buildNumber', type: 'java.lang.String'), parameter(name: 'deployerId', type: 'java.lang.String'), parameter(name: 'javaArgs', type: 'java.lang.String'), parameter(name: 'module', type: 'java.lang.String'), parameter(name: 'path', type: 'java.lang.String'), parameter(name: 'tool', type: 'java.lang.String'), ], doc: 'run Artifactory npm publish')
method(name: 'rtNpmResolver', type: 'Object', namedParams: [parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'repo', type: 'java.lang.String'), ], doc: 'set npm resolver')
method(name: 'rtNugetResolver', type: 'Object', namedParams: [parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'repo', type: 'java.lang.String'), ], doc: 'set NuGet resolver')
method(name: 'rtNugetRun', type: 'Object', params: [:], doc: 'Advanced/Deprecated run Artifactory NuGet')
method(name: 'rtNugetRun', type: 'Object', namedParams: [parameter(name: 'args', type: 'java.lang.String'), parameter(name: 'buildName', type: 'java.lang.String'), parameter(name: 'buildNumber', type: 'java.lang.String'), parameter(name: 'javaArgs', type: 'java.lang.String'), parameter(name: 'module', type: 'java.lang.String'), parameter(name: 'resolverId', type: 'java.lang.String'), ], doc: 'run Artifactory NuGet')
method(name: 'rtPipInstall', type: 'Object', params: [:], doc: 'Advanced/Deprecated run Artifactory pip install')
method(name: 'rtPipInstall', type: 'Object', namedParams: [parameter(name: 'args', type: 'java.lang.String'), parameter(name: 'buildName', type: 'java.lang.String'), parameter(name: 'buildNumber', type: 'java.lang.String'), parameter(name: 'envActivation', type: 'java.lang.String'), parameter(name: 'javaArgs', type: 'java.lang.String'), parameter(name: 'module', type: 'java.lang.String'), parameter(name: 'resolverId', type: 'java.lang.String'), ], doc: 'run Artifactory pip install')
method(name: 'rtPipResolver', type: 'Object', namedParams: [parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'repo', type: 'java.lang.String'), ], doc: 'set pip resolver')
method(name: 'rtPromote', type: 'Object', namedParams: [parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'targetRepo', type: 'java.lang.String'), parameter(name: 'buildName', type: 'java.lang.String'), parameter(name: 'buildNumber', type: 'java.lang.String'), parameter(name: 'comment', type: 'java.lang.String'), parameter(name: 'copy', type: 'boolean'), parameter(name: 'failFast', type: 'boolean'), parameter(name: 'includeDependencies', type: 'boolean'), parameter(name: 'sourceRepo', type: 'java.lang.String'), parameter(name: 'status', type: 'java.lang.String'), ], doc: 'Promote build')
method(name: 'rtPublishBuildInfo', type: 'Object', params: [serverId:'java.lang.String'], doc: 'Advanced/Deprecated Publish build info')
method(name: 'rtPublishBuildInfo', type: 'Object', namedParams: [parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'buildName', type: 'java.lang.String'), parameter(name: 'buildNumber', type: 'java.lang.String'), ], doc: 'Publish build info')
method(name: 'rtServer', type: 'Object', params: [id:'java.lang.String'], doc: 'Advanced/Deprecated Creates new Artifactory server')
method(name: 'rtServer', type: 'Object', namedParams: [parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'bypassProxy', type: 'boolean'), parameter(name: 'credentialsId', type: 'java.lang.String'), parameter(name: 'deploymentThreads', type: 'int'), parameter(name: 'password', type: 'java.lang.String'), parameter(name: 'retry', type: 'int'), parameter(name: 'timeout', type: 'int'), parameter(name: 'url', type: 'java.lang.String'), parameter(name: 'username', type: 'java.lang.String'), ], doc: 'Creates new Artifactory server')
method(name: 'rtSetProps', type: 'Object', params: [serverId:'java.lang.String'], doc: 'Advanced/Deprecated Set properties')
method(name: 'rtSetProps', type: 'Object', namedParams: [parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'failNoOp', type: 'boolean'), parameter(name: 'props', type: 'java.lang.String'), parameter(name: 'spec', type: 'java.lang.String'), parameter(name: 'specPath', type: 'java.lang.String'), ], doc: 'Set properties')
method(name: 'rtUpload', type: 'Object', params: [serverId:'java.lang.String'], doc: 'Advanced/Deprecated Upload artifacts')
method(name: 'rtUpload', type: 'Object', namedParams: [parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'buildName', type: 'java.lang.String'), parameter(name: 'buildNumber', type: 'java.lang.String'), parameter(name: 'failNoOp', type: 'boolean'), parameter(name: 'module', type: 'java.lang.String'), parameter(name: 'spec', type: 'java.lang.String'), parameter(name: 'specPath', type: 'java.lang.String'), ], doc: 'Upload artifacts')
method(name: 'runConanCommand', type: 'Object', namedParams: [parameter(name: 'command', type: 'java.lang.String'), parameter(name: 'conanHome', type: 'java.lang.String'), parameter(name: 'buildInfo', type: 'Map'), ], doc: 'Run a Conan command')
method(name: 'withContext', type: 'Object', params: [context:java.lang.Object, body:'Closure'], doc: 'Advanced/Deprecated Use contextual object from internal APIs within a block')
method(name: 'xrayScan', type: 'Object', params: [serverId:'java.lang.String'], doc: 'Advanced/Deprecated run Xray scan')
method(name: 'xrayScan', type: 'Object', namedParams: [parameter(name: 'serverId', type: 'java.lang.String'), parameter(name: 'buildName', type: 'java.lang.String'), parameter(name: 'buildNumber', type: 'java.lang.String'), parameter(name: 'failBuild', type: 'boolean'), parameter(name: 'printTable', type: 'boolean'), ], doc: 'run Xray scan')
method(name: 'xrayScanBuild', type: 'Object', namedParams: [parameter(name: 'xrayScanConfig', type: 'Map'), parameter(name: 'server', type: 'Map'), ], doc: 'Xray build scanning')
property(name: 'publishConfluence', type: 'com.myyearbook.hudson.plugins.confluence.ConfluenceDSL')
property(name: 'docker', type: 'org.jenkinsci.plugins.docker.workflow.DockerDSL')
property(name: 'pipeline', type: 'org.jenkinsci.plugins.pipeline.modeldefinition.ModelStepLoader')
property(name: 'env', type: 'org.jenkinsci.plugins.workflow.cps.EnvActionImpl.Binder')
property(name: 'params', type: 'org.jenkinsci.plugins.workflow.cps.ParamsVariable')
property(name: 'currentBuild', type: 'org.jenkinsci.plugins.workflow.cps.RunWrapperBinder')
property(name: 'scm', type: 'org.jenkinsci.plugins.workflow.multibranch.SCMVar')
property(name: 'Artifactory', type: 'org.jfrog.hudson.pipeline.scripted.dsl.ArtifactoryDSL')
}
//Steps that require a node context
def nodeCtx = context(scope: closureScope())
contributor(nodeCtx) {
    def call = enclosingCall('node')
    if (call) {
method(name: 'bat', type: 'Object', params: [script:'java.lang.String'], doc: 'Windows Batch Script')
method(name: 'bat', type: 'Object', namedParams: [parameter(name: 'script', type: 'java.lang.String'), parameter(name: 'encoding', type: 'java.lang.String'), parameter(name: 'label', type: 'java.lang.String'), parameter(name: 'returnStatus', type: 'boolean'), parameter(name: 'returnStdout', type: 'boolean'), ], doc: 'Windows Batch Script')
method(name: 'checkout', type: 'Object', params: [scm:'Map'], doc: 'Check out from version control')
method(name: 'checkout', type: 'Object', namedParams: [parameter(name: 'scm', type: 'Map'), parameter(name: 'changelog', type: 'boolean'), parameter(name: 'poll', type: 'boolean'), ], doc: 'Check out from version control')
method(name: 'deleteDir', type: 'Object', params: [:], doc: 'Recursively delete the current directory from the workspace')
method(name: 'dir', type: 'Object', params: [path:java.lang.String, body:'Closure'], doc: 'Change current directory')
method(name: 'fileExists', type: 'Object', params: [file:'java.lang.String'], doc: 'Verify if file exists in workspace')
method(name: 'findFiles', type: 'Object', params: [:], doc: 'Find files in the workspace')
method(name: 'findFiles', type: 'Object', namedParams: [parameter(name: 'excludes', type: 'java.lang.String'), parameter(name: 'glob', type: 'java.lang.String'), ], doc: 'Find files in the workspace')
method(name: 'git', type: 'Object', params: [url:'java.lang.String'], doc: 'Git')
method(name: 'git', type: 'Object', namedParams: [parameter(name: 'url', type: 'java.lang.String'), parameter(name: 'branch', type: 'java.lang.String'), parameter(name: 'changelog', type: 'boolean'), parameter(name: 'credentialsId', type: 'java.lang.String'), parameter(name: 'poll', type: 'boolean'), ], doc: 'Git')
method(name: 'junit', type: 'Object', params: [testResults:'java.lang.String'], doc: 'Archive JUnit-formatted test results')
method(name: 'junit', type: 'Object', namedParams: [parameter(name: 'testResults', type: 'java.lang.String'), parameter(name: 'allowEmptyResults', type: 'boolean'), parameter(name: 'checksName', type: 'java.lang.String'), parameter(name: 'healthScaleFactor', type: 'double'), parameter(name: 'keepLongStdio', type: 'boolean'), parameter(name: 'skipMarkingBuildUnstable', type: 'boolean'), parameter(name: 'skipPublishingChecks', type: 'boolean'), parameter(name: 'testDataPublishers', type: 'java.util.List'), ], doc: 'Archive JUnit-formatted test results')
method(name: 'load', type: 'Object', params: [path:'java.lang.String'], doc: 'Evaluate a Groovy source file into the Pipeline script')
method(name: 'powershell', type: 'Object', params: [script:'java.lang.String'], doc: 'PowerShell Script')
method(name: 'powershell', type: 'Object', namedParams: [parameter(name: 'script', type: 'java.lang.String'), parameter(name: 'encoding', type: 'java.lang.String'), parameter(name: 'label', type: 'java.lang.String'), parameter(name: 'returnStatus', type: 'boolean'), parameter(name: 'returnStdout', type: 'boolean'), ], doc: 'PowerShell Script')
method(name: 'publishHTML', type: 'Object', params: [target:'Map'], doc: 'Publish HTML reports')
method(name: 'pwd', type: 'Object', params: [:], doc: 'Determine current directory')
method(name: 'pwd', type: 'Object', namedParams: [parameter(name: 'tmp', type: 'boolean'), ], doc: 'Determine current directory')
method(name: 'pwsh', type: 'Object', params: [script:'java.lang.String'], doc: 'PowerShell Core Script')
method(name: 'pwsh', type: 'Object', namedParams: [parameter(name: 'script', type: 'java.lang.String'), parameter(name: 'encoding', type: 'java.lang.String'), parameter(name: 'label', type: 'java.lang.String'), parameter(name: 'returnStatus', type: 'boolean'), parameter(name: 'returnStdout', type: 'boolean'), ], doc: 'PowerShell Core Script')
method(name: 'readFile', type: 'Object', params: [file:'java.lang.String'], doc: 'Read file from workspace')
method(name: 'readFile', type: 'Object', namedParams: [parameter(name: 'file', type: 'java.lang.String'), parameter(name: 'encoding', type: 'java.lang.String'), ], doc: 'Read file from workspace')
method(name: 'readMavenPom', type: 'Object', params: [:], doc: 'Read a maven project file.')
method(name: 'readMavenPom', type: 'Object', namedParams: [parameter(name: 'file', type: 'java.lang.String'), ], doc: 'Read a maven project file.')
method(name: 'recordIssues', type: 'Object', params: [:], doc: 'Record compiler warnings and static analysis results')
method(name: 'recordIssues', type: 'Object', namedParams: [parameter(name: 'aggregatingResults', type: 'boolean'), parameter(name: 'blameDisabled', type: 'boolean'), parameter(name: 'enabledForFailure', type: 'boolean'), parameter(name: 'failOnError', type: 'boolean'), parameter(name: 'failedNewAll', type: 'int'), parameter(name: 'failedNewHigh', type: 'int'), parameter(name: 'failedNewLow', type: 'int'), parameter(name: 'failedNewNormal', type: 'int'), parameter(name: 'failedTotalAll', type: 'int'), parameter(name: 'failedTotalHigh', type: 'int'), parameter(name: 'failedTotalLow', type: 'int'), parameter(name: 'failedTotalNormal', type: 'int'), parameter(name: 'filters', type: 'java.util.List'), parameter(name: 'forensicsDisabled', type: 'boolean'), parameter(name: 'healthy', type: 'int'), parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'ignoreFailedBuilds', type: 'boolean'), parameter(name: 'ignoreQualityGate', type: 'boolean'), parameter(name: 'minimumSeverity', type: 'java.lang.String'), parameter(name: 'name', type: 'java.lang.String'), parameter(name: 'publishAllIssues', type: 'boolean'), parameter(name: 'qualityGates', type: 'java.util.List'), parameter(name: 'referenceBuildId', type: 'java.lang.String'), parameter(name: 'referenceJobName', type: 'java.lang.String'), parameter(name: 'scm', type: 'java.lang.String'), parameter(name: 'skipBlames', type: 'boolean'), parameter(name: 'skipPublishingChecks', type: 'boolean'), parameter(name: 'sourceCodeEncoding', type: 'java.lang.String'), parameter(name: 'sourceDirectory', type: 'java.lang.String'), parameter(name: 'tool', type: 'Map'), parameter(name: 'toolProxies', type: 'java.util.List'), parameter(name: 'tools', type: 'java.util.List'), parameter(name: 'trendChartType', type: 'Map'), parameter(name: 'unhealthy', type: 'int'), parameter(name: 'unstableNewAll', type: 'int'), parameter(name: 'unstableNewHigh', type: 'int'), parameter(name: 'unstableNewLow', type: 'int'), parameter(name: 'unstableNewNormal', type: 'int'), parameter(name: 'unstableTotalAll', type: 'int'), parameter(name: 'unstableTotalHigh', type: 'int'), parameter(name: 'unstableTotalLow', type: 'int'), parameter(name: 'unstableTotalNormal', type: 'int'), ], doc: 'Record compiler warnings and static analysis results')
method(name: 'robot', type: 'Object', params: [outputPath:'java.lang.String'], doc: 'Configure robot framework report collection')
method(name: 'robot', type: 'Object', namedParams: [parameter(name: 'outputPath', type: 'java.lang.String'), parameter(name: 'archiveDirName', type: 'java.lang.String'), parameter(name: 'disableArchiveOutput', type: 'boolean'), parameter(name: 'enableCache', type: 'boolean'), parameter(name: 'logFileName', type: 'java.lang.String'), parameter(name: 'onlyCritical', type: 'boolean'), parameter(name: 'otherFiles', type: 'java.lang.String'), parameter(name: 'outputFileName', type: 'java.lang.String'), parameter(name: 'overwriteXAxisLabel', type: 'java.lang.String'), parameter(name: 'passThreshold', type: 'double'), parameter(name: 'reportFileName', type: 'java.lang.String'), parameter(name: 'unstableThreshold', type: 'double'), ], doc: 'Configure robot framework report collection')
method(name: 'runMATLABCommand', type: 'Object', params: [command:'java.lang.String'], doc: 'Run MATLAB commands, scripts, or functions')
method(name: 'runMATLABTests', type: 'Object', params: [:], doc: 'Run MATLAB tests and generate artifacts')
method(name: 'runMATLABTests', type: 'Object', namedParams: [parameter(name: 'codeCoverageCobertura', type: 'java.lang.String'), parameter(name: 'modelCoverageCobertura', type: 'java.lang.String'), parameter(name: 'selectByFolder', type: 'java.util.List'), parameter(name: 'selectByTag', type: 'java.lang.String'), parameter(name: 'sourceFolder', type: 'java.util.List'), parameter(name: 'testResultsJUnit', type: 'java.lang.String'), parameter(name: 'testResultsPDF', type: 'java.lang.String'), parameter(name: 'testResultsSimulinkTest', type: 'java.lang.String'), parameter(name: 'testResultsTAP', type: 'java.lang.String'), ], doc: 'Run MATLAB tests and generate artifacts')
method(name: 'scanForIssues', type: 'Object', params: [:], doc: 'Scan files or the console log for warnings or issues')
method(name: 'scanForIssues', type: 'Object', namedParams: [parameter(name: 'blameDisabled', type: 'boolean'), parameter(name: 'filters', type: 'java.util.List'), parameter(name: 'forensicsDisabled', type: 'boolean'), parameter(name: 'scm', type: 'java.lang.String'), parameter(name: 'sourceCodeEncoding', type: 'java.lang.String'), parameter(name: 'sourceDirectory', type: 'java.lang.String'), parameter(name: 'tool', type: 'Map'), ], doc: 'Scan files or the console log for warnings or issues')
method(name: 'sh', type: 'Object', params: [script:'java.lang.String'], doc: 'Shell Script')
method(name: 'sh', type: 'Object', namedParams: [parameter(name: 'script', type: 'java.lang.String'), parameter(name: 'encoding', type: 'java.lang.String'), parameter(name: 'label', type: 'java.lang.String'), parameter(name: 'returnStatus', type: 'boolean'), parameter(name: 'returnStdout', type: 'boolean'), ], doc: 'Shell Script')
method(name: 'sha1', type: 'Object', params: [file:'java.lang.String'], doc: 'Compute the SHA1 of a given file')
method(name: 'sha256', type: 'Object', params: [file:'java.lang.String'], doc: 'Compute the SHA256 of a given file')
method(name: 'siaddprojectlabel', type: 'Object', params: [serverConfig:'java.lang.String'], doc: 'Windchill RV&S SCM Label')
method(name: 'siaddprojectlabel', type: 'Object', namedParams: [parameter(name: 'serverConfig', type: 'java.lang.String'), parameter(name: 'checkpointLabel', type: 'java.lang.String'), parameter(name: 'configPath', type: 'java.lang.String'), parameter(name: 'password', type: 'java.lang.String'), parameter(name: 'userName', type: 'java.lang.String'), ], doc: 'Windchill RV&S SCM Label')
method(name: 'sicheckpoint', type: 'Object', params: [serverConfig:'java.lang.String'], doc: 'Windchill RV&S SCM Checkpoint')
method(name: 'sicheckpoint', type: 'Object', namedParams: [parameter(name: 'serverConfig', type: 'java.lang.String'), parameter(name: 'checkpointDesc', type: 'java.lang.String'), parameter(name: 'checkpointLabel', type: 'java.lang.String'), parameter(name: 'configPath', type: 'java.lang.String'), parameter(name: 'password', type: 'java.lang.String'), parameter(name: 'userName', type: 'java.lang.String'), ], doc: 'Windchill RV&S SCM Checkpoint')
method(name: 'sici', type: 'Object', params: [serverConfig:'java.lang.String'], doc: 'Windchill RV&S SCM Checkin')
method(name: 'sici', type: 'Object', namedParams: [parameter(name: 'serverConfig', type: 'java.lang.String'), parameter(name: 'configPath', type: 'java.lang.String'), parameter(name: 'excludes', type: 'java.lang.String'), parameter(name: 'includes', type: 'java.lang.String'), parameter(name: 'itemID', type: 'java.lang.String'), parameter(name: 'password', type: 'java.lang.String'), parameter(name: 'userName', type: 'java.lang.String'), ], doc: 'Windchill RV&S SCM Checkin')
method(name: 'sshCommand', type: 'Object', params: [command:'java.lang.String'], doc: 'SSH Steps: sshCommand - Execute command on remote node.')
method(name: 'sshCommand', type: 'Object', namedParams: [parameter(name: 'command', type: 'java.lang.String'), parameter(name: 'dryRun', type: 'boolean'), parameter(name: 'failOnError', type: 'boolean'), parameter(name: 'remote', type: 'java.util.Map'), parameter(name: 'sudo', type: 'boolean'), ], doc: 'SSH Steps: sshCommand - Execute command on remote node.')
method(name: 'sshGet', type: 'Object', namedParams: [parameter(name: 'from', type: 'java.lang.String'), parameter(name: 'into', type: 'java.lang.String'), parameter(name: 'dryRun', type: 'boolean'), parameter(name: 'failOnError', type: 'boolean'), parameter(name: 'filterBy', type: 'java.lang.String'), parameter(name: 'filterRegex', type: 'java.lang.String'), parameter(name: 'override', type: 'boolean'), parameter(name: 'remote', type: 'java.util.Map'), ], doc: 'SSH Steps: sshGet - Get a file\/directory from remote node.')
method(name: 'sshPut', type: 'Object', namedParams: [parameter(name: 'from', type: 'java.lang.String'), parameter(name: 'into', type: 'java.lang.String'), parameter(name: 'dryRun', type: 'boolean'), parameter(name: 'failOnError', type: 'boolean'), parameter(name: 'filterBy', type: 'java.lang.String'), parameter(name: 'filterRegex', type: 'java.lang.String'), parameter(name: 'remote', type: 'java.util.Map'), ], doc: 'SSH Steps: sshPut - Put a file\/directory on remote node.')
method(name: 'sshRemove', type: 'Object', params: [path:'java.lang.String'], doc: 'SSH Steps: sshRemove - Remove a file\/directory from remote node.')
method(name: 'sshRemove', type: 'Object', namedParams: [parameter(name: 'path', type: 'java.lang.String'), parameter(name: 'dryRun', type: 'boolean'), parameter(name: 'failOnError', type: 'boolean'), parameter(name: 'remote', type: 'java.util.Map'), ], doc: 'SSH Steps: sshRemove - Remove a file\/directory from remote node.')
method(name: 'sshScript', type: 'Object', params: [script:'java.lang.String'], doc: 'SSH Steps: sshScript - Execute script(file) on remote node.')
method(name: 'sshScript', type: 'Object', namedParams: [parameter(name: 'script', type: 'java.lang.String'), parameter(name: 'dryRun', type: 'boolean'), parameter(name: 'failOnError', type: 'boolean'), parameter(name: 'remote', type: 'java.util.Map'), ], doc: 'SSH Steps: sshScript - Execute script(file) on remote node.')
method(name: 'sshagent', type: 'Object', params: [credentials:java.util.List, body:'Closure'], doc: 'SSH Agent')
method(name: 'sshagent', type: 'Object', params: [body:Closure], namedParams: [parameter(name: 'credentials', type: 'java.util.List'), parameter(name: 'ignoreMissing', type: 'boolean'), ], doc: 'SSH Agent')
method(name: 'stash', type: 'Object', params: [name:'java.lang.String'], doc: 'Stash some files to be used later in the build')
method(name: 'stash', type: 'Object', namedParams: [parameter(name: 'name', type: 'java.lang.String'), parameter(name: 'allowEmpty', type: 'boolean'), parameter(name: 'excludes', type: 'java.lang.String'), parameter(name: 'includes', type: 'java.lang.String'), parameter(name: 'useDefaultExcludes', type: 'boolean'), ], doc: 'Stash some files to be used later in the build')
method(name: 'tee', type: 'Object', params: [file:java.lang.String, body:'Closure'], doc: 'Tee output to file')
method(name: 'tm', type: 'Object', params: [stringWithMacro:'java.lang.String'], doc: 'Expand a string containing macros')
method(name: 'touch', type: 'Object', params: [file:'java.lang.String'], doc: 'Create a file (if not already exist) in the workspace, and set the timestamp')
method(name: 'touch', type: 'Object', namedParams: [parameter(name: 'file', type: 'java.lang.String'), parameter(name: 'timestamp', type: 'java.lang.Long'), ], doc: 'Create a file (if not already exist) in the workspace, and set the timestamp')
method(name: 'unstash', type: 'Object', params: [name:'java.lang.String'], doc: 'Restore files previously stashed')
method(name: 'unzip', type: 'Object', params: [zipFile:'java.lang.String'], doc: 'Extract Zip file')
method(name: 'unzip', type: 'Object', namedParams: [parameter(name: 'zipFile', type: 'java.lang.String'), parameter(name: 'charset', type: 'java.lang.String'), parameter(name: 'dir', type: 'java.lang.String'), parameter(name: 'glob', type: 'java.lang.String'), parameter(name: 'quiet', type: 'boolean'), parameter(name: 'read', type: 'boolean'), parameter(name: 'test', type: 'boolean'), ], doc: 'Extract Zip file')
method(name: 'validateDeclarativePipeline', type: 'Object', params: [path:'java.lang.String'], doc: 'Validate a file containing a Declarative Pipeline')
method(name: 'withGradle', type: 'Object', params: [body:'Closure'], doc: 'WithGradle')
method(name: 'withGroovy', type: 'Object', params: [body:'Closure'], doc: 'Execute Groovy script')
method(name: 'withGroovy', type: 'Object', params: [body:Closure], namedParams: [parameter(name: 'input', type: 'java.lang.Object'), parameter(name: 'jdk', type: 'java.lang.String'), parameter(name: 'tool', type: 'java.lang.String'), ], doc: 'Execute Groovy script')
method(name: 'writeCSV', type: 'Object', namedParams: [parameter(name: 'file', type: 'java.lang.String'), parameter(name: 'records', type: 'java.lang.Iterable'), parameter(name: 'format', type: 'Map'), ], doc: 'Write content to a CSV file in the workspace.')
method(name: 'writeFile', type: 'Object', namedParams: [parameter(name: 'file', type: 'java.lang.String'), parameter(name: 'text', type: 'java.lang.String'), parameter(name: 'encoding', type: 'java.lang.String'), ], doc: 'Write file to workspace')
method(name: 'writeMavenPom', type: 'Object', params: [model:'Map'], doc: 'Write a maven project file.')
method(name: 'writeMavenPom', type: 'Object', namedParams: [parameter(name: 'model', type: 'Map'), parameter(name: 'file', type: 'java.lang.String'), ], doc: 'Write a maven project file.')
method(name: 'xunit', type: 'Object', params: [tools:'java.util.List'], doc: 'Publish xUnit test result report')
method(name: 'xunit', type: 'Object', namedParams: [parameter(name: 'tools', type: 'java.util.List'), parameter(name: 'followSymlink', type: 'boolean'), parameter(name: 'reduceLog', type: 'boolean'), parameter(name: 'sleepTime', type: 'long'), parameter(name: 'testDataPublishers', type: 'java.util.Collection'), parameter(name: 'testTimeMargin', type: 'java.lang.String'), parameter(name: 'thresholdMode', type: 'int'), parameter(name: 'thresholds', type: 'java.util.List'), ], doc: 'Publish xUnit test result report')
method(name: 'zip', type: 'Object', params: [zipFile:'java.lang.String'], doc: 'Create Zip file')
method(name: 'zip', type: 'Object', namedParams: [parameter(name: 'zipFile', type: 'java.lang.String'), parameter(name: 'archive', type: 'boolean'), parameter(name: 'dir', type: 'java.lang.String'), parameter(name: 'exclude', type: 'java.lang.String'), parameter(name: 'glob', type: 'java.lang.String'), parameter(name: 'overwrite', type: 'boolean'), ], doc: 'Create Zip file')
method(name: 'archive', type: 'Object', params: [includes:'java.lang.String'], doc: 'Advanced/Deprecated Archive artifacts')
method(name: 'archive', type: 'Object', namedParams: [parameter(name: 'includes', type: 'java.lang.String'), parameter(name: 'excludes', type: 'java.lang.String'), ], doc: 'Archive artifacts')
method(name: 'dockerFingerprintFrom', type: 'Object', namedParams: [parameter(name: 'dockerfile', type: 'java.lang.String'), parameter(name: 'image', type: 'java.lang.String'), parameter(name: 'commandLine', type: 'java.lang.String'), parameter(name: 'toolName', type: 'java.lang.String'), ], doc: 'Record trace of a Docker image used in FROM')
method(name: 'unarchive', type: 'Object', params: [:], doc: 'Advanced/Deprecated Copy archived artifacts into the workspace')
method(name: 'unarchive', type: 'Object', namedParams: [parameter(name: 'mapping', type: 'java.util.Map'), ], doc: 'Copy archived artifacts into the workspace')
method(name: 'withDockerContainer', type: 'Object', params: [image:java.lang.String, body:'Closure'], doc: 'Advanced/Deprecated Run build steps inside a Docker container')
method(name: 'withDockerContainer', type: 'Object', params: [body:Closure], namedParams: [parameter(name: 'image', type: 'java.lang.String'), parameter(name: 'args', type: 'java.lang.String'), parameter(name: 'toolName', type: 'java.lang.String'), ], doc: 'Run build steps inside a Docker container')
method(name: 'withDockerRegistry', type: 'Object', params: [registry:Map, body:'Closure'], doc: 'Advanced/Deprecated Sets up Docker registry endpoint')
method(name: 'withDockerRegistry', type: 'Object', params: [body:Closure], namedParams: [parameter(name: 'registry', type: 'Map'), parameter(name: 'toolName', type: 'java.lang.String'), ], doc: 'Sets up Docker registry endpoint')
method(name: 'withDockerServer', type: 'Object', params: [server:Map, body:'Closure'], doc: 'Advanced/Deprecated Sets up Docker server endpoint')
    }
}

// Errors on:

