<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="570" failures="0" errors="0" time="45.72">
  <testsuite name="ProcessCaseEffect" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:16" time="12.795" tests="28">
    <testcase classname="ProcessCaseEffect customerDetails$ should return customerDetailsSuccess action when REST call is successful" name="ProcessCaseEffect customerDetails$ should return customerDetailsSuccess action when REST call is successful" time="0.253">
    </testcase>
    <testcase classname="ProcessCaseEffect customerDetails$ should return customerDetailsFailure on REST error" name="ProcessCaseEffect customerDetails$ should return customerDetailsFailure on REST error" time="0.099">
    </testcase>
    <testcase classname="ProcessCaseEffect  quotationDetails$ should return quotationDetailsSuccess action when REST call is successful" name="ProcessCaseEffect  quotationDetails$ should return quotationDetailsSuccess action when REST call is successful" time="0.082">
    </testcase>
    <testcase classname="ProcessCaseEffect  quotationDetails$ should return quotationDetailsFailure on REST error" name="ProcessCaseEffect  quotationDetails$ should return quotationDetailsFailure on REST error" time="0.079">
    </testcase>
    <testcase classname="ProcessCaseEffect triggerDataLoad$ should return loadQuotation Action" name="ProcessCaseEffect triggerDataLoad$ should return loadQuotation Action" time="0.118">
    </testcase>
    <testcase classname="ProcessCaseEffect loadFromUrl$ should return loadQuotationFromUrl" name="ProcessCaseEffect loadFromUrl$ should return loadQuotationFromUrl" time="0.082">
    </testcase>
    <testcase classname="ProcessCaseEffect loadFromUrl$ should return loadQuotationFromUrl" name="ProcessCaseEffect loadFromUrl$ should return loadQuotationFromUrl" time="0.074">
    </testcase>
    <testcase classname="ProcessCaseEffect loadFromUrl$ should return loadQuotationFromUrl and loadSelectedQuotationDetailFromUrl" name="ProcessCaseEffect loadFromUrl$ should return loadQuotationFromUrl and loadSelectedQuotationDetailFromUrl" time="0.121">
    </testcase>
    <testcase classname="ProcessCaseEffect loadSelectedQuotationDetailFromUrl$ should return setSelectedQuotationDetail" name="ProcessCaseEffect loadSelectedQuotationDetailFromUrl$ should return setSelectedQuotationDetail" time="0.119">
    </testcase>
    <testcase classname="ProcessCaseEffect loadSelectedQuotationDetailFromUrl$ should navigate to not-found if URL is not valid" name="ProcessCaseEffect loadSelectedQuotationDetailFromUrl$ should navigate to not-found if URL is not valid" time="0.095">
    </testcase>
    <testcase classname="ProcessCaseEffect loadQuotationFromUrl$ should return selectQuotation" name="ProcessCaseEffect loadQuotationFromUrl$ should return selectQuotation" time="0.085">
    </testcase>
    <testcase classname="ProcessCaseEffect loadQuotationFromUrl$ should navigate to not-found if URL is not valid" name="ProcessCaseEffect loadQuotationFromUrl$ should navigate to not-found if URL is not valid" time="0.091">
    </testcase>
    <testcase classname="ProcessCaseEffect validate$ should return validateSuccess when REST call is successful" name="ProcessCaseEffect validate$ should return validateSuccess when REST call is successful" time="0.079">
    </testcase>
    <testcase classname="ProcessCaseEffect validate$ should return validateFailure on REST error" name="ProcessCaseEffect validate$ should return validateFailure on REST error" time="0.095">
    </testcase>
    <testcase classname="ProcessCaseEffect addMaterials$ should return addMaterialsSuccess when REST call is successful" name="ProcessCaseEffect addMaterials$ should return addMaterialsSuccess when REST call is successful" time="0.137">
    </testcase>
    <testcase classname="ProcessCaseEffect addMaterials$ should return addMaterialsFailure on REST error" name="ProcessCaseEffect addMaterials$ should return addMaterialsFailure on REST error" time="0.129">
    </testcase>
    <testcase classname="ProcessCaseEffect removeMaterials$ should return removeMaterialsSuccess when REST call is successful" name="ProcessCaseEffect removeMaterials$ should return removeMaterialsSuccess when REST call is successful" time="0.091">
    </testcase>
    <testcase classname="ProcessCaseEffect removeMaterials$ should return removeMaterialsFailure on REST error" name="ProcessCaseEffect removeMaterials$ should return removeMaterialsFailure on REST error" time="0.107">
    </testcase>
    <testcase classname="ProcessCaseEffect updateMaterials$ should return removeMaterialsSuccess when REST call is successful" name="ProcessCaseEffect updateMaterials$ should return removeMaterialsSuccess when REST call is successful" time="0.067">
    </testcase>
    <testcase classname="ProcessCaseEffect updateMaterials$ should return removeMaterialsSuccess when REST call is successful" name="ProcessCaseEffect updateMaterials$ should return removeMaterialsSuccess when REST call is successful" time="0.083">
    </testcase>
    <testcase classname="ProcessCaseEffect updateMaterials$ should return updateQuotationDetailsFailure on REST error" name="ProcessCaseEffect updateMaterials$ should return updateQuotationDetailsFailure on REST error" time="0.074">
    </testcase>
    <testcase classname="ProcessCaseEffect uploadToSap$ should return uploadOfferToSapSuccess when REST call is successful" name="ProcessCaseEffect uploadToSap$ should return uploadOfferToSapSuccess when REST call is successful" time="0.063">
    </testcase>
    <testcase classname="ProcessCaseEffect uploadToSap$ should return uploadOfferToSapSuccess on REST error" name="ProcessCaseEffect uploadToSap$ should return uploadOfferToSapSuccess on REST error" time="0.093">
    </testcase>
    <testcase classname="ProcessCaseEffect mapQueryParamsToIdentifier should return undefined, if mandatory params are missing" name="ProcessCaseEffect mapQueryParamsToIdentifier should return undefined, if mandatory params are missing" time="0.09">
    </testcase>
    <testcase classname="ProcessCaseEffect mapQueryParamsToIdentifier should return QuotationIdentifier" name="ProcessCaseEffect mapQueryParamsToIdentifier should return QuotationIdentifier" time="0.081">
    </testcase>
    <testcase classname="ProcessCaseEffect checkEqualityOfIdentifier should return false, if current value is undefined" name="ProcessCaseEffect checkEqualityOfIdentifier should return false, if current value is undefined" time="0.142">
    </testcase>
    <testcase classname="ProcessCaseEffect checkEqualityOfIdentifier should return false, if one value differs" name="ProcessCaseEffect checkEqualityOfIdentifier should return false, if one value differs" time="0.071">
    </testcase>
    <testcase classname="ProcessCaseEffect checkEqualityOfIdentifier should return true, if all values are the same" name="ProcessCaseEffect checkEqualityOfIdentifier should return true, if all values are the same" time="0.124">
    </testcase>
  </testsuite>
  <testsuite name="AutocompleteInputComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:16" time="13.421" tests="17">
    <testcase classname="AutocompleteInputComponent should create" name="AutocompleteInputComponent should create" time="0.391">
    </testcase>
    <testcase classname="AutocompleteInputComponent ngOnInit should add valueChanges subscription directly" name="AutocompleteInputComponent ngOnInit should add valueChanges subscription directly" time="0.209">
    </testcase>
    <testcase classname="AutocompleteInputComponent ngOnInit should add valueChanges subscription directly bc of empty searchform" name="AutocompleteInputComponent ngOnInit should add valueChanges subscription directly bc of empty searchform" time="0.205">
    </testcase>
    <testcase classname="AutocompleteInputComponent ngOnInit should add valueChanges subscription after DEBOUNCE_TIME_DEFAULT on searchRemote with &gt;1 chars" name="AutocompleteInputComponent ngOnInit should add valueChanges subscription after DEBOUNCE_TIME_DEFAULT on searchRemote with &gt;1 chars" time="0.683">
    </testcase>
    <testcase classname="AutocompleteInputComponent set options should set test options" name="AutocompleteInputComponent set options should set test options" time="0.209">
    </testcase>
    <testcase classname="AutocompleteInputComponent set options should set test options when filter name is customer" name="AutocompleteInputComponent set options should set test options when filter name is customer" time="0.205">
    </testcase>
    <testcase classname="AutocompleteInputComponent set options should set test options with SapQuotation" name="AutocompleteInputComponent set options should set test options with SapQuotation" time="0.256">
    </testcase>
    <testcase classname="AutocompleteInputComponent setFormControlValue should set value" name="AutocompleteInputComponent setFormControlValue should set value" time="0.27">
    </testcase>
    <testcase classname="AutocompleteInputComponent transformFormValue should return string with dash" name="AutocompleteInputComponent transformFormValue should return string with dash" time="0.203">
    </testcase>
    <testcase classname="AutocompleteInputComponent sliceMaterialString should slice material string" name="AutocompleteInputComponent sliceMaterialString should slice material string" time="0.269">
    </testcase>
    <testcase classname="AutocompleteInputComponent onPaste should set input value" name="AutocompleteInputComponent onPaste should set input value" time="0.194">
    </testcase>
    <testcase classname="AutocompleteInputComponent formatMaterialNumber should return formated material" name="AutocompleteInputComponent formatMaterialNumber should return formated material" time="0.158">
    </testcase>
    <testcase classname="AutocompleteInputComponent set isDisabled should set test options" name="AutocompleteInputComponent set isDisabled should set test options" time="0.216">
    </testcase>
    <testcase classname="AutocompleteInputComponent set isDisabled should set test options" name="AutocompleteInputComponent set isDisabled should set test options" time="0.171">
    </testcase>
    <testcase classname="AutocompleteInputComponent selected should emit event" name="AutocompleteInputComponent selected should emit event" time="0.175">
    </testcase>
    <testcase classname="AutocompleteInputComponent clearInput should call unselect" name="AutocompleteInputComponent clearInput should call unselect" time="0.15">
    </testcase>
    <testcase classname="AutocompleteInputComponent trackByFn() should return the loop index to track usersArray" name="AutocompleteInputComponent trackByFn() should return the loop index to track usersArray" time="0.209">
    </testcase>
  </testsuite>
  <testsuite name="ComparableTransactionsComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:16" time="13.394" tests="7">
    <testcase classname="ComparableTransactionsComponent should create" name="ComparableTransactionsComponent should create" time="0.818">
    </testcase>
    <testcase classname="ComparableTransactionsComponent currency input should set tableContext" name="ComparableTransactionsComponent currency input should set tableContext" time="0.486">
    </testcase>
    <testcase classname="ComparableTransactionsComponent columnChange should set column state" name="ComparableTransactionsComponent columnChange should set column state" time="0.517">
    </testcase>
    <testcase classname="ComparableTransactionsComponent onGridReady should set columnState" name="ComparableTransactionsComponent onGridReady should set columnState" time="0.613">
    </testcase>
    <testcase classname="ComparableTransactionsComponent onGridReady should not set columnState" name="ComparableTransactionsComponent onGridReady should not set columnState" time="0.623">
    </testcase>
    <testcase classname="ComparableTransactionsComponent onFirstDataRendered should autoSize customerId with skipHeader" name="ComparableTransactionsComponent onFirstDataRendered should autoSize customerId with skipHeader" time="0.606">
    </testcase>
    <testcase classname="ComparableTransactionsComponent onFirstDataRendered should autoSize without skipHeader" name="ComparableTransactionsComponent onFirstDataRendered should autoSize without skipHeader" time="0.495">
    </testcase>
  </testsuite>
  <testsuite name="CaseViewComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:16" time="13.69" tests="3">
    <testcase classname="CaseViewComponent should create" name="CaseViewComponent should create" time="1.321">
    </testcase>
    <testcase classname="CaseViewComponent ngOnDestroy should unsubscribe fromSubscription" name="CaseViewComponent ngOnDestroy should unsubscribe fromSubscription" time="0.851">
    </testcase>
    <testcase classname="CaseViewComponent openCreateCaseDialog should call openDialog" name="CaseViewComponent openCreateCaseDialog should call openDialog" time="0.787">
    </testcase>
  </testsuite>
  <testsuite name="DetailViewComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:16" time="13.878" tests="3">
    <testcase classname="DetailViewComponent should create" name="DetailViewComponent should create" time="1.264">
    </testcase>
    <testcase classname="DetailViewComponent ngOnInit should set observables" name="DetailViewComponent ngOnInit should set observables" time="0.953">
    </testcase>
    <testcase classname="DetailViewComponent getOffer set offer" name="DetailViewComponent getOffer set offer" time="0.695">
    </testcase>
  </testsuite>
  <testsuite name="AddMaterialDialogComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:16" time="14.352" tests="4">
    <testcase classname="AddMaterialDialogComponent should create" name="AddMaterialDialogComponent should create" time="1.348">
    </testcase>
    <testcase classname="AddMaterialDialogComponent ngOnInit should add subscriptions" name="AddMaterialDialogComponent ngOnInit should add subscriptions" time="0.876">
    </testcase>
    <testcase classname="AddMaterialDialogComponent ngOnDestroy should unsubscribe" name="AddMaterialDialogComponent ngOnDestroy should unsubscribe" time="0.744">
    </testcase>
    <testcase classname="AddMaterialDialogComponent closeDialog should close dialog" name="AddMaterialDialogComponent closeDialog should close dialog" time="0.743">
    </testcase>
  </testsuite>
  <testsuite name="InputTableComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:16" time="14.493" tests="5">
    <testcase classname="InputTableComponent should create" name="InputTableComponent should create" time="1.133">
    </testcase>
    <testcase classname="InputTableComponent onPasteStart should dispatch action with transformed array" name="InputTableComponent onPasteStart should dispatch action with transformed array" time="0.838">
    </testcase>
    <testcase classname="InputTableComponent onPasteStart should dispatch action with transformed array" name="InputTableComponent onPasteStart should dispatch action with transformed array" time="0.76">
    </testcase>
    <testcase classname="InputTableComponent onPasteStart should dispatch action with transformed array" name="InputTableComponent onPasteStart should dispatch action with transformed array" time="0.664">
    </testcase>
    <testcase classname="InputTableComponent onCellClicked should set currentCell" name="InputTableComponent onCellClicked should set currentCell" time="0.608">
    </testcase>
  </testsuite>
  <testsuite name="ProcessCaseViewComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:16" time="14.664" tests="2">
    <testcase classname="ProcessCaseViewComponent should create" name="ProcessCaseViewComponent should create" time="2.063">
    </testcase>
    <testcase classname="ProcessCaseViewComponent should get offer" name="ProcessCaseViewComponent should get offer" time="1.436">
    </testcase>
  </testsuite>
  <testsuite name="InputbarComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:16" time="15.191" tests="14">
    <testcase classname="InputbarComponent should create" name="InputbarComponent should create" time="0.628">
    </testcase>
    <testcase classname="InputbarComponent ngOnInit should set quantityvalid if when quantityFormControl valuechanges" name="InputbarComponent ngOnInit should set quantityvalid if when quantityFormControl valuechanges" time="0.458">
    </testcase>
    <testcase classname="InputbarComponent autocomplete should dispatch autocomplete action" name="InputbarComponent autocomplete should dispatch autocomplete action" time="0.404">
    </testcase>
    <testcase classname="InputbarComponent unselectQuotationOptions should dispatch unselectQuotationOptions action" name="InputbarComponent unselectQuotationOptions should dispatch unselectQuotationOptions action" time="0.437">
    </testcase>
    <testcase classname="InputbarComponent selectAutocompleteOption should dispatch selectAutocompleteOption action" name="InputbarComponent selectAutocompleteOption should dispatch selectAutocompleteOption action" time="0.435">
    </testcase>
    <testcase classname="InputbarComponent materialNumberValid should set materialNumberisValid" name="InputbarComponent materialNumberValid should set materialNumberisValid" time="0.412">
    </testcase>
    <testcase classname="InputbarComponent rowInputValid should set addRowEnabled to true" name="InputbarComponent rowInputValid should set addRowEnabled to true" time="0.378">
    </testcase>
    <testcase classname="InputbarComponent rowInputValid should set addRowEnabled to false" name="InputbarComponent rowInputValid should set addRowEnabled to false" time="0.328">
    </testcase>
    <testcase classname="InputbarComponent quantityValidator should return undefined" name="InputbarComponent quantityValidator should return undefined" time="0.346">
    </testcase>
    <testcase classname="InputbarComponent addRow should dispatch action" name="InputbarComponent addRow should dispatch action" time="0.344">
    </testcase>
    <testcase classname="InputbarComponent materialHasInput should set materialNumberInput and emitHasInput" name="InputbarComponent materialHasInput should set materialNumberInput and emitHasInput" time="0.249">
    </testcase>
    <testcase classname="InputbarComponent numberOnly should return false if not number" name="InputbarComponent numberOnly should return false if not number" time="0.246">
    </testcase>
    <testcase classname="InputbarComponent numberOnly should return false if not number" name="InputbarComponent numberOnly should return false if not number" time="0.237">
    </testcase>
    <testcase classname="InputbarComponent numberOnly should return true if number" name="InputbarComponent numberOnly should return true if number" time="0.216">
    </testcase>
  </testsuite>
  <testsuite name="OfferTableComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:16" time="16.033" tests="5">
    <testcase classname="OfferTableComponent should create" name="OfferTableComponent should create" time="1.651">
    </testcase>
    <testcase classname="OfferTableComponent setQuotation should set quotation" name="OfferTableComponent setQuotation should set quotation" time="1.223">
    </testcase>
    <testcase classname="OfferTableComponent setQuotation should not set quotation when undefined" name="OfferTableComponent setQuotation should not set quotation when undefined" time="1.111">
    </testcase>
    <testcase classname="OfferTableComponent ngOnInit should add subscriptions" name="OfferTableComponent ngOnInit should add subscriptions" time="0.828">
    </testcase>
    <testcase classname="OfferTableComponent ngOnDestory should unsubscribe subscriptions" name="OfferTableComponent ngOnDestory should unsubscribe subscriptions" time="0.738">
    </testcase>
  </testsuite>
  <testsuite name="CreateCaseDialogComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:16" time="16.514" tests="9">
    <testcase classname="CreateCaseDialogComponent should create" name="CreateCaseDialogComponent should create" time="1.167">
    </testcase>
    <testcase classname="CreateCaseDialogComponent autocomplete should dispatch autocomplete action" name="CreateCaseDialogComponent autocomplete should dispatch autocomplete action" time="0.924">
    </testcase>
    <testcase classname="CreateCaseDialogComponent unselectQuotationOptions should dispatch unselectQuotationOptions action" name="CreateCaseDialogComponent unselectQuotationOptions should dispatch unselectQuotationOptions action" time="0.821">
    </testcase>
    <testcase classname="CreateCaseDialogComponent selectAutocompleteOption should dispatch selectAutocompleteOption action" name="CreateCaseDialogComponent selectAutocompleteOption should dispatch selectAutocompleteOption action" time="0.65">
    </testcase>
    <testcase classname="CreateCaseDialogComponent quotationValid should set quotationValid" name="CreateCaseDialogComponent quotationValid should set quotationValid" time="0.533">
    </testcase>
    <testcase classname="CreateCaseDialogComponent openQuotation should set quotationValid" name="CreateCaseDialogComponent openQuotation should set quotationValid" time="0.422">
    </testcase>
    <testcase classname="CreateCaseDialogComponent quotationHasInput should set quotationInput" name="CreateCaseDialogComponent quotationHasInput should set quotationInput" time="0.438">
    </testcase>
    <testcase classname="CreateCaseDialogComponent customerHasInput should set customerInput" name="CreateCaseDialogComponent customerHasInput should set customerInput" time="0.407">
    </testcase>
    <testcase classname="CreateCaseDialogComponent toggle Expanded toggle" name="CreateCaseDialogComponent toggle Expanded toggle" time="0.43">
    </testcase>
  </testsuite>
  <testsuite name="TransactionViewComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:30" time="4.263" tests="1">
    <testcase classname="TransactionViewComponent should create" name="TransactionViewComponent should create" time="1.131">
    </testcase>
  </testsuite>
  <testsuite name="RoleGuard" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:32" time="2.254" tests="4">
    <testcase classname="RoleGuard should be created" name="RoleGuard should be created" time="0.048">
    </testcase>
    <testcase classname="RoleGuard canActivateChild should grant access, if user has base role" name="RoleGuard canActivateChild should grant access, if user has base role" time="0.038">
    </testcase>
    <testcase classname="RoleGuard canActivateChild should not grant access if user is lacking base role" name="RoleGuard canActivateChild should not grant access if user is lacking base role" time="0.044">
    </testcase>
    <testcase classname="RoleGuard canActivateChild should redirect to forbidden page if user is not authorized" name="RoleGuard canActivateChild should redirect to forbidden page if user is not authorized" time="0.035">
    </testcase>
  </testsuite>
  <testsuite name="OfferDrawerComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:31" time="3.532" tests="2">
    <testcase classname="OfferDrawerComponent should create" name="OfferDrawerComponent should create" time="0.616">
    </testcase>
    <testcase classname="OfferDrawerComponent toggle drawer" name="OfferDrawerComponent toggle drawer" time="0.475">
    </testcase>
  </testsuite>
  <testsuite name="AppComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:30" time="4.95" tests="3">
    <testcase classname="AppComponent should create the app" name="AppComponent should create the app" time="0.455">
    </testcase>
    <testcase classname="AppComponent ngOnInit should set observables and dispatch login" name="AppComponent ngOnInit should set observables and dispatch login" time="0.335">
    </testcase>
    <testcase classname="AppComponent userMenuClicked should open dialog" name="AppComponent userMenuClicked should open dialog" time="0.339">
    </testcase>
  </testsuite>
  <testsuite name="Create Case Effects" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:31" time="3.923" tests="11">
    <testcase classname="Create Case Effects autocomplete$ should return autocompleteCustomerSuccess action when REST call is successful" name="Create Case Effects autocomplete$ should return autocompleteCustomerSuccess action when REST call is successful" time="0.19">
    </testcase>
    <testcase classname="Create Case Effects autocomplete$ should return autocompleteQuotationSuccess action when REST call is successful" name="Create Case Effects autocomplete$ should return autocompleteQuotationSuccess action when REST call is successful" time="0.123">
    </testcase>
    <testcase classname="Create Case Effects autocomplete$ should return autocompleteFailure on REST error" name="Create Case Effects autocomplete$ should return autocompleteFailure on REST error" time="0.114">
    </testcase>
    <testcase classname="Create Case Effects validate should return validateSuccess when REST call is successful" name="Create Case Effects validate should return validateSuccess when REST call is successful" time="0.095">
    </testcase>
    <testcase classname="Create Case Effects validate should return validateFailure on REST error" name="Create Case Effects validate should return validateFailure on REST error" time="0.102">
    </testcase>
    <testcase classname="Create Case Effects createCase should return validateSuccess when REST call is successful" name="Create Case Effects createCase should return validateSuccess when REST call is successful" time="0.118">
    </testcase>
    <testcase classname="Create Case Effects createCase should return validateFailure on REST error" name="Create Case Effects createCase should return validateFailure on REST error" time="0.101">
    </testcase>
    <testcase classname="Create Case Effects importQuotation should return importCaseSuccess when REST call is successful" name="Create Case Effects importQuotation should return importCaseSuccess when REST call is successful" time="0.126">
    </testcase>
    <testcase classname="Create Case Effects importQuotation should return importCaseFailure on REST error" name="Create Case Effects importQuotation should return importCaseFailure on REST error" time="0.083">
    </testcase>
    <testcase classname="Create Case Effects getSalesOrgs should return getSalesOrgsSuccess when REST call is successful" name="Create Case Effects getSalesOrgs should return getSalesOrgsSuccess when REST call is successful" time="0.105">
    </testcase>
    <testcase classname="Create Case Effects getSalesOrgs should return getSalesOrgsFailure on REST error" name="Create Case Effects getSalesOrgs should return getSalesOrgsFailure on REST error" time="0.112">
    </testcase>
  </testsuite>
  <testsuite name="FilterPricingComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:31" time="3.498" tests="3">
    <testcase classname="FilterPricingComponent should create" name="FilterPricingComponent should create" time="0.401">
    </testcase>
    <testcase classname="FilterPricingComponent ngOnInit should define observables" name="FilterPricingComponent ngOnInit should define observables" time="0.263">
    </testcase>
    <testcase classname="FilterPricingComponent selectManualPrice should dispatch action" name="FilterPricingComponent selectManualPrice should dispatch action" time="0.224">
    </testcase>
  </testsuite>
  <testsuite name="CustomerViewComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:29" time="5.872" tests="3">
    <testcase classname="CustomerViewComponent should create" name="CustomerViewComponent should create" time="0.741">
    </testcase>
    <testcase classname="CustomerViewComponent ngOnInit should define observables" name="CustomerViewComponent ngOnInit should define observables" time="0.722">
    </testcase>
    <testcase classname="CustomerViewComponent getOffer set offer" name="CustomerViewComponent getOffer set offer" time="0.576">
    </testcase>
  </testsuite>
  <testsuite name="TransparencyGraphComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:33" time="2.528" tests="2">
    <testcase classname="TransparencyGraphComponent should create" name="TransparencyGraphComponent should create" time="0.138">
    </testcase>
    <testcase classname="TransparencyGraphComponent ngOnInit should set options" name="TransparencyGraphComponent ngOnInit should set options" time="0.088">
    </testcase>
  </testsuite>
  <testsuite name="ManualPriceComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:30" time="5.201" tests="16">
    <testcase classname="ManualPriceComponent should create" name="ManualPriceComponent should create" time="0.25">
    </testcase>
    <testcase classname="ManualPriceComponent ngOnInit should create manualPriceFormControl" name="ManualPriceComponent ngOnInit should create manualPriceFormControl" time="0.191">
    </testcase>
    <testcase classname="ManualPriceComponent addSubscriptions should add subscription" name="ManualPriceComponent addSubscriptions should add subscription" time="0.162">
    </testcase>
    <testcase classname="ManualPriceComponent addSubscriptions should trigger subscription" name="ManualPriceComponent addSubscriptions should trigger subscription" time="0.155">
    </testcase>
    <testcase classname="ManualPriceComponent ngOnDestroy should unsubscribe" name="ManualPriceComponent ngOnDestroy should unsubscribe" time="0.186">
    </testcase>
    <testcase classname="ManualPriceComponent ngOnChanges should not set gpi" name="ManualPriceComponent ngOnChanges should not set gpi" time="0.185">
    </testcase>
    <testcase classname="ManualPriceComponent ngOnChanges should  set gpi" name="ManualPriceComponent ngOnChanges should  set gpi" time="0.184">
    </testcase>
    <testcase classname="ManualPriceComponent selectPrice should emit Output EventEmitter" name="ManualPriceComponent selectPrice should emit Output EventEmitter" time="0.172">
    </testcase>
    <testcase classname="ManualPriceComponent set isLoading should set isLoading" name="ManualPriceComponent set isLoading should set isLoading" time="0.177">
    </testcase>
    <testcase classname="ManualPriceComponent set isLoading should set isLoading" name="ManualPriceComponent set isLoading should set isLoading" time="0.218">
    </testcase>
    <testcase classname="ManualPriceComponent onKeyPress should call HelperService" name="ManualPriceComponent onKeyPress should call HelperService" time="0.172">
    </testcase>
    <testcase classname="ManualPriceComponent onPaste should set price" name="ManualPriceComponent onPaste should set price" time="0.166">
    </testcase>
    <testcase classname="ManualPriceComponent setGpi should set gpi" name="ManualPriceComponent setGpi should set gpi" time="0.126">
    </testcase>
    <testcase classname="ManualPriceComponent setPrice should set price" name="ManualPriceComponent setPrice should set price" time="0.135">
    </testcase>
    <testcase classname="ManualPriceComponent setPrice should set price to undefined" name="ManualPriceComponent setPrice should set price to undefined" time="0.14">
    </testcase>
    <testcase classname="ManualPriceComponent openEditing should enable editMode" name="ManualPriceComponent openEditing should enable editMode" time="0.12">
    </testcase>
  </testsuite>
  <testsuite name="QuotationDetailsTableComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:31" time="4.894" tests="7">
    <testcase classname="QuotationDetailsTableComponent should create" name="QuotationDetailsTableComponent should create" time="0.41">
    </testcase>
    <testcase classname="QuotationDetailsTableComponent ngOnInit should set columnDefs" name="QuotationDetailsTableComponent ngOnInit should set columnDefs" time="0.332">
    </testcase>
    <testcase classname="QuotationDetailsTableComponent set quotation should set rowData and tableContext.currency" name="QuotationDetailsTableComponent set quotation should set rowData and tableContext.currency" time="0.354">
    </testcase>
    <testcase classname="QuotationDetailsTableComponent columnChange should set column state" name="QuotationDetailsTableComponent columnChange should set column state" time="0.348">
    </testcase>
    <testcase classname="QuotationDetailsTableComponent onGridReady should set columnState" name="QuotationDetailsTableComponent onGridReady should set columnState" time="0.227">
    </testcase>
    <testcase classname="QuotationDetailsTableComponent onGridReady should not set columnState" name="QuotationDetailsTableComponent onGridReady should not set columnState" time="0.268">
    </testcase>
    <testcase classname="QuotationDetailsTableComponent onFirstDataRenderer should call autoSizeAllColumns" name="QuotationDetailsTableComponent onFirstDataRenderer should call autoSizeAllColumns" time="0.234">
    </testcase>
  </testsuite>
  <testsuite name="OfferViewComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:30" time="6.173" tests="1">
    <testcase classname="OfferViewComponent should create" name="OfferViewComponent should create" time="1.876">
    </testcase>
  </testsuite>
  <testsuite name="ValidationService" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:35" time="2.329" tests="1">
    <testcase classname="ValidationService validate should call" name="ValidationService validate should call" time="0.081">
    </testcase>
  </testsuite>
  <testsuite name="AddToOfferButtonComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:35" time="2.872" tests="5">
    <testcase classname="AddToOfferButtonComponent should create" name="AddToOfferButtonComponent should create" time="0.11">
    </testcase>
    <testcase classname="AddToOfferButtonComponent agInit should set params and add listeners" name="AddToOfferButtonComponent agInit should set params and add listeners" time="0.09">
    </testcase>
    <testcase classname="AddToOfferButtonComponent onGridReady should set selections" name="AddToOfferButtonComponent onGridReady should set selections" time="0.079">
    </testcase>
    <testcase classname="AddToOfferButtonComponent onSelectionChange should set selections" name="AddToOfferButtonComponent onSelectionChange should set selections" time="0.07">
    </testcase>
    <testcase classname="AddToOfferButtonComponent addToOffer should addToOffer" name="AddToOfferButtonComponent addToOffer should addToOffer" time="0.07">
    </testcase>
  </testsuite>
  <testsuite name="RoleDescComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:35" time="2.236" tests="3">
    <testcase classname="RoleDescComponent should create" name="RoleDescComponent should create" time="0.061">
    </testcase>
    <testcase classname="RoleDescComponent key setter should set key" name="RoleDescComponent key setter should set key" time="0.042">
    </testcase>
    <testcase classname="RoleDescComponent trackByFn should return index" name="RoleDescComponent trackByFn should return index" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="QuotationDetailsStatusComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:35" time="2.894" tests="4">
    <testcase classname="QuotationDetailsStatusComponent should create" name="QuotationDetailsStatusComponent should create" time="0.169">
    </testcase>
    <testcase classname="QuotationDetailsStatusComponent ngOnInit should set showMargins to true" name="QuotationDetailsStatusComponent ngOnInit should set showMargins to true" time="0.119">
    </testcase>
    <testcase classname="QuotationDetailsStatusComponent onRowDataChanged should set margin and Value if data exists" name="QuotationDetailsStatusComponent onRowDataChanged should set margin and Value if data exists" time="0.127">
    </testcase>
    <testcase classname="QuotationDetailsStatusComponent onSelectionChange should set selections" name="QuotationDetailsStatusComponent onSelectionChange should set selections" time="0.102">
    </testcase>
  </testsuite>
  <testsuite name="AgGridStateService" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:35" time="2.187" tests="5">
    <testcase classname="AgGridStateService should be created" name="AgGridStateService should be created" time="0.03">
    </testcase>
    <testcase classname="AgGridStateService getColumnState should return null if theres no entry in localstorage" name="AgGridStateService getColumnState should return null if theres no entry in localstorage" time="0.015">
    </testcase>
    <testcase classname="AgGridStateService getColumnState should return columns for given key" name="AgGridStateService getColumnState should return columns for given key" time="0.016">
    </testcase>
    <testcase classname="AgGridStateService setColumnsState should set the given column state in localstorage" name="AgGridStateService setColumnsState should set the given column state in localstorage" time="0.015">
    </testcase>
    <testcase classname="AgGridStateService setColumnsState should extend localstorage if key is already present" name="AgGridStateService setColumnsState should extend localstorage if key is already present" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="FlatButtonsComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:35" time="2.926" tests="6">
    <testcase classname="FlatButtonsComponent should create" name="FlatButtonsComponent should create" time="0.158">
    </testcase>
    <testcase classname="FlatButtonsComponent agInit should set params" name="FlatButtonsComponent agInit should set params" time="0.094">
    </testcase>
    <testcase classname="FlatButtonsComponent onGridReady should set selections" name="FlatButtonsComponent onGridReady should set selections" time="0.092">
    </testcase>
    <testcase classname="FlatButtonsComponent onSelectionChange should set selections" name="FlatButtonsComponent onSelectionChange should set selections" time="0.1">
    </testcase>
    <testcase classname="FlatButtonsComponent showAddDialog should showAddDialog" name="FlatButtonsComponent showAddDialog should showAddDialog" time="0.081">
    </testcase>
    <testcase classname="FlatButtonsComponent removeMaterials should call remove actions" name="FlatButtonsComponent removeMaterials should call remove actions" time="0.089">
    </testcase>
  </testsuite>
  <testsuite name="View Cases Effects" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:35" time="2.883" tests="5">
    <testcase classname="View Cases Effects getCases$ should dispatch loadCases" name="View Cases Effects getCases$ should dispatch loadCases" time="0.172">
    </testcase>
    <testcase classname="View Cases Effects loadCases should return loadCases Success" name="View Cases Effects loadCases should return loadCases Success" time="0.109">
    </testcase>
    <testcase classname="View Cases Effects loadCases should return loadCasesFailure" name="View Cases Effects loadCases should return loadCasesFailure" time="0.09">
    </testcase>
    <testcase classname="View Cases Effects deleteCase$ should return deleteCaseSuccess" name="View Cases Effects deleteCase$ should return deleteCaseSuccess" time="0.077">
    </testcase>
    <testcase classname="View Cases Effects deleteCase$ should return deleteCaseFailure" name="View Cases Effects deleteCase$ should return deleteCaseFailure" time="0.087">
    </testcase>
  </testsuite>
  <testsuite name="GqPriceComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:35" time="3.357" tests="8">
    <testcase classname="GqPriceComponent should create" name="GqPriceComponent should create" time="0.212">
    </testcase>
    <testcase classname="GqPriceComponent ngOnInit should define observables" name="GqPriceComponent ngOnInit should define observables" time="0.138">
    </testcase>
    <testcase classname="GqPriceComponent ngOnInit should not set gpi" name="GqPriceComponent ngOnInit should not set gpi" time="0.114">
    </testcase>
    <testcase classname="GqPriceComponent set isLoading should set isLoading" name="GqPriceComponent set isLoading should set isLoading" time="0.128">
    </testcase>
    <testcase classname="GqPriceComponent set isLoading should set isLoading" name="GqPriceComponent set isLoading should set isLoading" time="0.135">
    </testcase>
    <testcase classname="GqPriceComponent selectPrice should emit Output EventEmitter with GQ price" name="GqPriceComponent selectPrice should emit Output EventEmitter with GQ price" time="0.108">
    </testcase>
    <testcase classname="GqPriceComponent selectPrice should emit Output EventEmitter with strategic price" name="GqPriceComponent selectPrice should emit Output EventEmitter with strategic price" time="0.106">
    </testcase>
    <testcase classname="GqPriceComponent navigateClick should navigate to TransactionViewPath" name="GqPriceComponent navigateClick should navigate to TransactionViewPath" time="0.104">
    </testcase>
  </testsuite>
  <testsuite name="SelectSalesOrgComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:35" time="3.042" tests="3">
    <testcase classname="SelectSalesOrgComponent should create" name="SelectSalesOrgComponent should create" time="0.354">
    </testcase>
    <testcase classname="SelectSalesOrgComponent selectionChange should dispatch action" name="SelectSalesOrgComponent selectionChange should dispatch action" time="0.194">
    </testcase>
    <testcase classname="SelectSalesOrgComponent trackByFn() should return the loop index to track usersArray" name="SelectSalesOrgComponent trackByFn() should return the loop index to track usersArray" time="0.183">
    </testcase>
  </testsuite>
  <testsuite name="UploadToSapButtonComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:36" time="2.384" tests="2">
    <testcase classname="UploadToSapButtonComponent should create" name="UploadToSapButtonComponent should create" time="0.116">
    </testcase>
    <testcase classname="UploadToSapButtonComponent uploadToSAP should upload to SAP" name="UploadToSapButtonComponent uploadToSAP should upload to SAP" time="0.082">
    </testcase>
  </testsuite>
  <testsuite name="EditingPriceComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:36" time="2.778" tests="7">
    <testcase classname="EditingPriceComponent should create" name="EditingPriceComponent should create" time="0.158">
    </testcase>
    <testcase classname="EditingPriceComponent agInit should set params" name="EditingPriceComponent agInit should set params" time="0.107">
    </testcase>
    <testcase classname="EditingPriceComponent ngAfterViewChecked should focus inputElement" name="EditingPriceComponent ngAfterViewChecked should focus inputElement" time="0.098">
    </testcase>
    <testcase classname="EditingPriceComponent closeEditing should stopEditing" name="EditingPriceComponent closeEditing should stopEditing" time="0.089">
    </testcase>
    <testcase classname="EditingPriceComponent getValue should return value" name="EditingPriceComponent getValue should return value" time="0.09">
    </testcase>
    <testcase classname="EditingPriceComponent onKeyPress should call HelperService" name="EditingPriceComponent onKeyPress should call HelperService" time="0.089">
    </testcase>
    <testcase classname="EditingPriceComponent onPaste should set price" name="EditingPriceComponent onPaste should set price" time="0.083">
    </testcase>
  </testsuite>
  <testsuite name="Create Case Reducer" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:38" time="1.699" tests="23">
    <testcase classname="Create Case Reducer autocomplete Actions autocomplete should set autocomplete loading" name="Create Case Reducer autocomplete Actions autocomplete should set autocomplete loading" time="0.006">
    </testcase>
    <testcase classname="Create Case Reducer autocomplete Actions autocompleteSuccess should merge options" name="Create Case Reducer autocomplete Actions autocompleteSuccess should merge options" time="0.002">
    </testcase>
    <testcase classname="Create Case Reducer autocomplete Actions autocompleteSuccess should transform material numbers" name="Create Case Reducer autocomplete Actions autocompleteSuccess should transform material numbers" time="0.001">
    </testcase>
    <testcase classname="Create Case Reducer autocomplete Actions autocompleteFailure should not manipulate state" name="Create Case Reducer autocomplete Actions autocompleteFailure should not manipulate state" time="0">
    </testcase>
    <testcase classname="Create Case Reducer autocomplete Actions selectAutocompleteOptions should set customer option selected true" name="Create Case Reducer autocomplete Actions selectAutocompleteOptions should set customer option selected true" time="0.001">
    </testcase>
    <testcase classname="Create Case Reducer autocomplete Actions selectAutocompleteOptions should set material option selected true" name="Create Case Reducer autocomplete Actions selectAutocompleteOptions should set material option selected true" time="0.001">
    </testcase>
    <testcase classname="Create Case Reducer autocomplete Actions unselectAutocompleteOptions should unselect customer options" name="Create Case Reducer autocomplete Actions unselectAutocompleteOptions should unselect customer options" time="0.001">
    </testcase>
    <testcase classname="Create Case Reducer autocomplete Actions unselectAutocompleteOptions should unselect material options" name="Create Case Reducer autocomplete Actions unselectAutocompleteOptions should unselect material options" time="0.001">
    </testcase>
    <testcase classname="Create Case Reducer rowData Actions addRowDataItem should addItem to Row Data" name="Create Case Reducer rowData Actions addRowDataItem should addItem to Row Data" time="0.002">
    </testcase>
    <testcase classname="Create Case Reducer rowData Actions pasteRowDataItems should paste items in table" name="Create Case Reducer rowData Actions pasteRowDataItems should paste items in table" time="0.001">
    </testcase>
    <testcase classname="Create Case Reducer rowData Actions clearRowData should clear Row Data" name="Create Case Reducer rowData Actions clearRowData should clear Row Data" time="0.001">
    </testcase>
    <testcase classname="Create Case Reducer rowData Actions deleteRowDataItem should delete Item from Rowdata" name="Create Case Reducer rowData Actions deleteRowDataItem should delete Item from Rowdata" time="0.001">
    </testcase>
    <testcase classname="Create Case Reducer validate Actions validateSuccess should validate rowData" name="Create Case Reducer validate Actions validateSuccess should validate rowData" time="0.001">
    </testcase>
    <testcase classname="Create Case Reducer validate Actions validateFailure should not manipulate state" name="Create Case Reducer validate Actions validateFailure should not manipulate state" time="0.001">
    </testcase>
    <testcase classname="Create Case Reducer createCase Actions createCase should set createCaseLoading" name="Create Case Reducer createCase Actions createCase should set createCaseLoading" time="0.001">
    </testcase>
    <testcase classname="Create Case Reducer createCase Actions createCaseSuccess should set createCaseLoading to false" name="Create Case Reducer createCase Actions createCaseSuccess should set createCaseLoading to false" time="0.001">
    </testcase>
    <testcase classname="Create Case Reducer createCase Actions createCaseFailure should set createCaseLoading to false" name="Create Case Reducer createCase Actions createCaseFailure should set createCaseLoading to false" time="0.001">
    </testcase>
    <testcase classname="Create Case Reducer importCase Actions importCase should set createCase loading" name="Create Case Reducer importCase Actions importCase should set createCase loading" time="0">
    </testcase>
    <testcase classname="Create Case Reducer importCase Actions importCaseSuccess should set createCase loading false" name="Create Case Reducer importCase Actions importCaseSuccess should set createCase loading false" time="0.001">
    </testcase>
    <testcase classname="Create Case Reducer importCase Actions importCaseFailure should set createCase loading false and error Message" name="Create Case Reducer importCase Actions importCaseFailure should set createCase loading false and error Message" time="0.002">
    </testcase>
    <testcase classname="Create Case Reducer getSalesOrg Actions getSalesOrgsSuccess should set salesOrgs" name="Create Case Reducer getSalesOrg Actions getSalesOrgsSuccess should set salesOrgs" time="0.001">
    </testcase>
    <testcase classname="Create Case Reducer getSalesOrg Actions getSalesOrgsFailure should set errorMessage" name="Create Case Reducer getSalesOrg Actions getSalesOrgsFailure should set errorMessage" time="0">
    </testcase>
    <testcase classname="Create Case Reducer Reducer function should return searchReducer" name="Create Case Reducer Reducer function should return searchReducer" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="RoleModalComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:37" time="2.446" tests="3">
    <testcase classname="RoleModalComponent should create" name="RoleModalComponent should create" time="0.141">
    </testcase>
    <testcase classname="RoleModalComponent closeDialog should close dialog" name="RoleModalComponent closeDialog should close dialog" time="0.099">
    </testcase>
    <testcase classname="RoleModalComponent trackByFn should return index" name="RoleModalComponent trackByFn should return index" time="0.098">
    </testcase>
  </testsuite>
  <testsuite name="ChartConfigService" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:38" time="2.503" tests="18">
    <testcase classname="ChartConfigService getLineForToolTipFormatter should return Line" name="ChartConfigService getLineForToolTipFormatter should return Line" time="0.033">
    </testcase>
    <testcase classname="ChartConfigService getRegressionForToolTipFormatter should return regression line" name="ChartConfigService getRegressionForToolTipFormatter should return regression line" time="0.015">
    </testcase>
    <testcase classname="ChartConfigService getToolTipConfig should return tooltipconfig" name="ChartConfigService getToolTipConfig should return tooltipconfig" time="0.014">
    </testcase>
    <testcase classname="ChartConfigService getValueForToolTipItem should return price" name="ChartConfigService getValueForToolTipItem should return price" time="0.02">
    </testcase>
    <testcase classname="ChartConfigService getValueForToolTipItem should return year" name="ChartConfigService getValueForToolTipItem should return year" time="0.017">
    </testcase>
    <testcase classname="ChartConfigService getValueForToolTipItem should return quantity" name="ChartConfigService getValueForToolTipItem should return quantity" time="0.014">
    </testcase>
    <testcase classname="ChartConfigService getValueForToolTipItem should return profitMargin" name="ChartConfigService getValueForToolTipItem should return profitMargin" time="0.011">
    </testcase>
    <testcase classname="ChartConfigService tooltipFormatter should create tooltip" name="ChartConfigService tooltipFormatter should create tooltip" time="0.011">
    </testcase>
    <testcase classname="ChartConfigService calculateAxisMax should calculate axisMax for X" name="ChartConfigService calculateAxisMax should calculate axisMax for X" time="0.01">
    </testcase>
    <testcase classname="ChartConfigService getXAxisConfig should return X_AXIS_CONFIG" name="ChartConfigService getXAxisConfig should return X_AXIS_CONFIG" time="0.019">
    </testcase>
    <testcase classname="ChartConfigService getSeriesConfig should return series config" name="ChartConfigService getSeriesConfig should return series config" time="0.011">
    </testcase>
    <testcase classname="ChartConfigService buildDataPoints should build dataPoints from transactions" name="ChartConfigService buildDataPoints should build dataPoints from transactions" time="0.013">
    </testcase>
    <testcase classname="ChartConfigService getDataPointStyle should get color for INVOICE" name="ChartConfigService getDataPointStyle should get color for INVOICE" time="0.02">
    </testcase>
    <testcase classname="ChartConfigService getDataPointStyle should get color for LOST_QUOTE" name="ChartConfigService getDataPointStyle should get color for LOST_QUOTE" time="0.011">
    </testcase>
    <testcase classname="ChartConfigService getDataPointStyle should get color for ORDER" name="ChartConfigService getDataPointStyle should get color for ORDER" time="0.01">
    </testcase>
    <testcase classname="ChartConfigService getDataPointName should return Name for INVOICE" name="ChartConfigService getDataPointName should return Name for INVOICE" time="0.014">
    </testcase>
    <testcase classname="ChartConfigService getDataPointName should return Name for LOST_QUOTE" name="ChartConfigService getDataPointName should return Name for LOST_QUOTE" time="0.015">
    </testcase>
    <testcase classname="ChartConfigService getDataPointName should return Name for ORDER" name="ChartConfigService getDataPointName should return Name for ORDER" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="CaseHeaderComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:37" time="2.658" tests="3">
    <testcase classname="CaseHeaderComponent should create" name="CaseHeaderComponent should create" time="0.229">
    </testcase>
    <testcase classname="CaseHeaderComponent drawerToggle toggle drawer" name="CaseHeaderComponent drawerToggle toggle drawer" time="0.169">
    </testcase>
    <testcase classname="CaseHeaderComponent backClicked backClicked" name="CaseHeaderComponent backClicked backClicked" time="0.141">
    </testcase>
  </testsuite>
  <testsuite name="ActionCellComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:38" time="2.21" tests="3">
    <testcase classname="ActionCellComponent should create" name="ActionCellComponent should create" time="0.067">
    </testcase>
    <testcase classname="ActionCellComponent agInit should set params" name="ActionCellComponent agInit should set params" time="0.043">
    </testcase>
    <testcase classname="ActionCellComponent deleteItem should dispatch deleteAddMaterialRowDataItem action" name="ActionCellComponent deleteItem should dispatch deleteAddMaterialRowDataItem action" time="0.045">
    </testcase>
  </testsuite>
  <testsuite name="DeleteCaseButtonComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:38" time="2.575" tests="4">
    <testcase classname="DeleteCaseButtonComponent should create" name="DeleteCaseButtonComponent should create" time="0.148">
    </testcase>
    <testcase classname="DeleteCaseButtonComponent agInit should set params and add listeners" name="DeleteCaseButtonComponent agInit should set params and add listeners" time="0.093">
    </testcase>
    <testcase classname="DeleteCaseButtonComponent onSelectionChange should set selections" name="DeleteCaseButtonComponent onSelectionChange should set selections" time="0.08">
    </testcase>
    <testcase classname="DeleteCaseButtonComponent deleteCase should open dialog" name="DeleteCaseButtonComponent deleteCase should open dialog" time="0.078">
    </testcase>
  </testsuite>
  <testsuite name="ExportToExcelButtonComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:38" time="2.607" tests="8">
    <testcase classname="ExportToExcelButtonComponent should create" name="ExportToExcelButtonComponent should create" time="0.099">
    </testcase>
    <testcase classname="ExportToExcelButtonComponent agInit should set params" name="ExportToExcelButtonComponent agInit should set params" time="0.075">
    </testcase>
    <testcase classname="ExportToExcelButtonComponent exportToExcel should export to Excel" name="ExportToExcelButtonComponent exportToExcel should export to Excel" time="0.072">
    </testcase>
    <testcase classname="ExportToExcelButtonComponent proccessHeaderCallBack should return headerName" name="ExportToExcelButtonComponent proccessHeaderCallBack should return headerName" time="0.07">
    </testcase>
    <testcase classname="ExportToExcelButtonComponent proccessHeaderCallBack should return headerName and currency" name="ExportToExcelButtonComponent proccessHeaderCallBack should return headerName and currency" time="0.067">
    </testcase>
    <testcase classname="ExportToExcelButtonComponent processCellCallback should return cell value" name="ExportToExcelButtonComponent processCellCallback should return cell value" time="0.062">
    </testcase>
    <testcase classname="ExportToExcelButtonComponent processCellCallback should return apply valueFormatter" name="ExportToExcelButtonComponent processCellCallback should return apply valueFormatter" time="0.056">
    </testcase>
    <testcase classname="ExportToExcelButtonComponent applyExcelCellValueFormatter should return valueFormatter" name="ExportToExcelButtonComponent applyExcelCellValueFormatter should return valueFormatter" time="0.055">
    </testcase>
  </testsuite>
  <testsuite name="ResetAllButtonComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:38" time="2.391" tests="2">
    <testcase classname="ResetAllButtonComponent should create" name="ResetAllButtonComponent should create" time="0.102">
    </testcase>
    <testcase classname="ResetAllButtonComponent resetAll should dispatch action" name="ResetAllButtonComponent resetAll should dispatch action" time="0.077">
    </testcase>
  </testsuite>
  <testsuite name="CreateCaseButtonComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:38" time="2.456" tests="2">
    <testcase classname="CreateCaseButtonComponent should create" name="CreateCaseButtonComponent should create" time="0.092">
    </testcase>
    <testcase classname="CreateCaseButtonComponent createCase should dispatch create case action" name="CreateCaseButtonComponent createCase should dispatch create case action" time="0.071">
    </testcase>
  </testsuite>
  <testsuite name="FilterPricingCardComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:38" time="2.48" tests="2">
    <testcase classname="FilterPricingCardComponent should create" name="FilterPricingCardComponent should create" time="0.181">
    </testcase>
    <testcase classname="FilterPricingCardComponent should emit selectManualPrice should selectPrice" name="FilterPricingCardComponent should emit selectManualPrice should selectPrice" time="0.127">
    </testcase>
  </testsuite>
  <testsuite name="RemoveFromOfferComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:38" time="2.606" tests="5">
    <testcase classname="RemoveFromOfferComponent should create" name="RemoveFromOfferComponent should create" time="0.107">
    </testcase>
    <testcase classname="RemoveFromOfferComponent agInit should set params and add listeners" name="RemoveFromOfferComponent agInit should set params and add listeners" time="0.091">
    </testcase>
    <testcase classname="RemoveFromOfferComponent onGridReady should set selections" name="RemoveFromOfferComponent onGridReady should set selections" time="0.057">
    </testcase>
    <testcase classname="RemoveFromOfferComponent onSelectionChange should set selections" name="RemoveFromOfferComponent onSelectionChange should set selections" time="0.058">
    </testcase>
    <testcase classname="RemoveFromOfferComponent removeFromOffer should removeFromOffer" name="RemoveFromOfferComponent removeFromOffer should removeFromOffer" time="0.056">
    </testcase>
  </testsuite>
  <testsuite name="InfoIconComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:39" time="2.535" tests="3">
    <testcase classname="InfoIconComponent should create" name="InfoIconComponent should create" time="0.119">
    </testcase>
    <testcase classname="InfoIconComponent iconEnter open menu " name="InfoIconComponent iconEnter open menu " time="0.077">
    </testcase>
    <testcase classname="InfoIconComponent iconLeave iconLeave" name="InfoIconComponent iconLeave iconLeave" time="0.085">
    </testcase>
  </testsuite>
  <testsuite name="Quotation Reducer" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:40" time="1.819" tests="28">
    <testcase classname="Quotation Reducer customer customerDetails should set customerDetails loading" name="Quotation Reducer customer customerDetails should set customerDetails loading" time="0.001">
    </testcase>
    <testcase classname="Quotation Reducer customer customerDetailsSuccess should set customer details" name="Quotation Reducer customer customerDetailsSuccess should set customer details" time="0">
    </testcase>
    <testcase classname="Quotation Reducer customer customerDetailsFailure should not manipulate state" name="Quotation Reducer customer customerDetailsFailure should not manipulate state" time="0.001">
    </testcase>
    <testcase classname="Quotation Reducer quotation selectQuotation should set selectQuotation" name="Quotation Reducer quotation selectQuotation should set selectQuotation" time="0.001">
    </testcase>
    <testcase classname="Quotation Reducer quotation quotationDetails should set quotationDetails loading" name="Quotation Reducer quotation quotationDetails should set quotationDetails loading" time="0.001">
    </testcase>
    <testcase classname="Quotation Reducer quotation quotationDetailsSuccess should set quotation details" name="Quotation Reducer quotation quotationDetailsSuccess should set quotation details" time="0.001">
    </testcase>
    <testcase classname="Quotation Reducer quotation quotationDetailsFailure should not manipulate state" name="Quotation Reducer quotation quotationDetailsFailure should not manipulate state" time="0.001">
    </testcase>
    <testcase classname="Quotation Reducer offer updateQuotationDetailsOffer should add a quotationDetail to Offer" name="Quotation Reducer offer updateQuotationDetailsOffer should add a quotationDetail to Offer" time="0">
    </testcase>
    <testcase classname="Quotation Reducer offer updateQuotationDetailsSuccess  should update quotationDetails" name="Quotation Reducer offer updateQuotationDetailsSuccess  should update quotationDetails" time="0">
    </testcase>
    <testcase classname="Quotation Reducer offer updateQuotationDetailsFailure should not manipulate state" name="Quotation Reducer offer updateQuotationDetailsFailure should not manipulate state" time="0">
    </testcase>
    <testcase classname="Quotation Reducer Adding Materials addMaterials should set dialog Shown to true" name="Quotation Reducer Adding Materials addMaterials should set dialog Shown to true" time="0.001">
    </testcase>
    <testcase classname="Quotation Reducer Adding Materials addMaterialsSuccess should set dialog Shown to true" name="Quotation Reducer Adding Materials addMaterialsSuccess should set dialog Shown to true" time="0.001">
    </testcase>
    <testcase classname="Quotation Reducer Adding Materials addMaterialsFailure should not manipulate state" name="Quotation Reducer Adding Materials addMaterialsFailure should not manipulate state" time="0.001">
    </testcase>
    <testcase classname="Quotation Reducer Adding Materials addMaterialRowDataItem should add Material RowDataItem" name="Quotation Reducer Adding Materials addMaterialRowDataItem should add Material RowDataItem" time="0.001">
    </testcase>
    <testcase classname="Quotation Reducer Adding Materials pasteRowDataItemsToAddMaterial should paste RowDataItems to AddMaterial" name="Quotation Reducer Adding Materials pasteRowDataItemsToAddMaterial should paste RowDataItems to AddMaterial" time="0.001">
    </testcase>
    <testcase classname="Quotation Reducer Adding Materials deleteAddMaterialRowDataItem should delete AddMaterialRowDataItem" name="Quotation Reducer Adding Materials deleteAddMaterialRowDataItem should delete AddMaterialRowDataItem" time="0.001">
    </testcase>
    <testcase classname="Quotation Reducer Adding Materials validateAddMaterialsSuccess should validate AddMaterials Successful" name="Quotation Reducer Adding Materials validateAddMaterialsSuccess should validate AddMaterials Successful" time="0.001">
    </testcase>
    <testcase classname="Quotation Reducer Adding Materials validateAddMaterialsFailure should failed validation" name="Quotation Reducer Adding Materials validateAddMaterialsFailure should failed validation" time="0.002">
    </testcase>
    <testcase classname="Quotation Reducer Adding Materials addToRemoveMaterials should remove material" name="Quotation Reducer Adding Materials addToRemoveMaterials should remove material" time="0">
    </testcase>
    <testcase classname="Quotation Reducer Adding Materials removeMaterials should set quotationLoading to true" name="Quotation Reducer Adding Materials removeMaterials should set quotationLoading to true" time="0">
    </testcase>
    <testcase classname="Quotation Reducer Adding Materials removeMaterialsSuccess should remove material" name="Quotation Reducer Adding Materials removeMaterialsSuccess should remove material" time="0.001">
    </testcase>
    <testcase classname="Quotation Reducer Adding Materials removeMaterialsFailure should remove material" name="Quotation Reducer Adding Materials removeMaterialsFailure should remove material" time="0.001">
    </testcase>
    <testcase classname="Quotation Reducer clearRowData should clearRowData" name="Quotation Reducer clearRowData should clearRowData" time="0.001">
    </testcase>
    <testcase classname="Quotation Reducer setSelectedQuotationDetail should set selectedQuotationDetail" name="Quotation Reducer setSelectedQuotationDetail should set selectedQuotationDetail" time="0.001">
    </testcase>
    <testcase classname="Quotation Reducer sapUpload uploadOfferToSap should set loading true" name="Quotation Reducer sapUpload uploadOfferToSap should set loading true" time="0.001">
    </testcase>
    <testcase classname="Quotation Reducer sapUpload uploadOfferToSapSuccess should set loading false" name="Quotation Reducer sapUpload uploadOfferToSapSuccess should set loading false" time="0.001">
    </testcase>
    <testcase classname="Quotation Reducer sapUpload uploadOfferToSapFailure should set loading false" name="Quotation Reducer sapUpload uploadOfferToSapFailure should set loading false" time="0.001">
    </testcase>
    <testcase classname="Quotation Reducer Reducer function should return searchReducer" name="Quotation Reducer Reducer function should return searchReducer" time="0">
    </testcase>
  </testsuite>
  <testsuite name="QuotationDetailsService" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:40" time="2.528" tests="5">
    <testcase classname="QuotationDetailsService should be created" name="QuotationDetailsService should be created" time="0.029">
    </testcase>
    <testcase classname="QuotationDetailsService addMaterial should call" name="QuotationDetailsService addMaterial should call" time="0.026">
    </testcase>
    <testcase classname="QuotationDetailsService removeMaterial should call " name="QuotationDetailsService removeMaterial should call " time="0.019">
    </testcase>
    <testcase classname="QuotationDetailsService updateMaterial should call" name="QuotationDetailsService updateMaterial should call" time="0.019">
    </testcase>
    <testcase classname="QuotationDetailsService getTransactions should call" name="QuotationDetailsService getTransactions should call" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="HelperServiceService" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:40" time="1.952" tests="15">
    <testcase classname="HelperServiceService getCurrentYear get year" name="HelperServiceService getCurrentYear get year" time="0.001">
    </testcase>
    <testcase classname="HelperServiceService getLastYear get year" name="HelperServiceService getLastYear get year" time="0.001">
    </testcase>
    <testcase classname="HelperServiceService transformNumber should transform Number with digits" name="HelperServiceService transformNumber should transform Number with digits" time="0.012">
    </testcase>
    <testcase classname="HelperServiceService transformNumber should transform Number without digits" name="HelperServiceService transformNumber should transform Number without digits" time="0.001">
    </testcase>
    <testcase classname="HelperServiceService transformNumberCurrency should transform NumberCurrency" name="HelperServiceService transformNumberCurrency should transform NumberCurrency" time="0.001">
    </testcase>
    <testcase classname="HelperServiceService transformNumberCurrency should return undefined" name="HelperServiceService transformNumberCurrency should return undefined" time="0">
    </testcase>
    <testcase classname="HelperServiceService transformMarginDetails should transformMarginDetails" name="HelperServiceService transformMarginDetails should transformMarginDetails" time="0.001">
    </testcase>
    <testcase classname="HelperServiceService initStatusBar should return StatusBarConfig for createCase" name="HelperServiceService initStatusBar should return StatusBarConfig for createCase" time="0.001">
    </testcase>
    <testcase classname="HelperServiceService initStatusBar should return StatusBarConfig for processCase" name="HelperServiceService initStatusBar should return StatusBarConfig for processCase" time="0.001">
    </testcase>
    <testcase classname="HelperServiceService initColDef should return ColDef for createCase" name="HelperServiceService initColDef should return ColDef for createCase" time="0.001">
    </testcase>
    <testcase classname="HelperServiceService initColDef should return ColDef for processCase" name="HelperServiceService initColDef should return ColDef for processCase" time="0.001">
    </testcase>
    <testcase classname="HelperServiceService validateNumberInputKeyPress should prevent Default" name="HelperServiceService validateNumberInputKeyPress should prevent Default" time="0.001">
    </testcase>
    <testcase classname="HelperServiceService validateNumberInputKeyPress should prevent Default" name="HelperServiceService validateNumberInputKeyPress should prevent Default" time="0">
    </testcase>
    <testcase classname="HelperServiceService validateNumberInputKeyPress should not prevent Default" name="HelperServiceService validateNumberInputKeyPress should not prevent Default" time="0.001">
    </testcase>
    <testcase classname="HelperServiceService onPaste should set price" name="HelperServiceService onPaste should set price" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="GqRatingComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:40" time="2.35" tests="3">
    <testcase classname="GqRatingComponent should create" name="GqRatingComponent should create" time="0.056">
    </testcase>
    <testcase classname="GqRatingComponent agInit should set price" name="GqRatingComponent agInit should set price" time="0.036">
    </testcase>
    <testcase classname="GqRatingComponent trackByFn() should return the loop index to track usersArray" name="GqRatingComponent trackByFn() should return the loop index to track usersArray" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="DetailViewButtonComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:40" time="2.649" tests="5">
    <testcase classname="DetailViewButtonComponent should create" name="DetailViewButtonComponent should create" time="0.113">
    </testcase>
    <testcase classname="DetailViewButtonComponent agInit should set params and add listeners" name="DetailViewButtonComponent agInit should set params and add listeners" time="0.074">
    </testcase>
    <testcase classname="DetailViewButtonComponent onGridReady should set selections" name="DetailViewButtonComponent onGridReady should set selections" time="0.067">
    </testcase>
    <testcase classname="DetailViewButtonComponent onSelectionChange should set selections" name="DetailViewButtonComponent onSelectionChange should set selections" time="0.063">
    </testcase>
    <testcase classname="DetailViewButtonComponent showDetailView should navigate" name="DetailViewButtonComponent showDetailView should navigate" time="0.063">
    </testcase>
  </testsuite>
  <testsuite name="ResetAllButtonComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:40" time="2.475" tests="2">
    <testcase classname="ResetAllButtonComponent should create" name="ResetAllButtonComponent should create" time="0.095">
    </testcase>
    <testcase classname="ResetAllButtonComponent resetAll should dispatch action" name="ResetAllButtonComponent resetAll should dispatch action" time="0.074">
    </testcase>
  </testsuite>
  <testsuite name="PricingDetailsComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:40" time="2.689" tests="1">
    <testcase classname="PricingDetailsComponent should create" name="PricingDetailsComponent should create" time="0.21">
    </testcase>
  </testsuite>
  <testsuite name="OpenCaseButtonComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:41" time="2.611" tests="4">
    <testcase classname="OpenCaseButtonComponent should create" name="OpenCaseButtonComponent should create" time="0.123">
    </testcase>
    <testcase classname="OpenCaseButtonComponent agInit should set params and add listeners" name="OpenCaseButtonComponent agInit should set params and add listeners" time="0.089">
    </testcase>
    <testcase classname="OpenCaseButtonComponent onSelectionChange should set selections" name="OpenCaseButtonComponent onSelectionChange should set selections" time="0.069">
    </testcase>
    <testcase classname="OpenCaseButtonComponent openCase should open Case" name="OpenCaseButtonComponent openCase should open Case" time="0.073">
    </testcase>
  </testsuite>
  <testsuite name="ProductionCostDetailsComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:41" time="2.584" tests="1">
    <testcase classname="ProductionCostDetailsComponent should create" name="ProductionCostDetailsComponent should create" time="0.071">
    </testcase>
  </testsuite>
  <testsuite name="SearchService" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:41" time="2.56" tests="5">
    <testcase classname="SearchService should be created" name="SearchService should be created" time="0.027">
    </testcase>
    <testcase classname="SearchService autocomplete should call " name="SearchService autocomplete should call " time="0.024">
    </testcase>
    <testcase classname="SearchService autocomplete should call for sapquotation " name="SearchService autocomplete should call for sapquotation " time="0.016">
    </testcase>
    <testcase classname="SearchService getSalesOrgs should call" name="SearchService getSalesOrgs should call" time="0.022">
    </testcase>
    <testcase classname="SearchService getCustomer should call " name="SearchService getCustomer should call " time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="CreateColumnService" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:42" time="1.756" tests="19">
    <testcase classname="CreateColumnService filterGpc should return false" name="CreateColumnService filterGpc should return false" time="0.001">
    </testcase>
    <testcase classname="CreateColumnService filterGpc should return true" name="CreateColumnService filterGpc should return true" time="0">
    </testcase>
    <testcase classname="CreateColumnService filterGpc should return true" name="CreateColumnService filterGpc should return true" time="0.001">
    </testcase>
    <testcase classname="CreateColumnService filterSQV should return false" name="CreateColumnService filterSQV should return false" time="0.001">
    </testcase>
    <testcase classname="CreateColumnService filterSQV should return true" name="CreateColumnService filterSQV should return true" time="0">
    </testcase>
    <testcase classname="CreateColumnService filterSQV should return true" name="CreateColumnService filterSQV should return true" time="0.001">
    </testcase>
    <testcase classname="CreateColumnService filterAddedToOffer should return true" name="CreateColumnService filterAddedToOffer should return true" time="0">
    </testcase>
    <testcase classname="CreateColumnService filterAddedToOffer should return true" name="CreateColumnService filterAddedToOffer should return true" time="0">
    </testcase>
    <testcase classname="CreateColumnService createColumnDefs should return all cols" name="CreateColumnService createColumnDefs should return all cols" time="0.001">
    </testcase>
    <testcase classname="CreateColumnService numberFormatter should render number" name="CreateColumnService numberFormatter should render number" time="0.001">
    </testcase>
    <testcase classname="CreateColumnService numberCurrencyFormatter should render number" name="CreateColumnService numberCurrencyFormatter should render number" time="0.001">
    </testcase>
    <testcase classname="CreateColumnService percentageFormatter should add %" name="CreateColumnService percentageFormatter should add %" time="0.001">
    </testcase>
    <testcase classname="CreateColumnService infoComparator should short info column" name="CreateColumnService infoComparator should short info column" time="0.001">
    </testcase>
    <testcase classname="CreateColumnService infoComparator should short info column" name="CreateColumnService infoComparator should short info column" time="0">
    </testcase>
    <testcase classname="CreateColumnService infoComparator should short info column" name="CreateColumnService infoComparator should short info column" time="0.001">
    </testcase>
    <testcase classname="CreateColumnService transformMaterial should call pipe transform" name="CreateColumnService transformMaterial should call pipe transform" time="0.007">
    </testcase>
    <testcase classname="CreateColumnService dateFormatter should render Date" name="CreateColumnService dateFormatter should render Date" time="0.024">
    </testcase>
    <testcase classname="CreateColumnService dateFormatter should render Date" name="CreateColumnService dateFormatter should render Date" time="0.001">
    </testcase>
    <testcase classname="CreateColumnService idFormatter should call pipe" name="CreateColumnService idFormatter should call pipe" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Process Case Selector" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:42" time="1.748" tests="26">
    <testcase classname="Process Case Selector getCustomer should return the customer details" name="Process Case Selector getCustomer should return the customer details" time="0.002">
    </testcase>
    <testcase classname="Process Case Selector getCustomerLoading should return true if customer details is currently loading" name="Process Case Selector getCustomerLoading should return true if customer details is currently loading" time="0">
    </testcase>
    <testcase classname="Process Case Selector getQuotation should return all quotation details" name="Process Case Selector getQuotation should return all quotation details" time="0.001">
    </testcase>
    <testcase classname="Process Case Selector getQuotationLoading should return true if quotation is currently loading" name="Process Case Selector getQuotationLoading should return true if quotation is currently loading" time="0.001">
    </testcase>
    <testcase classname="Process Case Selector getSelectedQuotationIdentifier should return a quotation identifier" name="Process Case Selector getSelectedQuotationIdentifier should return a quotation identifier" time="0">
    </testcase>
    <testcase classname="Process Case Selector getOffer should return true if quotation is currently loading" name="Process Case Selector getOffer should return true if quotation is currently loading" time="0.001">
    </testcase>
    <testcase classname="Process Case Selector getOffer should return undefined if quotation is undefined" name="Process Case Selector getOffer should return undefined if quotation is undefined" time="0.007">
    </testcase>
    <testcase classname="Process Case Selector getSapId  should return a sap id" name="Process Case Selector getSapId  should return a sap id" time="0.001">
    </testcase>
    <testcase classname="Process Case Selector getSapId  should return undefined" name="Process Case Selector getSapId  should return undefined" time="0">
    </testcase>
    <testcase classname="Process Case Selector getAddMaterialRowData   should return add addMaterial row data" name="Process Case Selector getAddMaterialRowData   should return add addMaterial row data" time="0">
    </testcase>
    <testcase classname="Process Case Selector getAddQuotationDetailsRequest should return a AddQuotationDetailsRequest" name="Process Case Selector getAddQuotationDetailsRequest should return a AddQuotationDetailsRequest" time="0.001">
    </testcase>
    <testcase classname="Process Case Selector getAddQuotationDetailsRequest should return a AddQuotationDetailsRequest for string quantity" name="Process Case Selector getAddQuotationDetailsRequest should return a AddQuotationDetailsRequest for string quantity" time="0.001">
    </testcase>
    <testcase classname="Process Case Selector getRemoveQuotationDetailsRequest  should return a removeQuotationDetailsIds" name="Process Case Selector getRemoveQuotationDetailsRequest  should return a removeQuotationDetailsIds" time="0.001">
    </testcase>
    <testcase classname="Process Case Selector getAddMaterialRowDataValid  should return false" name="Process Case Selector getAddMaterialRowDataValid  should return false" time="0.001">
    </testcase>
    <testcase classname="Process Case Selector getAddMaterialRowDataValid  should return true" name="Process Case Selector getAddMaterialRowDataValid  should return true" time="0">
    </testcase>
    <testcase classname="Process Case Selector getQuotationDetailId should return id" name="Process Case Selector getQuotationDetailId should return id" time="0.001">
    </testcase>
    <testcase classname="Process Case Selector getSelectedQuotationDetail should return quotationd detail" name="Process Case Selector getSelectedQuotationDetail should return quotationd detail" time="0.001">
    </testcase>
    <testcase classname="Process Case Selector getSelectedQuotationDetail should return undefined" name="Process Case Selector getSelectedQuotationDetail should return undefined" time="0">
    </testcase>
    <testcase classname="Process Case Selector getCustomerCurrency should return customer currency" name="Process Case Selector getCustomerCurrency should return customer currency" time="0.001">
    </testcase>
    <testcase classname="Process Case Selector getUpdateLoading should return updateLoading" name="Process Case Selector getUpdateLoading should return updateLoading" time="0">
    </testcase>
    <testcase classname="Process Case Selector getQuotationErrorMessage should return errorMessage" name="Process Case Selector getQuotationErrorMessage should return errorMessage" time="0">
    </testcase>
    <testcase classname="Process Case Selector getGqId  should return gqId" name="Process Case Selector getGqId  should return gqId" time="0.001">
    </testcase>
    <testcase classname="Process Case Selector isManualCase  should return if manual case" name="Process Case Selector isManualCase  should return if manual case" time="0">
    </testcase>
    <testcase classname="Process Case Selector getMaterialOfSelectedQuotationDetail should return material" name="Process Case Selector getMaterialOfSelectedQuotationDetail should return material" time="0.001">
    </testcase>
    <testcase classname="Process Case Selector getPriceUnitOfSelectedQuotationDetail should return price unit" name="Process Case Selector getPriceUnitOfSelectedQuotationDetail should return price unit" time="0.001">
    </testcase>
    <testcase classname="Process Case Selector getCoefficients should return coefficients" name="Process Case Selector getCoefficients should return coefficients" time="0">
    </testcase>
  </testsuite>
  <testsuite name="QuotationService" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:42" time="2.41" tests="7">
    <testcase classname="QuotationService should be created" name="QuotationService should be created" time="0.025">
    </testcase>
    <testcase classname="QuotationService uploadOfferToSap should call DataService POST" name="QuotationService uploadOfferToSap should call DataService POST" time="0.059">
    </testcase>
    <testcase classname="QuotationService deleteCase should call DataService DELETE" name="QuotationService deleteCase should call DataService DELETE" time="0.028">
    </testcase>
    <testcase classname="QuotationService quotationDetails should call " name="QuotationService quotationDetails should call " time="0.015">
    </testcase>
    <testcase classname="QuotationService getCases should call DataService getAll" name="QuotationService getCases should call DataService getAll" time="0.019">
    </testcase>
    <testcase classname="QuotationService createCase should call" name="QuotationService createCase should call" time="0.016">
    </testcase>
    <testcase classname="QuotationService importCase should call" name="QuotationService importCase should call" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="TransactionsEffect" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:42" time="2.339" tests="3">
    <testcase classname="TransactionsEffect triggerLoadTransactions$ should return loadComparableTransactions" name="TransactionsEffect triggerLoadTransactions$ should return loadComparableTransactions" time="0.031">
    </testcase>
    <testcase classname="TransactionsEffect transactions$ should return loadComparableTransactionsSuccess" name="TransactionsEffect transactions$ should return loadComparableTransactionsSuccess" time="0.026">
    </testcase>
    <testcase classname="TransactionsEffect transactions$ should return loadComparableTransactionsFailure" name="TransactionsEffect transactions$ should return loadComparableTransactionsFailure" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="FinishOfferComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:43" time="2.263" tests="2">
    <testcase classname="FinishOfferComponent should create" name="FinishOfferComponent should create" time="0.116">
    </testcase>
    <testcase classname="FinishOfferComponent showDetailView should navigate" name="FinishOfferComponent showDetailView should navigate" time="0.083">
    </testcase>
  </testsuite>
  <testsuite name="EditPriceComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:43" time="2.365" tests="3">
    <testcase classname="EditPriceComponent should create" name="EditPriceComponent should create" time="0.066">
    </testcase>
    <testcase classname="EditPriceComponent agInit should define params and value" name="EditPriceComponent agInit should define params and value" time="0.116">
    </testcase>
    <testcase classname="EditPriceComponent onIconClick startEditMode" name="EditPriceComponent onIconClick startEditMode" time="0.036">
    </testcase>
  </testsuite>
  <testsuite name="ActionCellComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:43" time="2.308" tests="3">
    <testcase classname="ActionCellComponent should create" name="ActionCellComponent should create" time="0.086">
    </testcase>
    <testcase classname="ActionCellComponent agInit should set params" name="ActionCellComponent agInit should set params" time="0.057">
    </testcase>
    <testcase classname="ActionCellComponent deleteItem should dispatch deleteRowData action" name="ActionCellComponent deleteItem should dispatch deleteRowData action" time="0.064">
    </testcase>
  </testsuite>
  <testsuite name="CustomerDetailsComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:43" time="2.321" tests="2">
    <testcase classname="CustomerDetailsComponent should create" name="CustomerDetailsComponent should create" time="0.101">
    </testcase>
    <testcase classname="CustomerDetailsComponent ngOnInit should set current and last year" name="CustomerDetailsComponent ngOnInit should set current and last year" time="0.085">
    </testcase>
  </testsuite>
  <testsuite name="CustomerDetailsComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:43" time="2.352" tests="1">
    <testcase classname="CustomerDetailsComponent should create" name="CustomerDetailsComponent should create" time="0.193">
    </testcase>
  </testsuite>
  <testsuite name="RegressionService" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:44" time="2.127" tests="2">
    <testcase classname="RegressionService buildRegressionPoints should return data" name="RegressionService buildRegressionPoints should return data" time="0.027">
    </testcase>
    <testcase classname="RegressionService regressionFunction should return data point" name="RegressionService regressionFunction should return data point" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="DeleteAcceptComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:44" time="2.296" tests="3">
    <testcase classname="DeleteAcceptComponent should create" name="DeleteAcceptComponent should create" time="0.096">
    </testcase>
    <testcase classname="DeleteAcceptComponent onCancelClick should close dialogRef" name="DeleteAcceptComponent onCancelClick should close dialogRef" time="0.071">
    </testcase>
    <testcase classname="DeleteAcceptComponent trackByFn should return index" name="DeleteAcceptComponent trackByFn should return index" time="0.074">
    </testcase>
  </testsuite>
  <testsuite name="CreateCaseButtonComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:44" time="2.298" tests="1">
    <testcase classname="CreateCaseButtonComponent should create" name="CreateCaseButtonComponent should create" time="0.109">
    </testcase>
  </testsuite>
  <testsuite name="MaterialDetailsComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:44" time="2.178" tests="1">
    <testcase classname="MaterialDetailsComponent should create" name="MaterialDetailsComponent should create" time="0.085">
    </testcase>
  </testsuite>
  <testsuite name="SupplyChainDetailsComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:45" time="2.35" tests="1">
    <testcase classname="SupplyChainDetailsComponent should create" name="SupplyChainDetailsComponent should create" time="0.081">
    </testcase>
  </testsuite>
  <testsuite name="LoadingSpinnerComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:45" time="2.121" tests="1">
    <testcase classname="LoadingSpinnerComponent should create" name="LoadingSpinnerComponent should create" time="0.093">
    </testcase>
  </testsuite>
  <testsuite name="ColumnDefService" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:45" time="2.308" tests="2">
    <testcase classname="ColumnDefService should be created" name="ColumnDefService should be created" time="0.02">
    </testcase>
    <testcase classname="ColumnDefService selectManualPrice should dispatch action" name="ColumnDefService selectManualPrice should dispatch action" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="View Cases Selector" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:46" time="1.522" tests="3">
    <testcase classname="View Cases Selector getQuotations should return quotations" name="View Cases Selector getQuotations should return quotations" time="0.001">
    </testcase>
    <testcase classname="View Cases Selector isQuotationsLoading should return false" name="View Cases Selector isQuotationsLoading should return false" time="0.001">
    </testcase>
    <testcase classname="View Cases Selector isDeleteLoading should return false" name="View Cases Selector isDeleteLoading should return false" time="0">
    </testcase>
  </testsuite>
  <testsuite name="MaterialValidationStatusComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:45" time="2.185" tests="3">
    <testcase classname="MaterialValidationStatusComponent should create" name="MaterialValidationStatusComponent should create" time="0.062">
    </testcase>
    <testcase classname="MaterialValidationStatusComponent agInit should set params and add event listener" name="MaterialValidationStatusComponent agInit should set params and add event listener" time="0.049">
    </testcase>
    <testcase classname="MaterialValidationStatusComponent rowValueChanges should count invalid and total combinations correctly" name="MaterialValidationStatusComponent rowValueChanges should count invalid and total combinations correctly" time="0.038">
    </testcase>
  </testsuite>
  <testsuite name="Transactions Selector" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:46" time="1.511" tests="3">
    <testcase classname="Transactions Selector getTransactions should return transactions" name="Transactions Selector getTransactions should return transactions" time="0.001">
    </testcase>
    <testcase classname="Transactions Selector getTransactionsLoading should return transactionsLoading" name="Transactions Selector getTransactionsLoading should return transactionsLoading" time="0.001">
    </testcase>
    <testcase classname="Transactions Selector getGraphTransactions should return transactions for graph" name="Transactions Selector getGraphTransactions should return transactions for graph" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="HeaderContentComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:45" time="2.298" tests="1">
    <testcase classname="HeaderContentComponent should create" name="HeaderContentComponent should create" time="0.154">
    </testcase>
  </testsuite>
  <testsuite name="ColumnDefService" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:46" time="2.101" tests="4">
    <testcase classname="ColumnDefService should be created" name="ColumnDefService should be created" time="0.021">
    </testcase>
    <testcase classname="ColumnDefService dateComparator should return 0" name="ColumnDefService dateComparator should return 0" time="0.017">
    </testcase>
    <testcase classname="ColumnDefService dateComparator should return 1" name="ColumnDefService dateComparator should return 1" time="0.016">
    </testcase>
    <testcase classname="ColumnDefService dateComparator should return -1" name="ColumnDefService dateComparator should return -1" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="OfferCartCellComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:46" time="2.031" tests="2">
    <testcase classname="OfferCartCellComponent should create" name="OfferCartCellComponent should create" time="0.051">
    </testcase>
    <testcase classname="OfferCartCellComponent agInit should set params" name="OfferCartCellComponent agInit should set params" time="0.04">
    </testcase>
  </testsuite>
  <testsuite name="InfoCellComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:46" time="2.194" tests="2">
    <testcase classname="InfoCellComponent should create" name="InfoCellComponent should create" time="0.108">
    </testcase>
    <testcase classname="InfoCellComponent agInit should set params" name="InfoCellComponent agInit should set params" time="0.089">
    </testcase>
  </testsuite>
  <testsuite name="HeaderContentComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:46" time="2.134" tests="1">
    <testcase classname="HeaderContentComponent should create" name="HeaderContentComponent should create" time="0.128">
    </testcase>
  </testsuite>
  <testsuite name="shared selector" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:47" time="1.529" tests="9">
    <testcase classname="shared selector get all roles should set roles" name="shared selector get all roles should set roles" time="0.001">
    </testcase>
    <testcase classname="shared selector get all roles should return empty array" name="shared selector get all roles should return empty array" time="0.001">
    </testcase>
    <testcase classname="shared selector filter roles should filter roles" name="shared selector filter roles should filter roles" time="0.001">
    </testcase>
    <testcase classname="shared selector userHasGPCRole should return true" name="shared selector userHasGPCRole should return true" time="0">
    </testcase>
    <testcase classname="shared selector userHasGPCRole should return false" name="shared selector userHasGPCRole should return false" time="0.001">
    </testcase>
    <testcase classname="shared selector userHasSQVRole should return true" name="shared selector userHasSQVRole should return true" time="0.001">
    </testcase>
    <testcase classname="shared selector userHasSQVRole should return false" name="shared selector userHasSQVRole should return false" time="0">
    </testcase>
    <testcase classname="shared selector userHasManualPriceRole should return true" name="shared selector userHasManualPriceRole should return true" time="0.001">
    </testcase>
    <testcase classname="shared selector userHasManualPriceRole should return false" name="shared selector userHasManualPriceRole should return false" time="0">
    </testcase>
  </testsuite>
  <testsuite name="CaseActions" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:47" time="1.627" tests="19">
    <testcase classname="CaseActions Customer Details Actions customer" name="CaseActions Customer Details Actions customer" time="0.002">
    </testcase>
    <testcase classname="CaseActions Customer Details Actions customerSuccess" name="CaseActions Customer Details Actions customerSuccess" time="0">
    </testcase>
    <testcase classname="CaseActions Customer Details Actions customerFailure" name="CaseActions Customer Details Actions customerFailure" time="0.001">
    </testcase>
    <testcase classname="CaseActions Quotation Details Actions quotation" name="CaseActions Quotation Details Actions quotation" time="0.001">
    </testcase>
    <testcase classname="CaseActions Quotation Details Actions quotationSuccess" name="CaseActions Quotation Details Actions quotationSuccess" time="0.001">
    </testcase>
    <testcase classname="CaseActions Quotation Details Actions quotationFailure" name="CaseActions Quotation Details Actions quotationFailure" time="0.001">
    </testcase>
    <testcase classname="CaseActions Quotation Details Actions clearRowData" name="CaseActions Quotation Details Actions clearRowData" time="0">
    </testcase>
    <testcase classname="CaseActions Quotation Details Actions addMaterials" name="CaseActions Quotation Details Actions addMaterials" time="0.001">
    </testcase>
    <testcase classname="CaseActions Quotation Details Actions setSelectedQuotationDetail" name="CaseActions Quotation Details Actions setSelectedQuotationDetail" time="0.001">
    </testcase>
    <testcase classname="CaseActions Quotation Details Actions loadSelectedQuotationDetailFromUrl" name="CaseActions Quotation Details Actions loadSelectedQuotationDetailFromUrl" time="0.001">
    </testcase>
    <testcase classname="CaseActions Quotation Details Actions loadQuotationFromUrl" name="CaseActions Quotation Details Actions loadQuotationFromUrl" time="0.001">
    </testcase>
    <testcase classname="CaseActions Offer Actions updateQuotationDetails" name="CaseActions Offer Actions updateQuotationDetails" time="0">
    </testcase>
    <testcase classname="CaseActions Offer Actions updateQuotationDetailsSuccess" name="CaseActions Offer Actions updateQuotationDetailsSuccess" time="0.001">
    </testcase>
    <testcase classname="CaseActions Offer Actions updateQuotationDetailsFailure" name="CaseActions Offer Actions updateQuotationDetailsFailure" time="0.001">
    </testcase>
    <testcase classname="CaseActions Offer Actions updateQuotationDetailsFailure" name="CaseActions Offer Actions updateQuotationDetailsFailure" time="0">
    </testcase>
    <testcase classname="CaseActions Offer Actions uploadOfferToSap" name="CaseActions Offer Actions uploadOfferToSap" time="0.002">
    </testcase>
    <testcase classname="CaseActions Offer Actions uploadOfferToSapFailure" name="CaseActions Offer Actions uploadOfferToSapFailure" time="0.001">
    </testcase>
    <testcase classname="CaseActions Offer Actions uploadOfferToSapSuccess" name="CaseActions Offer Actions uploadOfferToSapSuccess" time="0.001">
    </testcase>
    <testcase classname="CaseActions Row Data Actions deleteAddMaterialRowDataItem" name="CaseActions Row Data Actions deleteAddMaterialRowDataItem" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="MarginDetailPipe" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:47" time="1.473" tests="2">
    <testcase classname="MarginDetailPipe create an instance" name="MarginDetailPipe create an instance" time="0.001">
    </testcase>
    <testcase classname="MarginDetailPipe should transform number" name="MarginDetailPipe should transform number" time="0">
    </testcase>
  </testsuite>
  <testsuite name="PriceService" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:48" time="1.618" tests="14">
    <testcase classname="PriceService addCalculationForDetail should return detail" name="PriceService addCalculationForDetail should return detail" time="0.002">
    </testcase>
    <testcase classname="PriceService multiplyAndRoundValues should return multiplied rounded value" name="PriceService multiplyAndRoundValues should return multiplied rounded value" time="0.001">
    </testcase>
    <testcase classname="PriceService multiplyAndRoundValues should return undefined " name="PriceService multiplyAndRoundValues should return undefined " time="0">
    </testcase>
    <testcase classname="PriceService addCalculationForDetails should call addCalculationForDetail" name="PriceService addCalculationForDetails should call addCalculationForDetail" time="0.001">
    </testcase>
    <testcase classname="PriceService calculatePercentDifference should Calculate % diff" name="PriceService calculatePercentDifference should Calculate % diff" time="0.001">
    </testcase>
    <testcase classname="PriceService calculatePercentDifference should return undefined" name="PriceService calculatePercentDifference should return undefined" time="0.001">
    </testcase>
    <testcase classname="PriceService calculateNetValue should return NetValue" name="PriceService calculateNetValue should return NetValue" time="0">
    </testcase>
    <testcase classname="PriceService calculateNetValue should return undefined" name="PriceService calculateNetValue should return undefined" time="0.001">
    </testcase>
    <testcase classname="PriceService calculateMargin should return margin" name="PriceService calculateMargin should return margin" time="0">
    </testcase>
    <testcase classname="PriceService calculateMargin should return undefined" name="PriceService calculateMargin should return undefined" time="0.001">
    </testcase>
    <testcase classname="PriceService calculateStatusBarValues should return calculatedValues" name="PriceService calculateStatusBarValues should return calculatedValues" time="0.001">
    </testcase>
    <testcase classname="PriceService roundPercentageToTwoDecimals should round to two decimals" name="PriceService roundPercentageToTwoDecimals should round to two decimals" time="0">
    </testcase>
    <testcase classname="PriceService roundToTwoDecimals should round to two decimals" name="PriceService roundToTwoDecimals should round to two decimals" time="0.001">
    </testcase>
    <testcase classname="PriceService multiplyTransactionsWithPriceUnit shouldreturn multipliedTransacitons" name="PriceService multiplyTransactionsWithPriceUnit shouldreturn multipliedTransacitons" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Transactions Reducer" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:48" time="1.597" tests="3">
    <testcase classname="Transactions Reducer loadComparableTransactions should set transactions" name="Transactions Reducer loadComparableTransactions should set transactions" time="0.001">
    </testcase>
    <testcase classname="Transactions Reducer loadComparableTransactionsSuccess should set transactions" name="Transactions Reducer loadComparableTransactionsSuccess should set transactions" time="0.001">
    </testcase>
    <testcase classname="Transactions Reducer loadComparableTransactionsFailure should set errorMessage" name="Transactions Reducer loadComparableTransactionsFailure should set errorMessage" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="NGRX Store Reducer Index" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:48" time="1.609" tests="4">
    <testcase classname="NGRX Store Reducer Index should define the reducers object" name="NGRX Store Reducer Index should define the reducers object" time="0.001">
    </testcase>
    <testcase classname="NGRX Store Reducer Index should define feature selectors" name="NGRX Store Reducer Index should define feature selectors" time="0.001">
    </testcase>
    <testcase classname="NGRX Store Reducer Index CustomSerializer serialize should return object with certain attributes" name="NGRX Store Reducer Index CustomSerializer serialize should return object with certain attributes" time="0.018">
    </testcase>
    <testcase classname="NGRX Store Reducer Index CustomSerializer serialize should return firstChild as current state" name="NGRX Store Reducer Index CustomSerializer serialize should return firstChild as current state" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="PercentagePipe" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:48" time="1.52" tests="2">
    <testcase classname="PercentagePipe create an instance" name="PercentagePipe create an instance" time="0.001">
    </testcase>
    <testcase classname="PercentagePipe should call HelperService" name="PercentagePipe should call HelperService" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="TableService" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:48" time="1.568" tests="13">
    <testcase classname="TableService pasteItems should add remove duplicated items" name="TableService pasteItems should add remove duplicated items" time="0.002">
    </testcase>
    <testcase classname="TableService pasteItems should do nothing" name="TableService pasteItems should do nothing" time="0.001">
    </testcase>
    <testcase classname="TableService deleteItem should delete an Item" name="TableService deleteItem should delete an Item" time="0">
    </testcase>
    <testcase classname="TableService validateData should return valid information" name="TableService validateData should return valid information" time="0.001">
    </testcase>
    <testcase classname="TableService validateData should return invalid information" name="TableService validateData should return invalid information" time="0">
    </testcase>
    <testcase classname="TableService validateData should not change the validation" name="TableService validateData should not change the validation" time="0.001">
    </testcase>
    <testcase classname="TableService validateData should return invalid information" name="TableService validateData should return invalid information" time="0.001">
    </testcase>
    <testcase classname="TableService validateData should return invalid information" name="TableService validateData should return invalid information" time="0">
    </testcase>
    <testcase classname="TableService validateData should return quantity as number" name="TableService validateData should return quantity as number" time="0.001">
    </testcase>
    <testcase classname="TableService validateData should return invalid quantity" name="TableService validateData should return invalid quantity" time="0.001">
    </testcase>
    <testcase classname="TableService removeDashes should remove dashes" name="TableService removeDashes should remove dashes" time="0.001">
    </testcase>
    <testcase classname="TableService removeDashesFromTableItems should return array without dashes" name="TableService removeDashesFromTableItems should return array without dashes" time="0.001">
    </testcase>
    <testcase classname="TableService createMaterialQuantitiesFromTableItems should return MaterialQuantities" name="TableService createMaterialQuantitiesFromTableItems should return MaterialQuantities" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="CreateCustomerCaseButtonComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:48" time="2.157" tests="1">
    <testcase classname="CreateCustomerCaseButtonComponent should create" name="CreateCustomerCaseButtonComponent should create" time="0.088">
    </testcase>
  </testsuite>
  <testsuite name="CreateManualCaseComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:48" time="2.35" tests="1">
    <testcase classname="CreateManualCaseComponent should create" name="CreateManualCaseComponent should create" time="0.099">
    </testcase>
  </testsuite>
  <testsuite name="PlantDisplayPipe" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:48" time="1.742" tests="3">
    <testcase classname="PlantDisplayPipe create an instance" name="PlantDisplayPipe create an instance" time="0.002">
    </testcase>
    <testcase classname="PlantDisplayPipe should transform data" name="PlantDisplayPipe should transform data" time="0.001">
    </testcase>
    <testcase classname="PlantDisplayPipe should transform data" name="PlantDisplayPipe should transform data" time="0">
    </testcase>
  </testsuite>
  <testsuite name="MaterialTransformPipe" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:49" time="1.7" tests="2">
    <testcase classname="MaterialTransformPipe create an instance" name="MaterialTransformPipe create an instance" time="0.001">
    </testcase>
    <testcase classname="MaterialTransformPipe should transform string" name="MaterialTransformPipe should transform string" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="MaterialInfoPipe" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:49" time="1.787" tests="2">
    <testcase classname="MaterialInfoPipe create an instance" name="MaterialInfoPipe create an instance" time="0.001">
    </testcase>
    <testcase classname="MaterialInfoPipe should transform material" name="MaterialInfoPipe should transform material" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ImportCaseComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:49" time="2.412" tests="1">
    <testcase classname="ImportCaseComponent should create" name="ImportCaseComponent should create" time="0.1">
    </testcase>
  </testsuite>
  <testsuite name="NoResultsFoundPipe" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:49" time="1.855" tests="7">
    <testcase classname="NoResultsFoundPipe create an instance" name="NoResultsFoundPipe create an instance" time="0.002">
    </testcase>
    <testcase classname="NoResultsFoundPipe should return false when no searchStr is provided" name="NoResultsFoundPipe should return false when no searchStr is provided" time="0">
    </testcase>
    <testcase classname="NoResultsFoundPipe should return false when debounceIsActive" name="NoResultsFoundPipe should return false when debounceIsActive" time="0">
    </testcase>
    <testcase classname="NoResultsFoundPipe should return false when autoCompleteLoading" name="NoResultsFoundPipe should return false when autoCompleteLoading" time="0.001">
    </testcase>
    <testcase classname="NoResultsFoundPipe should return true when no options avl" name="NoResultsFoundPipe should return true when no options avl" time="0">
    </testcase>
    <testcase classname="NoResultsFoundPipe should return true when only selected options avl" name="NoResultsFoundPipe should return true when only selected options avl" time="0.001">
    </testcase>
    <testcase classname="NoResultsFoundPipe should return true when only selected options avl or searchStr is not part of filterOption" name="NoResultsFoundPipe should return true when only selected options avl or searchStr is not part of filterOption" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Create Actions" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:49" time="1.895" tests="18">
    <testcase classname="Create Actions Autocomplete Actions autocomplete" name="Create Actions Autocomplete Actions autocomplete" time="0.001">
    </testcase>
    <testcase classname="Create Actions Autocomplete Actions autocompleteFailure" name="Create Actions Autocomplete Actions autocompleteFailure" time="0">
    </testcase>
    <testcase classname="Create Actions Autocomplete Actions autocompleteSuccess" name="Create Actions Autocomplete Actions autocompleteSuccess" time="0.001">
    </testcase>
    <testcase classname="Create Actions Autocomplete Actions selectAutocompleteOption" name="Create Actions Autocomplete Actions selectAutocompleteOption" time="0.001">
    </testcase>
    <testcase classname="Create Actions Autocomplete Actions unselectAutocompleteOption" name="Create Actions Autocomplete Actions unselectAutocompleteOption" time="0">
    </testcase>
    <testcase classname="Create Actions Table Row Data Actions addRowDataItem" name="Create Actions Table Row Data Actions addRowDataItem" time="0.001">
    </testcase>
    <testcase classname="Create Actions Table Row Data Actions pasteRowDataItems" name="Create Actions Table Row Data Actions pasteRowDataItems" time="0.001">
    </testcase>
    <testcase classname="Create Actions Table Row Data Actions clearRowData" name="Create Actions Table Row Data Actions clearRowData" time="0">
    </testcase>
    <testcase classname="Create Actions Table Row Data Actions deleteRowDataItem" name="Create Actions Table Row Data Actions deleteRowDataItem" time="0.001">
    </testcase>
    <testcase classname="Create Actions createCase Actions createCase" name="Create Actions createCase Actions createCase" time="0">
    </testcase>
    <testcase classname="Create Actions createCase Actions createCaseSuccess" name="Create Actions createCase Actions createCaseSuccess" time="0.001">
    </testcase>
    <testcase classname="Create Actions createCase Actions createCaseFailure" name="Create Actions createCase Actions createCaseFailure" time="0">
    </testcase>
    <testcase classname="Create Actions importCase Actions importCase" name="Create Actions importCase Actions importCase" time="0.001">
    </testcase>
    <testcase classname="Create Actions importCase Actions importCaseSuccess" name="Create Actions importCase Actions importCaseSuccess" time="0">
    </testcase>
    <testcase classname="Create Actions importCase Actions importCaseFailure" name="Create Actions importCase Actions importCaseFailure" time="0.001">
    </testcase>
    <testcase classname="Create Actions getSalesOrgs Actions getSalesOrgsSuccess" name="Create Actions getSalesOrgs Actions getSalesOrgsSuccess" time="0.001">
    </testcase>
    <testcase classname="Create Actions getSalesOrgs Actions getSalesOrgsFailure" name="Create Actions getSalesOrgs Actions getSalesOrgsFailure" time="0">
    </testcase>
    <testcase classname="Create Actions selectSalesOrg selectSalesOrg" name="Create Actions selectSalesOrg selectSalesOrg" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="SapQuotationPipe" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:49" time="1.814" tests="2">
    <testcase classname="SapQuotationPipe create an instance" name="SapQuotationPipe create an instance" time="0.001">
    </testcase>
    <testcase classname="SapQuotationPipe transform data" name="SapQuotationPipe transform data" time="0">
    </testcase>
  </testsuite>
  <testsuite name="GqQuotationPipe" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:50" time="1.768" tests="2">
    <testcase classname="GqQuotationPipe create an instance" name="GqQuotationPipe create an instance" time="0.001">
    </testcase>
    <testcase classname="GqQuotationPipe transform data" name="GqQuotationPipe transform data" time="0">
    </testcase>
  </testsuite>
  <testsuite name="View Cases Reducer" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:50" time="1.865" tests="7">
    <testcase classname="View Cases Reducer loadCases should set quotationsLoading true" name="View Cases Reducer loadCases should set quotationsLoading true" time="0.002">
    </testcase>
    <testcase classname="View Cases Reducer loadCasesFailure should set errorMessage and quotationsloading false" name="View Cases Reducer loadCasesFailure should set errorMessage and quotationsloading false" time="0.002">
    </testcase>
    <testcase classname="View Cases Reducer loadCasesSuccess should set quotations and set quotationsLoading false" name="View Cases Reducer loadCasesSuccess should set quotations and set quotationsLoading false" time="0.001">
    </testcase>
    <testcase classname="View Cases Reducer deleteCase should set deleteloading true" name="View Cases Reducer deleteCase should set deleteloading true" time="0">
    </testcase>
    <testcase classname="View Cases Reducer deleteCaseSuccess should set deleteloading false and quotationLoading true" name="View Cases Reducer deleteCaseSuccess should set deleteloading false and quotationLoading true" time="0">
    </testcase>
    <testcase classname="View Cases Reducer deleteCaseFailure should set errorMessage and deleteLoading false" name="View Cases Reducer deleteCaseFailure should set errorMessage and deleteLoading false" time="0.001">
    </testcase>
    <testcase classname="View Cases Reducer Reducer function should return searchReducer" name="View Cases Reducer Reducer function should return searchReducer" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="defaultColumnDef" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:50" time="1.712" tests="2">
    <testcase classname="defaultColumnDef should setStyle" name="defaultColumnDef should setStyle" time="0.002">
    </testcase>
    <testcase classname="defaultColumnDef should setStyle" name="defaultColumnDef should setStyle" time="0">
    </testcase>
  </testsuite>
  <testsuite name="TransactionsActions" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:50" time="1.54" tests="3">
    <testcase classname="TransactionsActions loadComparableTransactions loadComparableTransactions" name="TransactionsActions loadComparableTransactions loadComparableTransactions" time="0.001">
    </testcase>
    <testcase classname="TransactionsActions loadComparableTransactionsSuccess loadComparableTransactionsSuccess" name="TransactionsActions loadComparableTransactionsSuccess loadComparableTransactionsSuccess" time="0">
    </testcase>
    <testcase classname="TransactionsActions loadComparableTransactionsFailure loadComparableTransactionsFailure" name="TransactionsActions loadComparableTransactionsFailure loadComparableTransactionsFailure" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Create Case Selector" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:50" time="1.52" tests="12">
    <testcase classname="Create Case Selector getCaseQuotation should return quotation" name="Create Case Selector getCaseQuotation should return quotation" time="0.001">
    </testcase>
    <testcase classname="Create Case Selector getSelectedQuotation should return quotation number" name="Create Case Selector getSelectedQuotation should return quotation number" time="0">
    </testcase>
    <testcase classname="Create Case Selector getCustomer should return customer" name="Create Case Selector getCustomer should return customer" time="0.001">
    </testcase>
    <testcase classname="Create Case Selector getmaterialNumber should return material number" name="Create Case Selector getmaterialNumber should return material number" time="0">
    </testcase>
    <testcase classname="Create Case Selector getRowData should return row data" name="Create Case Selector getRowData should return row data" time="0">
    </testcase>
    <testcase classname="Create Case Selector getAutocompleteLoading should return true if autocomplete is currently loading" name="Create Case Selector getAutocompleteLoading should return true if autocomplete is currently loading" time="0.001">
    </testcase>
    <testcase classname="Create Case Selector getCustomerConditionsValid should return true if row Data Valid" name="Create Case Selector getCustomerConditionsValid should return true if row Data Valid" time="0">
    </testcase>
    <testcase classname="Create Case Selector getCustomerConditionsValid should return false if no state exists" name="Create Case Selector getCustomerConditionsValid should return false if no state exists" time="0.001">
    </testcase>
    <testcase classname="Create Case Selector getCreateCaseData should return data to create a case" name="Create Case Selector getCreateCaseData should return data to create a case" time="0">
    </testcase>
    <testcase classname="Create Case Selector getCreatedCase should return createdCase" name="Create Case Selector getCreatedCase should return createdCase" time="0">
    </testcase>
    <testcase classname="Create Case Selector getSalesOrgs should return salesOrgs" name="Create Case Selector getSalesOrgs should return salesOrgs" time="0.001">
    </testcase>
    <testcase classname="Create Case Selector getCreateCaseLoading should return createCaseLoading" name="Create Case Selector getCreateCaseLoading should return createCaseLoading" time="0">
    </testcase>
  </testsuite>
  <testsuite name="CaseTableComponent" errors="0" failures="0" skipped="0" timestamp="2021-05-20T09:24:50" time="5.605" tests="1">
    <testcase classname="CaseTableComponent should create" name="CaseTableComponent should create" time="0.385">
    </testcase>
  </testsuite>
</testsuites>