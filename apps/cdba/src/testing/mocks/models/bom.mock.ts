/* eslint-disable max-lines */
import { BomItemClassic, BomItemOdata } from '@cdba/shared/models';

import { BOM_ITEM_CLASSIC_MOCK } from './bom-classic.mock';
import { BOM_ITEM_ODATA_MOCK } from './bom-odata.mock';

export const BOM_CLASSIC_MOCK: BomItemClassic[] = [
  { ...BOM_ITEM_CLASSIC_MOCK },
  {
    ...BOM_ITEM_CLASSIC_MOCK,
    level: 2,
    rowId: 2,
    materialDesignation: 'FE-2315',
    predecessorsInTree: ['FE-2313', 'FE-2315'],
    costShareOfParent: 1,
  },
  {
    ...BOM_ITEM_CLASSIC_MOCK,
    level: 2,
    rowId: 3,
    materialDesignation: 'FE-2315',
  },
  {
    ...BOM_ITEM_CLASSIC_MOCK,
    level: 3,
    rowId: 4,
    materialDesignation: 'FE-2314',
  },
  {
    ...BOM_ITEM_CLASSIC_MOCK,
    level: 2,
    rowId: 5,
    materialDesignation: 'FE-2311',
  },
];

export const BOM_ODATA_MOCK: BomItemOdata[] = [
  { ...BOM_ITEM_ODATA_MOCK },
  {
    ...BOM_ITEM_ODATA_MOCK,
    level: 2,
    rowId: 2,
    materialDesignation: 'FE-2315',
    predecessorsInTree: ['FE-2313', 'FE-2315'],
    costShareOfParent: 1,
  },
  {
    ...BOM_ITEM_ODATA_MOCK,
    level: 2,
    rowId: 3,
    materialDesignation: 'FE-2315',
  },
  {
    ...BOM_ITEM_ODATA_MOCK,
    level: 3,
    rowId: 4,
    materialDesignation: 'FE-2314',
  },
  {
    ...BOM_ITEM_ODATA_MOCK,
    level: 2,
    rowId: 5,
    materialDesignation: 'FE-2311',
  },
];

export const BOM_ODATA_MAPPED_MOCK: BomItemOdata[] = [
  {
    rowId: 1,
    level: 1,
    materialDesignation: 'FE-2313',
    materialNumber: 'mock-materialNumber',
    parentMaterialNumber: 'mock-materialNumber',
    costShareOfParent: 0.4,
    predecessorsInTree: ['FE-2313'],
    itemCategory: 'I',
    bomIdentifier: {
      costingDate: '2017-11-01',
      costingNumber: 'mock-costingNumber',
      costingType: 'mock-costingType',
      version: 'mock-version',
      enteredManually: true,
      referenceObject: 'mock-referenceObject',
      valuationVariant: 'mock-valuationVariant',
    },
    bomInformation: {
      productCostingGroup: 'mock-productCostingGroup',
      productCostingPlanCounter: 'mock-productCostingPlanCounter',
      productCostingBomNumber: 'mock-productCostingBomNumber',
      productCostingBomUsage: 'mock-productCostingBomUsage',
      productCostingBomAlternative: 'mock-productCostingBomAlternative',
    },
    materialCharacteristics: {
      length: 1234.567,
      width: 1234.567,
      height: 1234.567,
      unitOfDimension: 'mock-unitOfDimension',
      grossWeight: 1234.567,
      netWeight: 1234.567,
      unitOfWeight: 'mock-unitOfWeight',
      materialShortDescription: 'mock-materialShortDescription',
      productHierarchy: 'mock-productHierarchy',
      productHierarchyDescription: 'mock-productHierarchyDescription',
      materialIndentNumber: 'mock-materialIndentNumber',
      materialIndentNumberDescription: 'mock-materialIndentNumberDescription',
      valuationClass: 'mock-materialValuationClass',
      type: 'mock-type',
    },
    procurement: {
      plant: 'mock-plant',
      materialProcurementType: 'mock-materialProcurementType',
      vendor: 'mock-vendor',
      vendorDescription: 'mock-vendorDescription',
    },
    workCenter: {
      workCenter: 'mock-workCenter',
      workCenterDescription: 'mock-workCenterDescription',
      costCenter: 'mock-costCenter',
      costCenterDescription: 'mock-costCenterDescription',
      profitCenter: 'mock-profitCenter',
      capacityUtilizationRate: 1234.567,
      replacementValue: 1234.567,
    },
    costing: {
      costElements: 1234.567,
      costArea: 'mock-costArea',
      costAreaCurrency: 'mock-costAreaCurrency',
      costAreaTotalPrice: 1234.567,
      costAreaFixedCost: 1234.567,
      costAreaVariableCost: 1234.567,
      costAreaFixedPrice: 1234.567,
      costAreaVariablePrice: 1234.567,
      costAreaTotalValue: 1234.567,
      companyCodeCurrency: 'mock-string',
      companyCodeObjectCurrency: 1234.567,
      companyCodeTotalPrice: 1234.567,
      companyCodeFixedCost: 1234.567,
      companyCodeVariableCost: 1234.567,
      companyCodeFixedPrice: 1234.567,
      companyCodeVariablePrice: 1234.567,
    },
    quantities: {
      quantity: 1234.567,
      lotsize: 1234.567,
      lotsizeUnit: 'mock-lotsizeUnit',
      baseUnitOfMeasure: 'mock-baseUnitOfMeasure',
      materialBudgetYearRequirement: 1234.567,
      materialAnnualDemandCount: 1234.567,
      assemblyScrapQuantity: 1234.567,
      componentScrapQuantity: 1234.567,
    },
    manufacturing: {
      staffSetupCosts: 1234.567,
      staffProductionCosts: 1234.567,
      machineProductionCosts: 1234.567,
      machineSetupCosts: 1234.567,
      toolCosts: 1234.567,
      cycleTime: 1234.567,
      additionalTimeMachine: 1234.567,
      cycles: 1234.567,
      cyclesUnit: 'mock-cyclesUnit',
      totalProductionTime: 1234.567,
      setupTime: 1234.567,
      standardValueUnit: 'mock-standardValueUnit',
      headcountProduction: 1234.567,
      headcountSetup: 1234.567,
      staffTariff: 1234.567,
      machineTariff: 1234.567,
      toolTariff: 1234.567,
      tariffUnit: 1234.567,
    },
  },
  {
    rowId: 2,
    level: 2,
    materialDesignation: 'FE-2315',
    materialNumber: 'mock-materialNumber',
    parentMaterialNumber: 'mock-materialNumber',
    costShareOfParent: 1,
    predecessorsInTree: ['FE-2313', 'FE-2315'],
    itemCategory: 'I',
    bomIdentifier: {
      costingDate: '2017-11-01',
      costingNumber: 'mock-costingNumber',
      costingType: 'mock-costingType',
      version: 'mock-version',
      enteredManually: true,
      referenceObject: 'mock-referenceObject',
      valuationVariant: 'mock-valuationVariant',
    },
    bomInformation: {
      productCostingGroup: 'mock-productCostingGroup',
      productCostingPlanCounter: 'mock-productCostingPlanCounter',
      productCostingBomNumber: 'mock-productCostingBomNumber',
      productCostingBomUsage: 'mock-productCostingBomUsage',
      productCostingBomAlternative: 'mock-productCostingBomAlternative',
    },
    materialCharacteristics: {
      length: 1234.567,
      width: 1234.567,
      height: 1234.567,
      unitOfDimension: 'mock-unitOfDimension',
      grossWeight: 1234.567,
      netWeight: 1234.567,
      unitOfWeight: 'mock-unitOfWeight',
      materialShortDescription: 'mock-materialShortDescription',
      productHierarchy: 'mock-productHierarchy',
      productHierarchyDescription: 'mock-productHierarchyDescription',
      materialIndentNumber: 'mock-materialIndentNumber',
      materialIndentNumberDescription: 'mock-materialIndentNumberDescription',
      valuationClass: 'mock-materialValuationClass',
      type: 'mock-type',
    },
    procurement: {
      plant: 'mock-plant',
      materialProcurementType: 'mock-materialProcurementType',
      vendor: 'mock-vendor',
      vendorDescription: 'mock-vendorDescription',
    },
    workCenter: {
      workCenter: 'mock-workCenter',
      workCenterDescription: 'mock-workCenterDescription',
      costCenter: 'mock-costCenter',
      costCenterDescription: 'mock-costCenterDescription',
      profitCenter: 'mock-profitCenter',
      capacityUtilizationRate: 1234.567,
      replacementValue: 1234.567,
    },
    costing: {
      costElements: 1234.567,
      costArea: 'mock-costArea',
      costAreaCurrency: 'mock-costAreaCurrency',
      costAreaTotalPrice: 1234.567,
      costAreaFixedCost: 1234.567,
      costAreaVariableCost: 1234.567,
      costAreaFixedPrice: 1234.567,
      costAreaVariablePrice: 1234.567,
      costAreaTotalValue: 1234.567,
      companyCodeCurrency: 'mock-string',
      companyCodeObjectCurrency: 1234.567,
      companyCodeTotalPrice: 1234.567,
      companyCodeFixedCost: 1234.567,
      companyCodeVariableCost: 1234.567,
      companyCodeFixedPrice: 1234.567,
      companyCodeVariablePrice: 1234.567,
    },
    quantities: {
      quantity: 1234.567,
      lotsize: 1234.567,
      lotsizeUnit: 'mock-lotsizeUnit',
      baseUnitOfMeasure: 'mock-baseUnitOfMeasure',
      materialBudgetYearRequirement: 1234.567,
      materialAnnualDemandCount: 1234.567,
      assemblyScrapQuantity: 1234.567,
      componentScrapQuantity: 1234.567,
    },
    manufacturing: {
      staffSetupCosts: 1234.567,
      staffProductionCosts: 1234.567,
      machineProductionCosts: 1234.567,
      machineSetupCosts: 1234.567,
      toolCosts: 1234.567,
      cycleTime: 1234.567,
      additionalTimeMachine: 1234.567,
      cycles: 1234.567,
      cyclesUnit: 'mock-cyclesUnit',
      totalProductionTime: 1234.567,
      setupTime: 1234.567,
      standardValueUnit: 'mock-standardValueUnit',
      headcountProduction: 1234.567,
      headcountSetup: 1234.567,
      staffTariff: 1234.567,
      machineTariff: 1234.567,
      toolTariff: 1234.567,
      tariffUnit: 1234.567,
    },
  },
  {
    rowId: 3,
    level: 2,
    materialDesignation: 'FE-2315',
    materialNumber: 'mock-materialNumber',
    parentMaterialNumber: 'mock-materialNumber',
    costShareOfParent: 0.4,
    predecessorsInTree: ['FE-2313', 'FE-2315 '],
    itemCategory: 'I',
    bomIdentifier: {
      costingDate: '2017-11-01',
      costingNumber: 'mock-costingNumber',
      costingType: 'mock-costingType',
      version: 'mock-version',
      enteredManually: true,
      referenceObject: 'mock-referenceObject',
      valuationVariant: 'mock-valuationVariant',
    },
    bomInformation: {
      productCostingGroup: 'mock-productCostingGroup',
      productCostingPlanCounter: 'mock-productCostingPlanCounter',
      productCostingBomNumber: 'mock-productCostingBomNumber',
      productCostingBomUsage: 'mock-productCostingBomUsage',
      productCostingBomAlternative: 'mock-productCostingBomAlternative',
    },
    materialCharacteristics: {
      length: 1234.567,
      width: 1234.567,
      height: 1234.567,
      unitOfDimension: 'mock-unitOfDimension',
      grossWeight: 1234.567,
      netWeight: 1234.567,
      unitOfWeight: 'mock-unitOfWeight',
      materialShortDescription: 'mock-materialShortDescription',
      productHierarchy: 'mock-productHierarchy',
      productHierarchyDescription: 'mock-productHierarchyDescription',
      materialIndentNumber: 'mock-materialIndentNumber',
      materialIndentNumberDescription: 'mock-materialIndentNumberDescription',
      valuationClass: 'mock-materialValuationClass',
      type: 'mock-type',
    },
    procurement: {
      plant: 'mock-plant',
      materialProcurementType: 'mock-materialProcurementType',
      vendor: 'mock-vendor',
      vendorDescription: 'mock-vendorDescription',
    },
    workCenter: {
      workCenter: 'mock-workCenter',
      workCenterDescription: 'mock-workCenterDescription',
      costCenter: 'mock-costCenter',
      costCenterDescription: 'mock-costCenterDescription',
      profitCenter: 'mock-profitCenter',
      capacityUtilizationRate: 1234.567,
      replacementValue: 1234.567,
    },
    costing: {
      costElements: 1234.567,
      costArea: 'mock-costArea',
      costAreaCurrency: 'mock-costAreaCurrency',
      costAreaTotalPrice: 1234.567,
      costAreaFixedCost: 1234.567,
      costAreaVariableCost: 1234.567,
      costAreaFixedPrice: 1234.567,
      costAreaVariablePrice: 1234.567,
      costAreaTotalValue: 1234.567,
      companyCodeCurrency: 'mock-string',
      companyCodeObjectCurrency: 1234.567,
      companyCodeTotalPrice: 1234.567,
      companyCodeFixedCost: 1234.567,
      companyCodeVariableCost: 1234.567,
      companyCodeFixedPrice: 1234.567,
      companyCodeVariablePrice: 1234.567,
    },
    quantities: {
      quantity: 1234.567,
      lotsize: 1234.567,
      lotsizeUnit: 'mock-lotsizeUnit',
      baseUnitOfMeasure: 'mock-baseUnitOfMeasure',
      materialBudgetYearRequirement: 1234.567,
      materialAnnualDemandCount: 1234.567,
      assemblyScrapQuantity: 1234.567,
      componentScrapQuantity: 1234.567,
    },
    manufacturing: {
      staffSetupCosts: 1234.567,
      staffProductionCosts: 1234.567,
      machineProductionCosts: 1234.567,
      machineSetupCosts: 1234.567,
      toolCosts: 1234.567,
      cycleTime: 1234.567,
      additionalTimeMachine: 1234.567,
      cycles: 1234.567,
      cyclesUnit: 'mock-cyclesUnit',
      totalProductionTime: 1234.567,
      setupTime: 1234.567,
      standardValueUnit: 'mock-standardValueUnit',
      headcountProduction: 1234.567,
      headcountSetup: 1234.567,
      staffTariff: 1234.567,
      machineTariff: 1234.567,
      toolTariff: 1234.567,
      tariffUnit: 1234.567,
    },
  },
  {
    rowId: 4,
    level: 3,
    materialDesignation: 'FE-2314',
    materialNumber: 'mock-materialNumber',
    parentMaterialNumber: 'mock-materialNumber',
    costShareOfParent: 0.4,
    predecessorsInTree: ['FE-2313', 'FE-2315 ', 'FE-2314'],
    itemCategory: 'I',
    bomIdentifier: {
      costingDate: '2017-11-01',
      costingNumber: 'mock-costingNumber',
      costingType: 'mock-costingType',
      version: 'mock-version',
      enteredManually: true,
      referenceObject: 'mock-referenceObject',
      valuationVariant: 'mock-valuationVariant',
    },
    bomInformation: {
      productCostingGroup: 'mock-productCostingGroup',
      productCostingPlanCounter: 'mock-productCostingPlanCounter',
      productCostingBomNumber: 'mock-productCostingBomNumber',
      productCostingBomUsage: 'mock-productCostingBomUsage',
      productCostingBomAlternative: 'mock-productCostingBomAlternative',
    },
    materialCharacteristics: {
      length: 1234.567,
      width: 1234.567,
      height: 1234.567,
      unitOfDimension: 'mock-unitOfDimension',
      grossWeight: 1234.567,
      netWeight: 1234.567,
      unitOfWeight: 'mock-unitOfWeight',
      materialShortDescription: 'mock-materialShortDescription',
      productHierarchy: 'mock-productHierarchy',
      productHierarchyDescription: 'mock-productHierarchyDescription',
      materialIndentNumber: 'mock-materialIndentNumber',
      materialIndentNumberDescription: 'mock-materialIndentNumberDescription',
      valuationClass: 'mock-materialValuationClass',
      type: 'mock-type',
    },
    procurement: {
      plant: 'mock-plant',
      materialProcurementType: 'mock-materialProcurementType',
      vendor: 'mock-vendor',
      vendorDescription: 'mock-vendorDescription',
    },
    workCenter: {
      workCenter: 'mock-workCenter',
      workCenterDescription: 'mock-workCenterDescription',
      costCenter: 'mock-costCenter',
      costCenterDescription: 'mock-costCenterDescription',
      profitCenter: 'mock-profitCenter',
      capacityUtilizationRate: 1234.567,
      replacementValue: 1234.567,
    },
    costing: {
      costElements: 1234.567,
      costArea: 'mock-costArea',
      costAreaCurrency: 'mock-costAreaCurrency',
      costAreaTotalPrice: 1234.567,
      costAreaFixedCost: 1234.567,
      costAreaVariableCost: 1234.567,
      costAreaFixedPrice: 1234.567,
      costAreaVariablePrice: 1234.567,
      costAreaTotalValue: 1234.567,
      companyCodeCurrency: 'mock-string',
      companyCodeObjectCurrency: 1234.567,
      companyCodeTotalPrice: 1234.567,
      companyCodeFixedCost: 1234.567,
      companyCodeVariableCost: 1234.567,
      companyCodeFixedPrice: 1234.567,
      companyCodeVariablePrice: 1234.567,
    },
    quantities: {
      quantity: 1234.567,
      lotsize: 1234.567,
      lotsizeUnit: 'mock-lotsizeUnit',
      baseUnitOfMeasure: 'mock-baseUnitOfMeasure',
      materialBudgetYearRequirement: 1234.567,
      materialAnnualDemandCount: 1234.567,
      assemblyScrapQuantity: 1234.567,
      componentScrapQuantity: 1234.567,
    },
    manufacturing: {
      staffSetupCosts: 1234.567,
      staffProductionCosts: 1234.567,
      machineProductionCosts: 1234.567,
      machineSetupCosts: 1234.567,
      toolCosts: 1234.567,
      cycleTime: 1234.567,
      additionalTimeMachine: 1234.567,
      cycles: 1234.567,
      cyclesUnit: 'mock-cyclesUnit',
      totalProductionTime: 1234.567,
      setupTime: 1234.567,
      standardValueUnit: 'mock-standardValueUnit',
      headcountProduction: 1234.567,
      headcountSetup: 1234.567,
      staffTariff: 1234.567,
      machineTariff: 1234.567,
      toolTariff: 1234.567,
      tariffUnit: 1234.567,
    },
  },
  {
    rowId: 5,
    level: 2,
    materialDesignation: 'FE-2311',
    materialNumber: 'mock-materialNumber',
    parentMaterialNumber: 'mock-materialNumber',
    costShareOfParent: 0.4,
    predecessorsInTree: ['FE-2313', 'FE-2311'],
    itemCategory: 'I',
    bomIdentifier: {
      costingDate: '2017-11-01',
      costingNumber: 'mock-costingNumber',
      costingType: 'mock-costingType',
      version: 'mock-version',
      enteredManually: true,
      referenceObject: 'mock-referenceObject',
      valuationVariant: 'mock-valuationVariant',
    },
    bomInformation: {
      productCostingGroup: 'mock-productCostingGroup',
      productCostingPlanCounter: 'mock-productCostingPlanCounter',
      productCostingBomNumber: 'mock-productCostingBomNumber',
      productCostingBomUsage: 'mock-productCostingBomUsage',
      productCostingBomAlternative: 'mock-productCostingBomAlternative',
    },
    materialCharacteristics: {
      length: 1234.567,
      width: 1234.567,
      height: 1234.567,
      unitOfDimension: 'mock-unitOfDimension',
      grossWeight: 1234.567,
      netWeight: 1234.567,
      unitOfWeight: 'mock-unitOfWeight',
      materialShortDescription: 'mock-materialShortDescription',
      productHierarchy: 'mock-productHierarchy',
      productHierarchyDescription: 'mock-productHierarchyDescription',
      materialIndentNumber: 'mock-materialIndentNumber',
      materialIndentNumberDescription: 'mock-materialIndentNumberDescription',
      valuationClass: 'mock-materialValuationClass',
      type: 'mock-type',
    },
    procurement: {
      plant: 'mock-plant',
      materialProcurementType: 'mock-materialProcurementType',
      vendor: 'mock-vendor',
      vendorDescription: 'mock-vendorDescription',
    },
    workCenter: {
      workCenter: 'mock-workCenter',
      workCenterDescription: 'mock-workCenterDescription',
      costCenter: 'mock-costCenter',
      costCenterDescription: 'mock-costCenterDescription',
      profitCenter: 'mock-profitCenter',
      capacityUtilizationRate: 1234.567,
      replacementValue: 1234.567,
    },
    costing: {
      costElements: 1234.567,
      costArea: 'mock-costArea',
      costAreaCurrency: 'mock-costAreaCurrency',
      costAreaTotalPrice: 1234.567,
      costAreaFixedCost: 1234.567,
      costAreaVariableCost: 1234.567,
      costAreaFixedPrice: 1234.567,
      costAreaVariablePrice: 1234.567,
      costAreaTotalValue: 1234.567,
      companyCodeCurrency: 'mock-string',
      companyCodeObjectCurrency: 1234.567,
      companyCodeTotalPrice: 1234.567,
      companyCodeFixedCost: 1234.567,
      companyCodeVariableCost: 1234.567,
      companyCodeFixedPrice: 1234.567,
      companyCodeVariablePrice: 1234.567,
    },
    quantities: {
      quantity: 1234.567,
      lotsize: 1234.567,
      lotsizeUnit: 'mock-lotsizeUnit',
      baseUnitOfMeasure: 'mock-baseUnitOfMeasure',
      materialBudgetYearRequirement: 1234.567,
      materialAnnualDemandCount: 1234.567,
      assemblyScrapQuantity: 1234.567,
      componentScrapQuantity: 1234.567,
    },
    manufacturing: {
      staffSetupCosts: 1234.567,
      staffProductionCosts: 1234.567,
      machineProductionCosts: 1234.567,
      machineSetupCosts: 1234.567,
      toolCosts: 1234.567,
      cycleTime: 1234.567,
      additionalTimeMachine: 1234.567,
      cycles: 1234.567,
      cyclesUnit: 'mock-cyclesUnit',
      totalProductionTime: 1234.567,
      setupTime: 1234.567,
      standardValueUnit: 'mock-standardValueUnit',
      headcountProduction: 1234.567,
      headcountSetup: 1234.567,
      staffTariff: 1234.567,
      machineTariff: 1234.567,
      toolTariff: 1234.567,
      tariffUnit: 1234.567,
    },
  },
];
